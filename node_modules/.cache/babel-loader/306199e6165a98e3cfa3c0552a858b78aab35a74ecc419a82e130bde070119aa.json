{"ast":null,"code":"var _jsxFileName = \"/home/sonu/opayl/html/frontend/src/components/AuthVerification/AuthVarificationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Login as LoginIcon } from \"@mui/icons-material\";\nimport { useLocation } from \"react-router-dom\";\nimport './AuthVerification.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from \"react-redux\";\nimport urls from \"../../redux/urls\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthVerificationForm = props => {\n  _s();\n  const [verification, setVerification] = useState(\"\");\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const loginId = props.auth.user.id;\n  let data = {\n    id: loginId,\n    otp: verification\n  };\n  const verifiedCode = e => {\n    e.preventDefault();\n    veriFication(data);\n    setIsLoading(true);\n  };\n  const veriFication = data => {\n    console.log(data);\n    fetch(`${urls.base + urls.verificationCode}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(result => {\n      if (result && location.pathname === '/login') {\n        setIsLoading(false);\n        toast.success(result.message, {\n          position: \"top-right\",\n          className: \"app_toast\",\n          autoClose: 1000,\n          onClose: () => {\n            window.location.href = '/';\n          }\n        });\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header text-center\",\n        children: \"Verification \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            className: \"loader-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 22\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputEmail1\",\n                className: \"form-label\",\n                children: [\"Two Factor Authentication\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                required: true,\n                value: verification,\n                onChange: e => setVerification(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"clearfix\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: verifiedCode,\n                className: \"btn btn-success btn-success-dark float-right\",\n                children: [/*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 33\n                }, this), \" Continue\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthVerificationForm, \"rwIJuamGA9mN9BmpviIWCgPbqIs=\", false, function () {\n  return [useLocation];\n});\n_c = AuthVerificationForm;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(AuthVerificationForm);\nvar _c;\n$RefreshReg$(_c, \"AuthVerificationForm\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Login","LoginIcon","useLocation","connect","urls","ToastContainer","toast","CircularProgress","AuthVerificationForm","props","verification","setVerification","location","isLoading","setIsLoading","loginId","auth","user","id","data","otp","verifiedCode","e","preventDefault","veriFication","console","log","fetch","base","verificationCode","method","headers","Accept","body","JSON","stringify","then","res","json","result","pathname","success","message","position","className","autoClose","onClose","window","href","catch","target","value","mapStateToProps","state"],"sources":["/home/sonu/opayl/html/frontend/src/components/AuthVerification/AuthVarificationForm.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Login as LoginIcon } from \"@mui/icons-material\";\nimport { useLocation } from \"react-router-dom\";\nimport './AuthVerification.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from \"react-redux\";\nimport urls from \"../../redux/urls\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\nconst AuthVerificationForm = (props) => {\n\n\n    const [verification, setVerification] = useState(\"\");\n    const location = useLocation();\n    const [isLoading, setIsLoading] = useState(false)\n    const loginId = props.auth.user.id;\n\n\n\n    let data = {\n        id: loginId,\n        otp: verification\n    }\n\n    const verifiedCode = (e) => {\n        e.preventDefault()\n        veriFication(data)\n        setIsLoading(true)\n    }\n\n\n    const veriFication = (data) => {\n        console.log(data);\n\n        fetch(`${urls.base + urls.verificationCode}`, {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => res.json())\n            .then((result) => {\n                if(result && location.pathname === '/login'){\n                    setIsLoading(false)\n                    toast.success(result.message, {\n                        position: \"top-right\",\n                        className: \"app_toast\",\n                        autoClose: 1000,\n                        onClose: () => {\n                            window.location.href = '/';\n                        },\n                    })\n                }\n             \n            }).catch((e) => {\n                console.log(e)\n            })\n\n    };\n\n\n\n\n\n\n    return (\n        <Fragment>\n            <ToastContainer />\n            <div className=\"card shadow\">\n                <div className=\"card-header text-center\">Verification </div>\n\n                {\n                    isLoading ? <>\n                     <div className=\"loader\">\n                                <CircularProgress className=\"loader-spinner\" />\n                            </div> \n                    \n                    </>\n\n                    :\n\n\n                    <>\n                    \n                    <div className=\"card-body\">\n                    <form>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n                                Two Factor Authentication<span className=\"text-danger\"> *</span>\n                            </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                required\n                                value={verification}\n                                onChange={(e) => setVerification(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"clearfix\">\n                            <button\n                                onClick={verifiedCode}\n                                className=\"btn btn-success btn-success-dark float-right\"\n                            >\n                                <LoginIcon /> Continue\n                            </button>\n                        </div>\n\n                    </form>\n                </div>\n                    </>\n                }\n\n               \n                \n            </div>\n            <ToastContainer />\n\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(AuthVerificationForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
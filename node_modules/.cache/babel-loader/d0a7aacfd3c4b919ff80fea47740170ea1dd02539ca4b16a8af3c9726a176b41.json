{"ast":null,"code":"var _jsxFileName = \"/home/sonu/opayl/html/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/bootstrap.min.css\";\nimport { Login as LoginIcon } from \"@mui/icons-material\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../redux/actions/authAction\";\nimport AuthVerificationForm from \"../components/AuthVerification/AuthVarificationForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  console.log(\"login fgdfgfdgdfgdf\", props);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(null);\n  const [waiting, setWaiting] = useState(false);\n  // const [verificationForm,setVerificationForm] = useState(false)\n  // const [loginForm,setLoginForm] = useState(true);\n  const location = useLocation();\n  useEffect(() => {\n    if (props.auth && props.auth.token) {\n      if (props.auth.isAuthenticated === true && location.pathname === '/login') {\n        window.location.href = '/';\n      } else {\n        setLoginError(\"Invalid Login details\");\n        setWaiting(false);\n      }\n    } else {\n      if (props.auth.two_factor_authentication) {\n        // setVerificationForm(true)\n        // setLoginForm(false)\n        window.location.href = '/factor-authenticate';\n      }\n    }\n  }, [props.auth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5 offset-md-4 col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header text-center\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              \"ng-init\": \"user={}\",\n              children: [loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning\",\n                children: \"Username or password is invalid!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: () => {\n                  setWaiting(true);\n                  props.login({\n                    username,\n                    password\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"exampleInputEmail1\",\n                    className: \"form-label\",\n                    children: [\"Username \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 32\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    required: true,\n                    value: username,\n                    onChange: e => setUsername(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"exampleInputPassword1\",\n                    className: \"form-label\",\n                    children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 32\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"form-control\",\n                    id: \"exampleInputPassword1\",\n                    required: true,\n                    value: password,\n                    onChange: e => setPassword(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"clearfix\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    className: \"btn-link float-left mt-2\",\n                    to: \"/forgot\",\n                    children: \"Forgot password?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    // type=\"submit\"\n                    onClick: () => {\n                      setWaiting(true);\n                      props.login({\n                        username,\n                        password\n                      });\n                    },\n                    disabled: waiting || username === \"\" || password === \"\",\n                    className: \"btn btn-success btn-success-dark float-right\",\n                    children: [/*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 23\n                    }, this), \" \\xA0 \", !waiting ? \"Login\" : \"Logging in...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3\",\n                  children: [\"If you don't have account \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"btn-link\",\n                    to: \"/register\",\n                    children: \"Register now\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ztS2sGAy+7UtcRyywbwNuQvWh0M=\", false, function () {\n  return [useLocation];\n});\n_c = Login;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps, {\n  login\n})(Login);\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Login","LoginIcon","Link","useLocation","connect","login","AuthVerificationForm","props","console","log","username","setUsername","password","setPassword","loginError","setLoginError","waiting","setWaiting","location","auth","token","isAuthenticated","pathname","window","href","two_factor_authentication","e","target","value","mapStateToProps","state"],"sources":["/home/sonu/opayl/html/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/bootstrap.min.css\";\nimport { Login as LoginIcon } from \"@mui/icons-material\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../redux/actions/authAction\";\nimport AuthVerificationForm from \"../components/AuthVerification/AuthVarificationForm\";\n\nconst Login = (props) => {\n\n  console.log(\"login fgdfgfdgdfgdf\",props)\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(null);\n  const [waiting, setWaiting] = useState(false);\n  // const [verificationForm,setVerificationForm] = useState(false)\n  // const [loginForm,setLoginForm] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (props.auth && props.auth.token) {\n      if(props.auth.isAuthenticated===true && location.pathname === '/login'){\n          window.location.href='/';\n      } else {\n        setLoginError(\"Invalid Login details\");\n        setWaiting(false)\n      }\n    }\n    else{\n      if(props.auth.two_factor_authentication){\n        // setVerificationForm(true)\n        // setLoginForm(false)\n        window.location.href='/factor-authenticate';\n      }\n    }\n  }, [props.auth]);\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n          <div className=\"col-md-5 offset-md-4 col-12\">\n\n{/* {\n  loginForm ?\n   <> */}\n     <div className=\"card shadow\">\n              <div className=\"card-header text-center\">Login</div>\n              <div className=\"card-body\" ng-init=\"user={}\">\n                {loginError && (\n                  <div className=\"alert alert-warning\">\n                    Username or password is invalid!\n                  </div>\n                )}\n                <form onSubmit={() => {\n                  setWaiting(true)\n                  props.login({ username, password })\n                }}>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n                      Username <span className=\"text-danger\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      required\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n                      Password <span className=\"text-danger\">*</span>\n                    </label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"exampleInputPassword1\"\n                      required\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"clearfix\">\n                    <Link className=\"btn-link float-left mt-2\" to=\"/forgot\">\n                      Forgot password?\n                    </Link>\n\n                    <button\n                      // type=\"submit\"\n                      onClick={() => {\n                        setWaiting(true)\n                        props.login({ username, password })\n                     \n                      }\n                      }\n                      disabled={waiting || username === \"\" || password === \"\"}\n                      className=\"btn btn-success btn-success-dark float-right\"\n                    >\n                      <LoginIcon /> &nbsp; {!waiting ? \"Login\" : \"Logging in...\"}\n                      \n                    </button>\n                  </div>\n                  <div className=\"mt-3\">\n                    If you don't have account &nbsp;\n                    <Link className=\"btn-link\" to=\"/register\">\n                      Register now\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n  {/* </>\n  :\n null\n} */}\n\n          \n            {/* {\n              verificationForm ? <AuthVerificationForm  /> : null \n            } */}\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
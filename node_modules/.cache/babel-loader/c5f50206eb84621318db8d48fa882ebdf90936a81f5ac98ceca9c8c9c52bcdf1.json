{"ast":null,"code":"var _jsxFileName = \"/home/sonu/opayl/html/frontend/src/components/AuthenticateEnable/TwoFactorEnable.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Container } from \"@mui/material\";\nimport './TWoFactorEnable.css';\nimport { connect } from \"react-redux\";\nimport urls from \"../../redux/urls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwoFactorEnable = props => {\n  _s();\n  console.log(\"qrcode props jkldjsfkj===================> qrCodegenrater\", props);\n  const [qrImage, setQrImage] = useState([]);\n  const [loginUser, setLoginUser] = useState([]);\n  const [loginId, setLoginId] = useState();\n  const [activeVal, setActiveVal] = useState(1);\n  let activateDetails = {\n    id: loginId,\n    twofacr: activeVal\n  };\n  useEffect(() => {\n    // if(loginId){\n    //     props.qrCodegenrater(loginId)\n    // }\n\n    if (props.auth.user) {\n      setLoginUser(props.auth.user);\n      setLoginId(props.auth.user.id);\n    }\n\n    // if(props.auth){\n    //     setQrImage(props.auth.qrcodeImage.image)\n    // }\n\n    qrCodegenrater(loginId);\n  }, []);\n  const qrCodegenrater = loginId => {\n    fetch(`${urls.base + urls.QrCode}?id=${loginId}`).then(result => result.json()).then(qrdata => {\n      console.log(\"qrdata\", qrdata);\n      if (qrdata) {\n        setQrImage(qrdata.qrcode.image);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  console.log(\"qrImage fgffg\", qrImage);\n  let firstremive = qrImage.slice(2);\n  let image = firstremive.lastIndexOf(' ');\n  console.log(\"qrImage fgffg\", image);\n  const acivateUserAccount = () => {\n    activateTwoFactUser(activateDetails);\n  };\n  const activateTwoFactUser = activateDetails => {\n    fetch(`${urls.base + urls.twoFactActive}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(activateDetails)\n    }).then(res => res.json()).then(result => {\n      console.log(\"activate\", result);\n      setActiveVal(activeVal === 1 ? 0 : 1);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"factor_authencate\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qr_code\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/jpeg;base64,${qrImage}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"text-white btn btn-success font-weight-bold mr-1\",\n            onClick: acivateUserAccount,\n            children: [\" \", activeVal === 1 ? \"activate\" : \"Deactivate\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(TwoFactorEnable, \"F2so/RVw57mY55zr1LmuDJvDOfg=\");\n_c = TwoFactorEnable;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(TwoFactorEnable);\nvar _c;\n$RefreshReg$(_c, \"TwoFactorEnable\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Container","connect","urls","TwoFactorEnable","props","console","log","qrImage","setQrImage","loginUser","setLoginUser","loginId","setLoginId","activeVal","setActiveVal","activateDetails","id","twofacr","auth","user","qrCodegenrater","fetch","base","QrCode","then","result","json","qrdata","qrcode","image","catch","error","firstremive","slice","lastIndexOf","acivateUserAccount","activateTwoFactUser","twoFactActive","method","headers","Accept","body","JSON","stringify","res","e","mapStateToProps","state"],"sources":["/home/sonu/opayl/html/frontend/src/components/AuthenticateEnable/TwoFactorEnable.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Container } from \"@mui/material\";\nimport './TWoFactorEnable.css';\nimport { connect } from \"react-redux\";\nimport urls from \"../../redux/urls\";\n\n\n\nconst TwoFactorEnable=(props)=>{\n\nconsole.log(\"qrcode props jkldjsfkj===================> qrCodegenrater\",props)\n\n    const [qrImage ,setQrImage] = useState([]);\n    const [loginUser,setLoginUser] = useState([]);\n    const  [loginId, setLoginId] = useState();\n    const [activeVal, setActiveVal] = useState(1);\n\n\n    let activateDetails = {\n        id:loginId,\n        twofacr:activeVal\n      }\n\nuseEffect(()=>{\n// if(loginId){\n//     props.qrCodegenrater(loginId)\n// }\n    \n    if(props.auth.user){\n        setLoginUser(props.auth.user)\n        setLoginId(props.auth.user.id)\n    }\n\n// if(props.auth){\n//     setQrImage(props.auth.qrcodeImage.image)\n// }\n\n\nqrCodegenrater(loginId)\n\n},[])\n\n\n const qrCodegenrater = (loginId) =>{\n  \n    fetch(`${urls.base + urls.QrCode}?id=${loginId}`)\n    .then((result)=> result.json()).then((qrdata)=>{\n      console.log(\"qrdata\",qrdata)\n      if(qrdata){\n        setQrImage(qrdata.qrcode.image);\n      }\n    }).catch((error)=>{\n      console.log(error)\n    })\n  \n  };\n  \n\nconsole.log(\"qrImage fgffg\",qrImage)\n\nlet firstremive = qrImage.slice(2);\nlet image = firstremive.lastIndexOf(' ');\n\nconsole.log(\"qrImage fgffg\",image)\n\n\n\nconst acivateUserAccount=()=>{\n    activateTwoFactUser(activateDetails)\n}\n\n\n\n const activateTwoFactUser=(activateDetails)=>{\n    fetch(`${urls.base + urls.twoFactActive}`,{\n      method: \"POST\",\n      headers:{\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(activateDetails)\n    }).then((res)=> res.json())\n    .then((result)=>{\n    console.log(\"activate\", result)\n    setActiveVal(activeVal === 1 ? 0 : 1)\n      \n    })\n    .catch((e)=>{\n      console.log(e)\n    })\n}\n\n\n    return(\n        <Fragment>\n          <section className=\"factor_authencate\">\n         <Container>\n          <div className=\"row\">\n            <div className=\"qr_code\">\n    \n                <img src={`data:image/jpeg;base64,${qrImage}`} />\n            </div>\n <button type=\"button\" className=\"text-white btn btn-success font-weight-bold mr-1\" onClick={acivateUserAccount} > {activeVal === 1 ? \"activate\" : \"Deactivate\" }</button> \n\n          </div>\n         </Container>\n          </section>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n  });\n\nexport default connect(mapStateToProps) (TwoFactorEnable)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
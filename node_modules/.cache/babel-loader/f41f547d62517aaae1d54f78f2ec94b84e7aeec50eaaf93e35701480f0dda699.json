{"ast":null,"code":"var _jsxFileName = \"/home/sonu/opayl/html/frontend/src/components/AuthenticateEnable/TwoFactorEnable.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Container } from \"@mui/material\";\nimport './TWoFactorEnable.css';\nimport { connect } from \"react-redux\";\nimport urls from \"../../redux/urls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwoFactorEnable = props => {\n  _s();\n  console.log(\"qrcode props jkldjsfkj===================> qrCodegenrater\", props);\n  const [qrImage, setQrImage] = useState([]);\n  const [loginUser, setLoginUser] = useState([]);\n  const [loginId, setLoginId] = useState();\n  useEffect(() => {\n    if (loginId) {\n      props.qrCodegenrater(loginId);\n    }\n    if (props.auth.user) {\n      setLoginUser(props.auth.user);\n      setLoginId(props.auth.user.id);\n    }\n    if (props.auth) {\n      setQrImage(props.auth.qrcodeImage.image);\n    }\n    qrCodegenrater();\n  }, []);\n  const qrCodegenrater = data => {\n    fetch(`${urls.base + urls.QrCode}?id=${data}`).then(result => result.json()).then(qrdata => {\n      console.log(\"qrdata\", qrdata);\n      if (qrdata) {\n        dispatch({\n          type: QRCODEIMAGE,\n          payload: qrdata\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  let image = qrImage;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"factor_authencate\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qr_code\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/jpeg;base64,${image}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(TwoFactorEnable, \"lCSg2yxRC3/V7noX9c8/p+1uRe8=\");\n_c = TwoFactorEnable;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(TwoFactorEnable);\nvar _c;\n$RefreshReg$(_c, \"TwoFactorEnable\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Container","connect","urls","TwoFactorEnable","props","console","log","qrImage","setQrImage","loginUser","setLoginUser","loginId","setLoginId","qrCodegenrater","auth","user","id","qrcodeImage","image","data","fetch","base","QrCode","then","result","json","qrdata","dispatch","type","QRCODEIMAGE","payload","catch","error","mapStateToProps","state"],"sources":["/home/sonu/opayl/html/frontend/src/components/AuthenticateEnable/TwoFactorEnable.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Container } from \"@mui/material\";\nimport './TWoFactorEnable.css';\nimport { connect } from \"react-redux\";\nimport urls from \"../../redux/urls\";\n\n\n\nconst TwoFactorEnable=(props)=>{\n\nconsole.log(\"qrcode props jkldjsfkj===================> qrCodegenrater\",props)\n\n    const [qrImage ,setQrImage] = useState([]);\n    const [loginUser,setLoginUser] = useState([]);\n    const  [loginId, setLoginId] = useState();\n\nuseEffect(()=>{\nif(loginId){\n    props.qrCodegenrater(loginId)\n}\n    \n    if(props.auth.user){\n        setLoginUser(props.auth.user)\n        setLoginId(props.auth.user.id)\n    }\n\nif(props.auth){\n    setQrImage(props.auth.qrcodeImage.image)\n}\n\n\nqrCodegenrater()\n\n},[])\n\n\n const qrCodegenrater = (data) =>{\n  \n    fetch(`${urls.base + urls.QrCode}?id=${data}`)\n    .then((result)=> result.json()).then((qrdata)=>{\n      console.log(\"qrdata\",qrdata)\n      if(qrdata){\n  \n        dispatch({\n          type:QRCODEIMAGE,\n          payload:qrdata\n        })\n      }\n    }).catch((error)=>{\n      console.log(error)\n    })\n  \n  };\n  \n\nlet image = qrImage \n\n\n\n   \n\n    return(\n        <Fragment>\n          <section className=\"factor_authencate\">\n         <Container>\n          <div className=\"row\">\n            <div className=\"qr_code\">\n    \n                <img src={`data:image/jpeg;base64,${image}`} />\n            </div>\n          </div>\n         </Container>\n          </section>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n  });\n\nexport default connect(mapStateToProps) (TwoFactorEnable)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAO,uBAAuB;AAC9B,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,IAAI,MAAM,kBAAkB;AAAC;AAIpC,MAAMC,eAAe,GAAEC,KAAK,IAAG;EAAA;EAE/BC,OAAO,CAACC,GAAG,CAAC,2DAA2D,EAACF,KAAK,CAAC;EAE1E,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAACC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAO,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,EAAE;EAE7CD,SAAS,CAAC,MAAI;IACd,IAAGa,OAAO,EAAC;MACPP,KAAK,CAACS,cAAc,CAACF,OAAO,CAAC;IACjC;IAEI,IAAGP,KAAK,CAACU,IAAI,CAACC,IAAI,EAAC;MACfL,YAAY,CAACN,KAAK,CAACU,IAAI,CAACC,IAAI,CAAC;MAC7BH,UAAU,CAACR,KAAK,CAACU,IAAI,CAACC,IAAI,CAACC,EAAE,CAAC;IAClC;IAEJ,IAAGZ,KAAK,CAACU,IAAI,EAAC;MACVN,UAAU,CAACJ,KAAK,CAACU,IAAI,CAACG,WAAW,CAACC,KAAK,CAAC;IAC5C;IAGAL,cAAc,EAAE;EAEhB,CAAC,EAAC,EAAE,CAAC;EAGJ,MAAMA,cAAc,GAAIM,IAAI,IAAI;IAE7BC,KAAK,CAAE,GAAElB,IAAI,CAACmB,IAAI,GAAGnB,IAAI,CAACoB,MAAO,OAAMH,IAAK,EAAC,CAAC,CAC7CI,IAAI,CAAEC,MAAM,IAAIA,MAAM,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAAEG,MAAM,IAAG;MAC7CrB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACoB,MAAM,CAAC;MAC5B,IAAGA,MAAM,EAAC;QAERC,QAAQ,CAAC;UACPC,IAAI,EAACC,WAAW;UAChBC,OAAO,EAACJ;QACV,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CAACK,KAAK,CAAEC,KAAK,IAAG;MAChB3B,OAAO,CAACC,GAAG,CAAC0B,KAAK,CAAC;IACpB,CAAC,CAAC;EAEJ,CAAC;EAGH,IAAId,KAAK,GAAGX,OAAO;EAMf,oBACI,QAAC,QAAQ;IAAA,uBACP;MAAS,SAAS,EAAC,mBAAmB;MAAA,uBACvC,QAAC,SAAS;QAAA,uBACT;UAAK,SAAS,EAAC,KAAK;UAAA,uBAClB;YAAK,SAAS,EAAC,SAAS;YAAA,uBAEpB;cAAK,GAAG,EAAG,0BAAyBW,KAAM;YAAE;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA;QAC7C;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA;IACK;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACD;AAEnB,CAAC;AAAA,GAnEKf,eAAe;AAAA,KAAfA,eAAe;AAqErB,MAAM8B,eAAe,GAAIC,KAAK,KAAM;EAChCpB,IAAI,EAAEoB,KAAK,CAACpB;AACd,CAAC,CAAC;AAEJ,eAAeb,OAAO,CAACgC,eAAe,CAAC,CAAE9B,eAAe,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/sonu/opayl/html/frontend/src/components/Donut3dChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nimport { colors } from \"./Colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nhighcharts3d(Highcharts);\nconst Donut3dChart = props => {\n  _s();\n  const [categories, setCategories] = useState(null);\n  //console.log(categories);\n  useEffect(() => {\n    setCategories(props.budgets[props.bindex].categories);\n  });\n  let grandTotal = 0;\n  if (categories && categories.length > 0) {\n    categories.map((category, index) => {\n      if (category.category_type !== 'income') {\n        let mothlyTotal = 0;\n        category.items.map(item => {\n          mothlyTotal = mothlyTotal + (item.is_active ? Number(item.monthly) : 0);\n        });\n        categories[index].weekly = mothlyTotal / 4;\n        categories[index].biweekly = mothlyTotal / 2;\n        categories[index].monthly = mothlyTotal;\n        categories[index].yearly = mothlyTotal * 12;\n        grandTotal = grandTotal + categories[index].monthly;\n      }\n    });\n  }\n  Highcharts.setOptions({\n    colors: [\"#FFEA5D\", \"#97EE5B\", \"#5B8CFB\", \"#ED6559\", \"#B067FD\", \"#F5AE5E\", \"#5E5BF2\", \"#CC51A8\"]\n  });\n  var refinedData = [];\n  categories && categories.map((category, index) => {\n    if (category.category_type !== 'income') {\n      refinedData.push([`<span style='stroke-width:0;fill:#fff;font-size: 0.8rem; text-align: center'>${category.category_name}-<span style='fill: orange;'>${(category.monthly / grandTotal * 100).toFixed(2)}</span>: <span style='fill: #6AD7BB;'>${category.monthly}</span> </span>`, category.monthly, colors[index]]);\n    }\n  });\n  const options = {\n    chart: {\n      type: \"pie\",\n      style: {\n        fontFamily: '\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",\"Liberation Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"'\n      },\n      backgroundColor: \"#3b38d1\",\n      // plotOptions: {\n      //   size: \"100%\",\n      // },\n      options3d: {\n        enabled: true,\n        alpha: 20\n      }\n    },\n    title: {\n      text: `${props.budgets[props.bindex].name}' Typical <br>Monthly Budget <br><br><span style=\"font-size:1.6rem;fill:#22c9e4\">$${grandTotal ? grandTotal.toFixed(2) : 0}</span>`,\n      widthAdjust: -360,\n      align: \"center\",\n      verticalAlign: \"middle\",\n      y: grandTotal ? 50 : 30,\n      style: {\n        color: \"#fff\",\n        fontSize: 18,\n        fontWeight: \"bold\"\n      }\n    },\n    subtitle: {\n      text: `Summary of ${props.budgets[props.bindex].name} Monthly Budgeted Expences`,\n      widthAdjust: \"-10\",\n      style: {\n        color: \"#fff\",\n        fontSize: \"1.7rem\",\n        fontWeight: \"bolder\"\n      }\n    },\n    plotOptions: {\n      pie: {\n        depth: 100,\n        innerSize: 250,\n        // depth: 114,\n        size: 340,\n        startAngle: -65,\n        dataLabels: {\n          style: {\n            fontSize: \"14px\"\n          }\n        }\n      },\n      series: {\n        dataLabels: {\n          color: \"white\"\n        }\n      }\n    },\n    series: [{\n      name: \"Value\",\n      data: refinedData\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Donut3dChart, \"SiPFw5tA98CDyGR/SeO/6EcCp74=\");\n_c = Donut3dChart;\nexport default Donut3dChart;\nvar _c;\n$RefreshReg$(_c, \"Donut3dChart\");","map":{"version":3,"names":["React","useState","useEffect","Highcharts","HighchartsReact","highcharts3d","colors","Donut3dChart","props","categories","setCategories","budgets","bindex","grandTotal","length","map","category","index","category_type","mothlyTotal","items","item","is_active","Number","monthly","weekly","biweekly","yearly","setOptions","refinedData","push","category_name","toFixed","options","chart","type","style","fontFamily","backgroundColor","options3d","enabled","alpha","title","text","name","widthAdjust","align","verticalAlign","y","color","fontSize","fontWeight","subtitle","plotOptions","pie","depth","innerSize","size","startAngle","dataLabels","series","data"],"sources":["/home/sonu/opayl/html/frontend/src/components/Donut3dChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nimport { colors } from \"./Colors\";\n\nhighcharts3d(Highcharts);\nconst Donut3dChart = (props) => {\n\n  const [categories, setCategories] = useState(null);\n    //console.log(categories);\n    useEffect(() => {\n        setCategories(props.budgets[props.bindex].categories);\n    });\n\n    let grandTotal = 0;\n    if (categories && categories.length > 0) {\n        categories.map((category, index) => {\n            if (category.category_type !== 'income') {\n                let mothlyTotal = 0;\n                category.items.map(item => {\n                    mothlyTotal = mothlyTotal + ((item.is_active) ? Number(item.monthly) : 0)\n                })\n                categories[index].weekly = mothlyTotal / 4;\n                categories[index].biweekly = mothlyTotal / 2;\n                categories[index].monthly = mothlyTotal;\n                categories[index].yearly = mothlyTotal * 12;\n                grandTotal = grandTotal + categories[index].monthly;\n            }\n        })\n    }\n\n  Highcharts.setOptions({\n    colors: [\n      \"#FFEA5D\",\n      \"#97EE5B\",\n      \"#5B8CFB\",\n      \"#ED6559\",\n      \"#B067FD\",\n      \"#F5AE5E\",\n      \"#5E5BF2\",\n      \"#CC51A8\",\n    ],\n  });\n  var refinedData = [];\n  categories &&\n  categories.map((category, index) => {\n    if (category.category_type !== 'income') {\n        refinedData.push([\n          `<span style='stroke-width:0;fill:#fff;font-size: 0.8rem; text-align: center'>${\n            category.category_name\n          }-<span style='fill: orange;'>${\n            ((category.monthly / grandTotal) * 100).toFixed(2)\n          }</span>: <span style='fill: #6AD7BB;'>${category.monthly}</span> </span>`,\n          category.monthly,colors[index]\n        ]);\n      }\n    });\n  const options = {\n    chart: {\n      type: \"pie\",\n      style: {\n        fontFamily:\n          '\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",\"Liberation Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"',\n      },\n      backgroundColor: \"#3b38d1\",\n      // plotOptions: {\n      //   size: \"100%\",\n      // },\n      options3d: {\n        enabled: true,\n        alpha: 20,\n      },\n    },\n    title: {\n      text: `${props.budgets[props.bindex].name}' Typical <br>Monthly Budget <br><br><span style=\"font-size:1.6rem;fill:#22c9e4\">$${((grandTotal)?(grandTotal).toFixed(2):0)}</span>`,\n      widthAdjust: -360,\n      align: \"center\",\n      verticalAlign: \"middle\",\n      y: ((grandTotal)?50:30),\n      style: {\n        color: \"#fff\", fontSize:18, fontWeight:\"bold\"\n      },\n    },\n    subtitle: {\n      text: `Summary of ${props.budgets[props.bindex].name} Monthly Budgeted Expences`,\n      widthAdjust: \"-10\",\n      style: { color: \"#fff\", fontSize: \"1.7rem\", fontWeight: \"bolder\"},\n    },\n    plotOptions: {\n      pie: {\n        depth: 100,\n        innerSize: 250,\n        // depth: 114,\n        size: 340,\n        startAngle: -65,\n        dataLabels: { style: { fontSize: \"14px\" } },\n      },\n      series: { dataLabels: { color: \"white\" } },\n    },\n    series: [\n      {\n        name: \"Value\",\n        data: refinedData,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </div>\n  );\n};\n\nexport default Donut3dChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
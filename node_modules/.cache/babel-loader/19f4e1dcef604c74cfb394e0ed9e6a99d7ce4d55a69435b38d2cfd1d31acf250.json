{"ast":null,"code":"var _jsxFileName = \"/home/sonu/opayl/html/frontend/src/components/AuthVerification/AuthVarificationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Login as LoginIcon } from \"@mui/icons-material\";\nimport { useLocation } from \"react-router-dom\";\nimport './AuthVerification.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from \"react-redux\";\nimport urls from \"../../redux/urls\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthVerificationForm = props => {\n  _s();\n  const [verification, setVerification] = useState(\"\");\n  const location = useLocation();\n  const loginId = props.auth.user.id;\n  let data = {\n    id: loginId,\n    otp: verification\n  };\n  const verifiedCode = e => {\n    e.preventDefault();\n    veriFication(data);\n  };\n  const veriFication = data => {\n    console.log(data);\n    fetch(`${urls.base + urls.verificationCode}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(result => {\n      if (result && location.pathname === '/login') {\n        toast.success(result.message, {\n          position: \"top-right\",\n          className: \"app_toast\",\n          autoClose: 1000,\n          onClose: () => {\n            window.location.href = '/';\n          }\n        });\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header text-center\",\n        children: \"Verification \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        \"ng-init\": \"user={}\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputEmail1\",\n              className: \"form-label\",\n              children: [\"Two Factor Authentication\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \" *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 58\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              required: true,\n              value: verification,\n              onChange: e => setVerification(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clearfix\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: verifiedCode,\n              className: \"btn btn-success btn-success-dark float-right\",\n              children: [/*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), \" Continue\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthVerificationForm, \"TEGkFYlGkvUo4Bd/H74ezHB/G8Y=\", false, function () {\n  return [useLocation];\n});\n_c = AuthVerificationForm;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(AuthVerificationForm);\nvar _c;\n$RefreshReg$(_c, \"AuthVerificationForm\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Login","LoginIcon","useLocation","connect","urls","ToastContainer","toast","AuthVerificationForm","props","verification","setVerification","location","loginId","auth","user","id","data","otp","verifiedCode","e","preventDefault","veriFication","console","log","fetch","base","verificationCode","method","headers","Accept","body","JSON","stringify","then","res","json","result","pathname","success","message","position","className","autoClose","onClose","window","href","catch","target","value","mapStateToProps","state"],"sources":["/home/sonu/opayl/html/frontend/src/components/AuthVerification/AuthVarificationForm.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Login as LoginIcon } from \"@mui/icons-material\";\nimport { useLocation } from \"react-router-dom\";\nimport './AuthVerification.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from \"react-redux\";\nimport urls from \"../../redux/urls\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst AuthVerificationForm = (props) => {\n\n\n    const [verification, setVerification] = useState(\"\");\n    const location = useLocation();\n\n\n    const loginId = props.auth.user.id;\n\n\n\n    let data = {\n        id: loginId,\n        otp: verification\n    }\n\n    const verifiedCode = (e) => {\n        e.preventDefault()\n        veriFication(data)\n    }\n\n\n    const veriFication = (data) => {\n        console.log(data);\n\n        fetch(`${urls.base + urls.verificationCode}`, {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => res.json())\n            .then((result) => {\nif(result && location.pathname === '/login'){\n    toast.success(result.message, {\n        position: \"top-right\",\n        className: \"app_toast\",\n        autoClose: 1000,\n        onClose: () => {\n            window.location.href = '/';\n        },\n    })\n}\n\n             \n            }).catch((e) => {\n                console.log(e)\n            })\n\n    };\n\n\n\n\n\n\n    return (\n        <Fragment>\n            <ToastContainer />\n            <div className=\"card shadow\">\n                <div className=\"card-header text-center\">Verification </div>\n                <div className=\"card-body\" ng-init=\"user={}\">\n                    <form>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n                                Two Factor Authentication<span className=\"text-danger\"> *</span>\n                            </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                required\n                                value={verification}\n                                onChange={(e) => setVerification(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"clearfix\">\n                            <button\n                                onClick={verifiedCode}\n                                className=\"btn btn-success btn-success-dark float-right\"\n                            >\n                                <LoginIcon /> Continue\n                            </button>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n            <ToastContainer />\n\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(AuthVerificationForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
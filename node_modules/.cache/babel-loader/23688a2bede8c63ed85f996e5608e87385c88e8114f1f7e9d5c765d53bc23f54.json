{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, CLEAR_AUTH_MSG, REGISTER_FAIL, REGISTER_SUCCESS, ACTIVATE_SUCCESS, ACTIVATE_FAIL, FORGOT_SUCCESS, FORGOT_FAIL, QRCODEIMAGE, SET_TOKEN } from \"../types\";\nconst initialState = {\n  token: null,\n  isAuthenticated: false,\n  user: null,\n  msg: null,\n  credentials: null,\n  two_factor_authentication: false,\n  twoFactoDetails: null,\n  qrcodeImage: null,\n  setToken: null\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        //credentials: action.payload.credentials,\n        twoFactoDetails: action.payload.result,\n        isAuthenticated: true,\n        msg: \"Logged in\"\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        msg: action.payload.invalid,\n        two_factor_authentication: action.payload.two_factor_authentication,\n        twoFactoDetails: null,\n        user: action.payload.user,\n        isAuthenticated: true,\n        token: action.payload.token\n      };\n    case QRCODEIMAGE:\n      return {\n        ...state,\n        qrcodeImage: action.payload.qrcode\n      };\n    case SET_TOKEN:\n      {\n        return {\n          ...state,\n          setToken: action.payload\n        };\n      }\n    case REGISTER_FAIL:\n    case REGISTER_SUCCESS:\n    case ACTIVATE_SUCCESS:\n    case ACTIVATE_FAIL:\n    case FORGOT_SUCCESS:\n    case FORGOT_FAIL:\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        msg: action.payload,\n        credentials: null\n      };\n    case CLEAR_AUTH_MSG:\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        two_factor_authentication: false,\n        msg: null,\n        credentials: null\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","CLEAR_AUTH_MSG","REGISTER_FAIL","REGISTER_SUCCESS","ACTIVATE_SUCCESS","ACTIVATE_FAIL","FORGOT_SUCCESS","FORGOT_FAIL","QRCODEIMAGE","SET_TOKEN","initialState","token","isAuthenticated","user","msg","credentials","two_factor_authentication","twoFactoDetails","qrcodeImage","setToken","state","action","type","payload","result","invalid","qrcode"],"sources":["/home/sonu/opayl/html/frontend/src/redux/reducers/authReducers.js"],"sourcesContent":["import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    CLEAR_AUTH_MSG,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    ACTIVATE_SUCCESS,\n    ACTIVATE_FAIL,\n    FORGOT_SUCCESS,\n    FORGOT_FAIL,\n    QRCODEIMAGE,\n    SET_TOKEN\n} from \"../types\";\n\nconst initialState = {\n    token: null,\n    isAuthenticated: false,\n    user: null,\n    msg: null,\n    credentials: null,\n    two_factor_authentication:false,\n    twoFactoDetails:null,\n    qrcodeImage:null,\n    setToken : null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        \n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                user: action.payload.user,\n                token: action.payload.token,\n                //credentials: action.payload.credentials,\n                twoFactoDetails:action.payload.result,\n                isAuthenticated: true,\n                msg: \"Logged in\",\n               \n            };\n        case LOGIN_FAIL:\n            return{\n                ...state,\n                msg: action.payload.invalid,\n                two_factor_authentication:action.payload.two_factor_authentication,\n                twoFactoDetails:null,\n                user:action.payload.user,\n                 isAuthenticated: true,\n                 token:action.payload.token,\n            }\n          case QRCODEIMAGE:\n              return {\n                  ...state,\n                  qrcodeImage:action.payload.qrcode\n              }\n        case SET_TOKEN:{\n            return{\n                ...state,\n                setToken:action.payload\n            }\n        }\n        case REGISTER_FAIL:\n        case REGISTER_SUCCESS:\n        case ACTIVATE_SUCCESS:\n        case ACTIVATE_FAIL:\n        case FORGOT_SUCCESS:\n        case FORGOT_FAIL:\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                msg: action.payload,\n                credentials: null,\n            };\n        case CLEAR_AUTH_MSG:\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                two_factor_authentication:false,\n                msg: null,\n                credentials: null,\n            };\n        default:\n            return state;\n    }\n}"],"mappings":"AAAA,SACIA,aAAa,EACbC,UAAU,EACVC,cAAc,EACdC,cAAc,EACdC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,EAChBC,aAAa,EACbC,cAAc,EACdC,WAAW,EACXC,WAAW,EACXC,SAAS,QACN,UAAU;AAEjB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,GAAG,EAAE,IAAI;EACTC,WAAW,EAAE,IAAI;EACjBC,yBAAyB,EAAC,KAAK;EAC/BC,eAAe,EAAC,IAAI;EACpBC,WAAW,EAAC,IAAI;EAChBC,QAAQ,EAAG;AACf,CAAC;AAED,gBAAe,YAAkC;EAAA,IAAjCC,KAAK,uEAAGV,YAAY;EAAA,IAAEW,MAAM;EACxC,QAAQA,MAAM,CAACC,IAAI;IAEf,KAAKxB,aAAa;MACd,OAAO;QACH,GAAGsB,KAAK;QACRP,IAAI,EAAEQ,MAAM,CAACE,OAAO,CAACV,IAAI;QACzBF,KAAK,EAAEU,MAAM,CAACE,OAAO,CAACZ,KAAK;QAC3B;QACAM,eAAe,EAACI,MAAM,CAACE,OAAO,CAACC,MAAM;QACrCZ,eAAe,EAAE,IAAI;QACrBE,GAAG,EAAE;MAET,CAAC;IACL,KAAKf,UAAU;MACX,OAAM;QACF,GAAGqB,KAAK;QACRN,GAAG,EAAEO,MAAM,CAACE,OAAO,CAACE,OAAO;QAC3BT,yBAAyB,EAACK,MAAM,CAACE,OAAO,CAACP,yBAAyB;QAClEC,eAAe,EAAC,IAAI;QACpBJ,IAAI,EAACQ,MAAM,CAACE,OAAO,CAACV,IAAI;QACvBD,eAAe,EAAE,IAAI;QACrBD,KAAK,EAACU,MAAM,CAACE,OAAO,CAACZ;MAC1B,CAAC;IACH,KAAKH,WAAW;MACZ,OAAO;QACH,GAAGY,KAAK;QACRF,WAAW,EAACG,MAAM,CAACE,OAAO,CAACG;MAC/B,CAAC;IACP,KAAKjB,SAAS;MAAC;QACX,OAAM;UACF,GAAGW,KAAK;UACRD,QAAQ,EAACE,MAAM,CAACE;QACpB,CAAC;MACL;IACA,KAAKrB,aAAa;IAClB,KAAKC,gBAAgB;IACrB,KAAKC,gBAAgB;IACrB,KAAKC,aAAa;IAClB,KAAKC,cAAc;IACnB,KAAKC,WAAW;IAChB,KAAKP,cAAc;MACf,OAAO;QACH,GAAGoB,KAAK;QACRT,KAAK,EAAE,IAAI;QACXE,IAAI,EAAE,IAAI;QACVD,eAAe,EAAE,KAAK;QACtBE,GAAG,EAAEO,MAAM,CAACE,OAAO;QACnBR,WAAW,EAAE;MACjB,CAAC;IACL,KAAKd,cAAc;MACf,OAAO;QACH,GAAGmB,KAAK;QACRT,KAAK,EAAE,IAAI;QACXE,IAAI,EAAE,IAAI;QACVD,eAAe,EAAE,KAAK;QACtBI,yBAAyB,EAAC,KAAK;QAC/BF,GAAG,EAAE,IAAI;QACTC,WAAW,EAAE;MACjB,CAAC;IACL;MACI,OAAOK,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\n Highcharts JS v10.3.1 (2022-10-31)\n\n 3D features for Highcharts JS\n\n License: www.highcharts.com/license\n*/\n(function (a) {\n  \"object\" === typeof module && module.exports ? (a[\"default\"] = a, module.exports = a) : \"function\" === typeof define && define.amd ? define(\"highcharts/highcharts-3d\", [\"highcharts\"], function (F) {\n    a(F);\n    a.Highcharts = F;\n    return a;\n  }) : a(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (a) {\n  function F(a, z, y, D) {\n    a.hasOwnProperty(z) || (a[z] = D.apply(null, y), \"function\" === typeof CustomEvent && window.dispatchEvent(new CustomEvent(\"HighchartsModuleLoaded\", {\n      detail: {\n        path: z,\n        module: a[z]\n      }\n    })));\n  }\n  a = a ? a._modules : {};\n  F(a, \"Core/Math3D.js\", [a[\"Core/Globals.js\"], a[\"Core/Utilities.js\"]], function (a, z) {\n    function y(m, f, k, c) {\n      var b = f.options.chart.options3d,\n        a = r(c, k ? f.inverted : !1),\n        g = {\n          x: f.plotWidth / 2,\n          y: f.plotHeight / 2,\n          z: b.depth / 2,\n          vd: r(b.depth, 1) * r(b.viewDistance, 0)\n        },\n        B = f.scale3d || 1;\n      c = H * b.beta * (a ? -1 : 1);\n      b = H * b.alpha * (a ? -1 : 1);\n      var p = Math.cos(b),\n        t = Math.cos(-c),\n        C = Math.sin(b),\n        n = Math.sin(-c);\n      k || (g.x += f.plotLeft, g.y += f.plotTop);\n      return m.map(function (b) {\n        var f = (a ? b.y : b.x) - g.x;\n        var c = (a ? b.x : b.y) - g.y;\n        b = (b.z || 0) - g.z;\n        f = {\n          x: t * f - n * b,\n          y: -C * n * f + p * c - t * C * b,\n          z: p * n * f + C * c + p * t * b\n        };\n        c = x(f, g, g.vd);\n        c.x = c.x * B + g.x;\n        c.y = c.y * B + g.y;\n        c.z = f.z * B + g.z;\n        return {\n          x: a ? c.y : c.x,\n          y: a ? c.x : c.y,\n          z: c.z\n        };\n      });\n    }\n    function x(a, f, k) {\n      f = 0 < k && k < Number.POSITIVE_INFINITY ? k / (a.z + f.z + k) : 1;\n      return {\n        x: a.x * f,\n        y: a.y * f\n      };\n    }\n    function m(a) {\n      var f = 0,\n        k;\n      for (k = 0; k < a.length; k++) {\n        var c = (k + 1) % a.length;\n        f += a[k].x * a[c].y - a[c].x * a[k].y;\n      }\n      return f / 2;\n    }\n    var H = a.deg2rad,\n      r = z.pick;\n    return {\n      perspective: y,\n      perspective3D: x,\n      pointCameraDistance: function (a, f) {\n        var k = f.options.chart.options3d,\n          c = f.plotWidth / 2;\n        f = f.plotHeight / 2;\n        k = r(k.depth, 1) * r(k.viewDistance, 0) + k.depth;\n        return Math.sqrt(Math.pow(c - r(a.plotX, a.x), 2) + Math.pow(f - r(a.plotY, a.y), 2) + Math.pow(k - r(a.plotZ, a.z), 2));\n      },\n      shapeArea: m,\n      shapeArea3D: function (a, f, k) {\n        return m(y(a, f, k));\n      }\n    };\n  });\n  F(a, \"Core/Renderer/SVG/SVGElement3D.js\", [a[\"Core/Color/Color.js\"], a[\"Core/Renderer/SVG/SVGElement.js\"], a[\"Core/Utilities.js\"]], function (a, z, y) {\n    var x = a.parse,\n      m = y.defined;\n    a = y.merge;\n    var H = y.objectEach,\n      r = y.pick,\n      C = {\n        base: {\n          initArgs: function (f) {\n            var a = this,\n              c = a.renderer,\n              b = c[a.pathType + \"Path\"](f),\n              m = b.zIndexes;\n            a.parts.forEach(function (g) {\n              var f = {\n                \"class\": \"highcharts-3d-\" + g,\n                zIndex: m[g] || 0\n              };\n              c.styledMode && (\"top\" === g ? f.filter = \"url(#highcharts-brighter)\" : \"side\" === g && (f.filter = \"url(#highcharts-darker)\"));\n              a[g] = c.path(b[g]).attr(f).add(a);\n            });\n            a.attr({\n              \"stroke-linejoin\": \"round\",\n              zIndex: m.group\n            });\n            a.originalDestroy = a.destroy;\n            a.destroy = a.destroyParts;\n            a.forcedSides = b.forcedSides;\n          },\n          singleSetterForParts: function (a, m, c, b, l, g) {\n            var f = {};\n            b = [null, null, b || \"attr\", l, g];\n            var p = c && c.zIndexes;\n            c ? (p && p.group && this.attr({\n              zIndex: p.group\n            }), H(c, function (b, g) {\n              f[g] = {};\n              f[g][a] = b;\n              p && (f[g].zIndex = c.zIndexes[g] || 0);\n            }), b[1] = f) : (f[a] = m, b[0] = f);\n            return this.processParts.apply(this, b);\n          },\n          processParts: function (a, m, c, b, l) {\n            var g = this;\n            g.parts.forEach(function (f) {\n              m && (a = r(m[f], !1));\n              if (!1 !== a) g[f][c](a, b, l);\n            });\n            return g;\n          },\n          destroyParts: function () {\n            this.processParts(null, null, \"destroy\");\n            return this.originalDestroy();\n          }\n        }\n      };\n    C.cuboid = a(C.base, {\n      parts: [\"front\", \"top\", \"side\"],\n      pathType: \"cuboid\",\n      attr: function (a, k, c, b) {\n        if (\"string\" === typeof a && \"undefined\" !== typeof k) {\n          var f = a;\n          a = {};\n          a[f] = k;\n        }\n        return a.shapeArgs || m(a.x) ? this.singleSetterForParts(\"d\", null, this.renderer[this.pathType + \"Path\"](a.shapeArgs || a)) : z.prototype.attr.call(this, a, void 0, c, b);\n      },\n      animate: function (a, k, c) {\n        if (m(a.x) && m(a.y)) {\n          a = this.renderer[this.pathType + \"Path\"](a);\n          var b = a.forcedSides;\n          this.singleSetterForParts(\"d\", null, a, \"animate\", k, c);\n          this.attr({\n            zIndex: a.zIndexes.group\n          });\n          b !== this.forcedSides && (this.forcedSides = b, this.renderer.styledMode || C.cuboid.fillSetter.call(this, this.fill));\n        } else z.prototype.animate.call(this, a, k, c);\n        return this;\n      },\n      fillSetter: function (a) {\n        this.forcedSides = this.forcedSides || [];\n        this.singleSetterForParts(\"fill\", null, {\n          front: a,\n          top: x(a).brighten(0 <= this.forcedSides.indexOf(\"top\") ? 0 : .1).get(),\n          side: x(a).brighten(0 <= this.forcedSides.indexOf(\"side\") ? 0 : -.1).get()\n        });\n        this.color = this.fill = a;\n        return this;\n      }\n    });\n    return C;\n  });\n  F(a, \"Core/Renderer/SVG/SVGRenderer3D.js\", [a[\"Core/Animation/AnimationUtilities.js\"], a[\"Core/Color/Color.js\"], a[\"Core/Globals.js\"], a[\"Core/Math3D.js\"], a[\"Core/Renderer/SVG/SVGElement.js\"], a[\"Core/Renderer/SVG/SVGElement3D.js\"], a[\"Core/Renderer/SVG/SVGRenderer.js\"], a[\"Core/Utilities.js\"]], function (a, z, y, D, m, H, r, C) {\n    var f = this && this.__extends || function () {\n        var a = function (h, b) {\n          a = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (a, e) {\n            a.__proto__ = e;\n          } || function (a, e) {\n            for (var u in e) e.hasOwnProperty(u) && (a[u] = e[u]);\n          };\n          return a(h, b);\n        };\n        return function (h, b) {\n          function g() {\n            this.constructor = h;\n          }\n          a(h, b);\n          h.prototype = null === b ? Object.create(b) : (g.prototype = b.prototype, new g());\n        };\n      }(),\n      k = a.animObject,\n      c = z.parse,\n      b = y.charts,\n      l = y.deg2rad,\n      g = D.perspective,\n      B = D.shapeArea,\n      p = C.defined,\n      t = C.extend,\n      v = C.merge,\n      n = C.pick,\n      x = Math.cos,\n      E = Math.sin,\n      J = Math.PI,\n      K = 4 * (Math.sqrt(2) - 1) / 3 / (J / 2);\n    return function (a) {\n      function h() {\n        return null !== a && a.apply(this, arguments) || this;\n      }\n      f(h, a);\n      h.compose = function (a) {\n        a = a.prototype;\n        var b = h.prototype;\n        a.elements3d = H;\n        a.arc3d = b.arc3d;\n        a.arc3dPath = b.arc3dPath;\n        a.cuboid = b.cuboid;\n        a.cuboidPath = b.cuboidPath;\n        a.element3d = b.element3d;\n        a.face3d = b.face3d;\n        a.polyhedron = b.polyhedron;\n        a.toLinePath = b.toLinePath;\n        a.toLineSegments = b.toLineSegments;\n      };\n      h.curveTo = function (a, b, e, u, d, q, w, A) {\n        var h = [],\n          g = q - d;\n        return q > d && q - d > Math.PI / 2 + .0001 ? (h = h.concat(this.curveTo(a, b, e, u, d, d + Math.PI / 2, w, A)), h = h.concat(this.curveTo(a, b, e, u, d + Math.PI / 2, q, w, A))) : q < d && d - q > Math.PI / 2 + .0001 ? (h = h.concat(this.curveTo(a, b, e, u, d, d - Math.PI / 2, w, A)), h = h.concat(this.curveTo(a, b, e, u, d - Math.PI / 2, q, w, A))) : [[\"C\", a + e * Math.cos(d) - e * K * g * Math.sin(d) + w, b + u * Math.sin(d) + u * K * g * Math.cos(d) + A, a + e * Math.cos(q) + e * K * g * Math.sin(q) + w, b + u * Math.sin(q) - u * K * g * Math.cos(q) + A, a + e * Math.cos(q) + w, b + u * Math.sin(q) + A]];\n      };\n      h.prototype.toLinePath = function (a, b) {\n        var e = [];\n        a.forEach(function (a) {\n          e.push([\"L\", a.x, a.y]);\n        });\n        a.length && (e[0][0] = \"M\", b && e.push([\"Z\"]));\n        return e;\n      };\n      h.prototype.toLineSegments = function (a) {\n        var b = [],\n          e = !0;\n        a.forEach(function (a) {\n          b.push(e ? [\"M\", a.x, a.y] : [\"L\", a.x, a.y]);\n          e = !e;\n        });\n        return b;\n      };\n      h.prototype.face3d = function (a) {\n        var h = this,\n          e = this.createElement(\"path\");\n        e.vertexes = [];\n        e.insidePlotArea = !1;\n        e.enabled = !0;\n        e.attr = function (e) {\n          if (\"object\" === typeof e && (p(e.enabled) || p(e.vertexes) || p(e.insidePlotArea))) {\n            this.enabled = n(e.enabled, this.enabled);\n            this.vertexes = n(e.vertexes, this.vertexes);\n            this.insidePlotArea = n(e.insidePlotArea, this.insidePlotArea);\n            delete e.enabled;\n            delete e.vertexes;\n            delete e.insidePlotArea;\n            var d = g(this.vertexes, b[h.chartIndex], this.insidePlotArea),\n              q = h.toLinePath(d, !0);\n            d = B(d);\n            e.d = q;\n            e.visibility = this.enabled && 0 < d ? \"inherit\" : \"hidden\";\n          }\n          return m.prototype.attr.apply(this, arguments);\n        };\n        e.animate = function (e) {\n          if (\"object\" === typeof e && (p(e.enabled) || p(e.vertexes) || p(e.insidePlotArea))) {\n            this.enabled = n(e.enabled, this.enabled);\n            this.vertexes = n(e.vertexes, this.vertexes);\n            this.insidePlotArea = n(e.insidePlotArea, this.insidePlotArea);\n            delete e.enabled;\n            delete e.vertexes;\n            delete e.insidePlotArea;\n            var d = g(this.vertexes, b[h.chartIndex], this.insidePlotArea),\n              q = h.toLinePath(d, !0);\n            d = B(d);\n            d = this.enabled && 0 < d ? \"visible\" : \"hidden\";\n            e.d = q;\n            this.attr(\"visibility\", d);\n          }\n          return m.prototype.animate.apply(this, arguments);\n        };\n        return e.attr(a);\n      };\n      h.prototype.polyhedron = function (a) {\n        var b = this,\n          e = this.g(),\n          h = e.destroy;\n        this.styledMode || e.attr({\n          \"stroke-linejoin\": \"round\"\n        });\n        e.faces = [];\n        e.destroy = function () {\n          for (var d = 0; d < e.faces.length; d++) e.faces[d].destroy();\n          return h.call(this);\n        };\n        e.attr = function (d, q, a, h) {\n          if (\"object\" === typeof d && p(d.faces)) {\n            for (; e.faces.length > d.faces.length;) e.faces.pop().destroy();\n            for (; e.faces.length < d.faces.length;) e.faces.push(b.face3d().add(e));\n            for (var w = 0; w < d.faces.length; w++) b.styledMode && delete d.faces[w].fill, e.faces[w].attr(d.faces[w], null, a, h);\n            delete d.faces;\n          }\n          return m.prototype.attr.apply(this, arguments);\n        };\n        e.animate = function (d, q, a) {\n          if (d && d.faces) {\n            for (; e.faces.length > d.faces.length;) e.faces.pop().destroy();\n            for (; e.faces.length < d.faces.length;) e.faces.push(b.face3d().add(e));\n            for (var w = 0; w < d.faces.length; w++) e.faces[w].animate(d.faces[w], q, a);\n            delete d.faces;\n          }\n          return m.prototype.animate.apply(this, arguments);\n        };\n        return e.attr(a);\n      };\n      h.prototype.element3d = function (a, b) {\n        var e = this.g();\n        t(e, this.elements3d[a]);\n        e.initArgs(b);\n        return e;\n      };\n      h.prototype.cuboid = function (a) {\n        return this.element3d(\"cuboid\", a);\n      };\n      h.prototype.cuboidPath = function (a) {\n        function h(e) {\n          return 0 === w && 1 < e && 6 > e ? {\n            x: I[e].x,\n            y: I[e].y + 10,\n            z: I[e].z\n          } : I[0].x === I[7].x && 4 <= e ? {\n            x: I[e].x + 10,\n            y: I[e].y,\n            z: I[e].z\n          } : 0 === c && 2 > e || 5 < e ? {\n            x: I[e].x,\n            y: I[e].y,\n            z: I[e].z + 10\n          } : I[e];\n        }\n        function e(e) {\n          return I[e];\n        }\n        var u = a.x || 0,\n          d = a.y || 0,\n          q = a.z || 0,\n          w = a.height || 0,\n          A = a.width || 0,\n          c = a.depth || 0,\n          f = b[this.chartIndex],\n          m = f.options.chart.options3d.alpha,\n          p = 0,\n          I = [{\n            x: u,\n            y: d,\n            z: q\n          }, {\n            x: u + A,\n            y: d,\n            z: q\n          }, {\n            x: u + A,\n            y: d + w,\n            z: q\n          }, {\n            x: u,\n            y: d + w,\n            z: q\n          }, {\n            x: u,\n            y: d + w,\n            z: q + c\n          }, {\n            x: u + A,\n            y: d + w,\n            z: q + c\n          }, {\n            x: u + A,\n            y: d,\n            z: q + c\n          }, {\n            x: u,\n            y: d,\n            z: q + c\n          }],\n          k = [];\n        I = g(I, f, a.insidePlotArea);\n        var G = function (d, a, q) {\n          var w = [[], -1],\n            b = d.map(e),\n            u = a.map(e);\n          d = d.map(h);\n          a = a.map(h);\n          0 > B(b) ? w = [b, 0] : 0 > B(u) ? w = [u, 1] : q && (k.push(q), w = 0 > B(d) ? [b, 0] : 0 > B(a) ? [u, 1] : [b, 0]);\n          return w;\n        };\n        var l = G([3, 2, 1, 0], [7, 6, 5, 4], \"front\");\n        a = l[0];\n        var t = l[1];\n        l = G([1, 6, 7, 0], [4, 5, 2, 3], \"top\");\n        A = l[0];\n        var r = l[1];\n        l = G([1, 2, 5, 6], [0, 7, 4, 3], \"side\");\n        G = l[0];\n        l = l[1];\n        1 === l ? p += 1E6 * (f.plotWidth - u) : l || (p += 1E6 * u);\n        p += 10 * (!r || 0 <= m && 180 >= m || 360 > m && 357.5 < m ? f.plotHeight - d : 10 + d);\n        1 === t ? p += 100 * q : t || (p += 100 * (1E3 - q));\n        return {\n          front: this.toLinePath(a, !0),\n          top: this.toLinePath(A, !0),\n          side: this.toLinePath(G, !0),\n          zIndexes: {\n            group: Math.round(p)\n          },\n          forcedSides: k,\n          isFront: t,\n          isTop: r\n        };\n      };\n      h.prototype.arc3d = function (a) {\n        function b(e) {\n          var a = !1,\n            q = {},\n            b;\n          e = v(e);\n          for (b in e) -1 !== d.indexOf(b) && (q[b] = e[b], delete e[b], a = !0);\n          return a ? [q, e] : !1;\n        }\n        var e = this.g(),\n          h = e.renderer,\n          d = \"x y r innerR start end depth\".split(\" \");\n        a = v(a);\n        a.alpha = (a.alpha || 0) * l;\n        a.beta = (a.beta || 0) * l;\n        e.top = h.path();\n        e.side1 = h.path();\n        e.side2 = h.path();\n        e.inn = h.path();\n        e.out = h.path();\n        e.onAdd = function () {\n          var d = e.parentGroup,\n            a = e.attr(\"class\");\n          e.top.add(e);\n          [\"out\", \"inn\", \"side1\", \"side2\"].forEach(function (q) {\n            e[q].attr({\n              \"class\": a + \" highcharts-3d-side\"\n            }).add(d);\n          });\n        };\n        [\"addClass\", \"removeClass\"].forEach(function (d) {\n          e[d] = function () {\n            var a = arguments;\n            [\"top\", \"out\", \"inn\", \"side1\", \"side2\"].forEach(function (q) {\n              e[q][d].apply(e[q], a);\n            });\n          };\n        });\n        e.setPaths = function (d) {\n          var a = e.renderer.arc3dPath(d),\n            q = 100 * a.zTop;\n          e.attribs = d;\n          e.top.attr({\n            d: a.top,\n            zIndex: a.zTop\n          });\n          e.inn.attr({\n            d: a.inn,\n            zIndex: a.zInn\n          });\n          e.out.attr({\n            d: a.out,\n            zIndex: a.zOut\n          });\n          e.side1.attr({\n            d: a.side1,\n            zIndex: a.zSide1\n          });\n          e.side2.attr({\n            d: a.side2,\n            zIndex: a.zSide2\n          });\n          e.zIndex = q;\n          e.attr({\n            zIndex: q\n          });\n          d.center && (e.top.setRadialReference(d.center), delete d.center);\n        };\n        e.setPaths(a);\n        e.fillSetter = function (e) {\n          var d = c(e).brighten(-.1).get();\n          this.fill = e;\n          this.side1.attr({\n            fill: d\n          });\n          this.side2.attr({\n            fill: d\n          });\n          this.inn.attr({\n            fill: d\n          });\n          this.out.attr({\n            fill: d\n          });\n          this.top.attr({\n            fill: e\n          });\n          return this;\n        };\n        [\"opacity\", \"translateX\", \"translateY\", \"visibility\"].forEach(function (d) {\n          e[d + \"Setter\"] = function (d, a) {\n            e[a] = d;\n            [\"out\", \"inn\", \"side1\", \"side2\", \"top\"].forEach(function (q) {\n              e[q].attr(a, d);\n            });\n          };\n        });\n        e.attr = function (d) {\n          var a;\n          if (\"object\" === typeof d && (a = b(d))) {\n            var q = a[0];\n            arguments[0] = a[1];\n            t(e.attribs, q);\n            e.setPaths(e.attribs);\n          }\n          return m.prototype.attr.apply(e, arguments);\n        };\n        e.animate = function (d, a, h) {\n          var q = this.attribs,\n            u = \"data-\" + Math.random().toString(26).substring(2, 9);\n          delete d.center;\n          delete d.z;\n          delete d.alpha;\n          delete d.beta;\n          var w = k(n(a, this.renderer.globalAnimation));\n          if (w.duration) {\n            a = b(d);\n            e[u] = 0;\n            d[u] = 1;\n            e[u + \"Setter\"] = y.noop;\n            if (a) {\n              var A = a[0];\n              w.step = function (d, e) {\n                function a(d) {\n                  return q[d] + (n(A[d], q[d]) - q[d]) * e.pos;\n                }\n                e.prop === u && e.elem.setPaths(v(q, {\n                  x: a(\"x\"),\n                  y: a(\"y\"),\n                  r: a(\"r\"),\n                  innerR: a(\"innerR\"),\n                  start: a(\"start\"),\n                  end: a(\"end\"),\n                  depth: a(\"depth\")\n                }));\n              };\n            }\n            a = w;\n          }\n          return m.prototype.animate.call(this, d, a, h);\n        };\n        e.destroy = function () {\n          this.top.destroy();\n          this.out.destroy();\n          this.inn.destroy();\n          this.side1.destroy();\n          this.side2.destroy();\n          return m.prototype.destroy.call(this);\n        };\n        e.hide = function () {\n          this.top.hide();\n          this.out.hide();\n          this.inn.hide();\n          this.side1.hide();\n          this.side2.hide();\n        };\n        e.show = function (d) {\n          this.top.show(d);\n          this.out.show(d);\n          this.inn.show(d);\n          this.side1.show(d);\n          this.side2.show(d);\n        };\n        return e;\n      };\n      h.prototype.arc3dPath = function (a) {\n        function b(d) {\n          d %= 2 * Math.PI;\n          d > Math.PI && (d = 2 * Math.PI - d);\n          return d;\n        }\n        var e = a.x || 0,\n          u = a.y || 0,\n          d = a.start || 0,\n          q = (a.end || 0) - .00001,\n          w = a.r || 0,\n          A = a.innerR || 0,\n          g = a.depth || 0,\n          c = a.alpha || 0,\n          f = a.beta || 0,\n          m = Math.cos(d),\n          p = Math.sin(d);\n        a = Math.cos(q);\n        var k = Math.sin(q),\n          l = w * Math.cos(f);\n        w *= Math.cos(c);\n        var t = A * Math.cos(f),\n          r = A * Math.cos(c);\n        A = g * Math.sin(f);\n        var n = g * Math.sin(c);\n        g = [[\"M\", e + l * m, u + w * p]];\n        g = g.concat(h.curveTo(e, u, l, w, d, q, 0, 0));\n        g.push([\"L\", e + t * a, u + r * k]);\n        g = g.concat(h.curveTo(e, u, t, r, q, d, 0, 0));\n        g.push([\"Z\"]);\n        var B = 0 < f ? Math.PI / 2 : 0;\n        f = 0 < c ? 0 : Math.PI / 2;\n        B = d > -B ? d : q > -B ? -B : d;\n        var G = q < J - f ? q : d < J - f ? J - f : q,\n          v = 2 * J - f;\n        c = [[\"M\", e + l * x(B), u + w * E(B)]];\n        c = c.concat(h.curveTo(e, u, l, w, B, G, 0, 0));\n        q > v && d < v ? (c.push([\"L\", e + l * x(G) + A, u + w * E(G) + n]), c = c.concat(h.curveTo(e, u, l, w, G, v, A, n)), c.push([\"L\", e + l * x(v), u + w * E(v)]), c = c.concat(h.curveTo(e, u, l, w, v, q, 0, 0)), c.push([\"L\", e + l * x(q) + A, u + w * E(q) + n]), c = c.concat(h.curveTo(e, u, l, w, q, v, A, n)), c.push([\"L\", e + l * x(v), u + w * E(v)]), c = c.concat(h.curveTo(e, u, l, w, v, G, 0, 0))) : q > J - f && d < J - f && (c.push([\"L\", e + l * Math.cos(G) + A, u + w * Math.sin(G) + n]), c = c.concat(h.curveTo(e, u, l, w, G, q, A, n)), c.push([\"L\", e + l * Math.cos(q), u + w * Math.sin(q)]), c = c.concat(h.curveTo(e, u, l, w, q, G, 0, 0)));\n        c.push([\"L\", e + l * Math.cos(G) + A, u + w * Math.sin(G) + n]);\n        c = c.concat(h.curveTo(e, u, l, w, G, B, A, n));\n        c.push([\"Z\"]);\n        f = [[\"M\", e + t * m, u + r * p]];\n        f = f.concat(h.curveTo(e, u, t, r, d, q, 0, 0));\n        f.push([\"L\", e + t * Math.cos(q) + A, u + r * Math.sin(q) + n]);\n        f = f.concat(h.curveTo(e, u, t, r, q, d, A, n));\n        f.push([\"Z\"]);\n        m = [[\"M\", e + l * m, u + w * p], [\"L\", e + l * m + A, u + w * p + n], [\"L\", e + t * m + A, u + r * p + n], [\"L\", e + t * m, u + r * p], [\"Z\"]];\n        e = [[\"M\", e + l * a, u + w * k], [\"L\", e + l * a + A, u + w * k + n], [\"L\", e + t * a + A, u + r * k + n], [\"L\", e + t * a, u + r * k], [\"Z\"]];\n        k = Math.atan2(n, -A);\n        u = Math.abs(q + k);\n        a = Math.abs(d + k);\n        d = Math.abs((d + q) / 2 + k);\n        u = b(u);\n        a = b(a);\n        d = b(d);\n        d *= 1E5;\n        q = 1E5 * a;\n        u *= 1E5;\n        return {\n          top: g,\n          zTop: 1E5 * Math.PI + 1,\n          out: c,\n          zOut: Math.max(d, q, u),\n          inn: f,\n          zInn: Math.max(d, q, u),\n          side1: m,\n          zSide1: .99 * u,\n          side2: e,\n          zSide2: .99 * q\n        };\n      };\n      return h;\n    }(r);\n  });\n  F(a, \"Core/Chart/Chart3D.js\", [a[\"Core/Color/Color.js\"], a[\"Core/Defaults.js\"], a[\"Core/Math3D.js\"], a[\"Core/Utilities.js\"]], function (a, z, y, D) {\n    var m = a.parse,\n      x = z.defaultOptions,\n      r = y.perspective,\n      C = y.shapeArea3D,\n      f = D.addEvent,\n      k = D.isArray,\n      c = D.merge,\n      b = D.pick,\n      l = D.wrap,\n      g;\n    (function (a) {\n      function g(a) {\n        this.is3d() && \"scatter\" === a.options.type && (a.options.type = \"scatter3d\");\n      }\n      function t() {\n        if (this.chart3d && this.is3d()) {\n          var a = this.renderer,\n            b = this.options.chart.options3d,\n            d = this.chart3d.get3dFrame(),\n            q = this.plotLeft,\n            h = this.plotLeft + this.plotWidth,\n            g = this.plotTop,\n            c = this.plotTop + this.plotHeight;\n          b = b.depth;\n          var f = q - (d.left.visible ? d.left.size : 0),\n            l = h + (d.right.visible ? d.right.size : 0),\n            p = g - (d.top.visible ? d.top.size : 0),\n            k = c + (d.bottom.visible ? d.bottom.size : 0),\n            t = 0 - (d.front.visible ? d.front.size : 0),\n            n = b + (d.back.visible ? d.back.size : 0),\n            r = this.hasRendered ? \"animate\" : \"attr\";\n          this.chart3d.frame3d = d;\n          this.frameShapes || (this.frameShapes = {\n            bottom: a.polyhedron().add(),\n            top: a.polyhedron().add(),\n            left: a.polyhedron().add(),\n            right: a.polyhedron().add(),\n            back: a.polyhedron().add(),\n            front: a.polyhedron().add()\n          });\n          this.frameShapes.bottom[r]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-bottom\",\n            zIndex: d.bottom.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: m(d.bottom.color).brighten(.1).get(),\n              vertexes: [{\n                x: f,\n                y: k,\n                z: t\n              }, {\n                x: l,\n                y: k,\n                z: t\n              }, {\n                x: l,\n                y: k,\n                z: n\n              }, {\n                x: f,\n                y: k,\n                z: n\n              }],\n              enabled: d.bottom.visible\n            }, {\n              fill: m(d.bottom.color).brighten(.1).get(),\n              vertexes: [{\n                x: q,\n                y: c,\n                z: b\n              }, {\n                x: h,\n                y: c,\n                z: b\n              }, {\n                x: h,\n                y: c,\n                z: 0\n              }, {\n                x: q,\n                y: c,\n                z: 0\n              }],\n              enabled: d.bottom.visible\n            }, {\n              fill: m(d.bottom.color).brighten(-.1).get(),\n              vertexes: [{\n                x: f,\n                y: k,\n                z: t\n              }, {\n                x: f,\n                y: k,\n                z: n\n              }, {\n                x: q,\n                y: c,\n                z: b\n              }, {\n                x: q,\n                y: c,\n                z: 0\n              }],\n              enabled: d.bottom.visible && !d.left.visible\n            }, {\n              fill: m(d.bottom.color).brighten(-.1).get(),\n              vertexes: [{\n                x: l,\n                y: k,\n                z: n\n              }, {\n                x: l,\n                y: k,\n                z: t\n              }, {\n                x: h,\n                y: c,\n                z: 0\n              }, {\n                x: h,\n                y: c,\n                z: b\n              }],\n              enabled: d.bottom.visible && !d.right.visible\n            }, {\n              fill: m(d.bottom.color).get(),\n              vertexes: [{\n                x: l,\n                y: k,\n                z: t\n              }, {\n                x: f,\n                y: k,\n                z: t\n              }, {\n                x: q,\n                y: c,\n                z: 0\n              }, {\n                x: h,\n                y: c,\n                z: 0\n              }],\n              enabled: d.bottom.visible && !d.front.visible\n            }, {\n              fill: m(d.bottom.color).get(),\n              vertexes: [{\n                x: f,\n                y: k,\n                z: n\n              }, {\n                x: l,\n                y: k,\n                z: n\n              }, {\n                x: h,\n                y: c,\n                z: b\n              }, {\n                x: q,\n                y: c,\n                z: b\n              }],\n              enabled: d.bottom.visible && !d.back.visible\n            }]\n          });\n          this.frameShapes.top[r]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-top\",\n            zIndex: d.top.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: m(d.top.color).brighten(.1).get(),\n              vertexes: [{\n                x: f,\n                y: p,\n                z: n\n              }, {\n                x: l,\n                y: p,\n                z: n\n              }, {\n                x: l,\n                y: p,\n                z: t\n              }, {\n                x: f,\n                y: p,\n                z: t\n              }],\n              enabled: d.top.visible\n            }, {\n              fill: m(d.top.color).brighten(.1).get(),\n              vertexes: [{\n                x: q,\n                y: g,\n                z: 0\n              }, {\n                x: h,\n                y: g,\n                z: 0\n              }, {\n                x: h,\n                y: g,\n                z: b\n              }, {\n                x: q,\n                y: g,\n                z: b\n              }],\n              enabled: d.top.visible\n            }, {\n              fill: m(d.top.color).brighten(-.1).get(),\n              vertexes: [{\n                x: f,\n                y: p,\n                z: n\n              }, {\n                x: f,\n                y: p,\n                z: t\n              }, {\n                x: q,\n                y: g,\n                z: 0\n              }, {\n                x: q,\n                y: g,\n                z: b\n              }],\n              enabled: d.top.visible && !d.left.visible\n            }, {\n              fill: m(d.top.color).brighten(-.1).get(),\n              vertexes: [{\n                x: l,\n                y: p,\n                z: t\n              }, {\n                x: l,\n                y: p,\n                z: n\n              }, {\n                x: h,\n                y: g,\n                z: b\n              }, {\n                x: h,\n                y: g,\n                z: 0\n              }],\n              enabled: d.top.visible && !d.right.visible\n            }, {\n              fill: m(d.top.color).get(),\n              vertexes: [{\n                x: f,\n                y: p,\n                z: t\n              }, {\n                x: l,\n                y: p,\n                z: t\n              }, {\n                x: h,\n                y: g,\n                z: 0\n              }, {\n                x: q,\n                y: g,\n                z: 0\n              }],\n              enabled: d.top.visible && !d.front.visible\n            }, {\n              fill: m(d.top.color).get(),\n              vertexes: [{\n                x: l,\n                y: p,\n                z: n\n              }, {\n                x: f,\n                y: p,\n                z: n\n              }, {\n                x: q,\n                y: g,\n                z: b\n              }, {\n                x: h,\n                y: g,\n                z: b\n              }],\n              enabled: d.top.visible && !d.back.visible\n            }]\n          });\n          this.frameShapes.left[r]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-left\",\n            zIndex: d.left.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: m(d.left.color).brighten(.1).get(),\n              vertexes: [{\n                x: f,\n                y: k,\n                z: t\n              }, {\n                x: q,\n                y: c,\n                z: 0\n              }, {\n                x: q,\n                y: c,\n                z: b\n              }, {\n                x: f,\n                y: k,\n                z: n\n              }],\n              enabled: d.left.visible && !d.bottom.visible\n            }, {\n              fill: m(d.left.color).brighten(.1).get(),\n              vertexes: [{\n                x: f,\n                y: p,\n                z: n\n              }, {\n                x: q,\n                y: g,\n                z: b\n              }, {\n                x: q,\n                y: g,\n                z: 0\n              }, {\n                x: f,\n                y: p,\n                z: t\n              }],\n              enabled: d.left.visible && !d.top.visible\n            }, {\n              fill: m(d.left.color).brighten(-.1).get(),\n              vertexes: [{\n                x: f,\n                y: k,\n                z: n\n              }, {\n                x: f,\n                y: p,\n                z: n\n              }, {\n                x: f,\n                y: p,\n                z: t\n              }, {\n                x: f,\n                y: k,\n                z: t\n              }],\n              enabled: d.left.visible\n            }, {\n              fill: m(d.left.color).brighten(-.1).get(),\n              vertexes: [{\n                x: q,\n                y: g,\n                z: b\n              }, {\n                x: q,\n                y: c,\n                z: b\n              }, {\n                x: q,\n                y: c,\n                z: 0\n              }, {\n                x: q,\n                y: g,\n                z: 0\n              }],\n              enabled: d.left.visible\n            }, {\n              fill: m(d.left.color).get(),\n              vertexes: [{\n                x: f,\n                y: k,\n                z: t\n              }, {\n                x: f,\n                y: p,\n                z: t\n              }, {\n                x: q,\n                y: g,\n                z: 0\n              }, {\n                x: q,\n                y: c,\n                z: 0\n              }],\n              enabled: d.left.visible && !d.front.visible\n            }, {\n              fill: m(d.left.color).get(),\n              vertexes: [{\n                x: f,\n                y: p,\n                z: n\n              }, {\n                x: f,\n                y: k,\n                z: n\n              }, {\n                x: q,\n                y: c,\n                z: b\n              }, {\n                x: q,\n                y: g,\n                z: b\n              }],\n              enabled: d.left.visible && !d.back.visible\n            }]\n          });\n          this.frameShapes.right[r]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-right\",\n            zIndex: d.right.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: m(d.right.color).brighten(.1).get(),\n              vertexes: [{\n                x: l,\n                y: k,\n                z: n\n              }, {\n                x: h,\n                y: c,\n                z: b\n              }, {\n                x: h,\n                y: c,\n                z: 0\n              }, {\n                x: l,\n                y: k,\n                z: t\n              }],\n              enabled: d.right.visible && !d.bottom.visible\n            }, {\n              fill: m(d.right.color).brighten(.1).get(),\n              vertexes: [{\n                x: l,\n                y: p,\n                z: t\n              }, {\n                x: h,\n                y: g,\n                z: 0\n              }, {\n                x: h,\n                y: g,\n                z: b\n              }, {\n                x: l,\n                y: p,\n                z: n\n              }],\n              enabled: d.right.visible && !d.top.visible\n            }, {\n              fill: m(d.right.color).brighten(-.1).get(),\n              vertexes: [{\n                x: h,\n                y: g,\n                z: 0\n              }, {\n                x: h,\n                y: c,\n                z: 0\n              }, {\n                x: h,\n                y: c,\n                z: b\n              }, {\n                x: h,\n                y: g,\n                z: b\n              }],\n              enabled: d.right.visible\n            }, {\n              fill: m(d.right.color).brighten(-.1).get(),\n              vertexes: [{\n                x: l,\n                y: k,\n                z: t\n              }, {\n                x: l,\n                y: p,\n                z: t\n              }, {\n                x: l,\n                y: p,\n                z: n\n              }, {\n                x: l,\n                y: k,\n                z: n\n              }],\n              enabled: d.right.visible\n            }, {\n              fill: m(d.right.color).get(),\n              vertexes: [{\n                x: l,\n                y: p,\n                z: t\n              }, {\n                x: l,\n                y: k,\n                z: t\n              }, {\n                x: h,\n                y: c,\n                z: 0\n              }, {\n                x: h,\n                y: g,\n                z: 0\n              }],\n              enabled: d.right.visible && !d.front.visible\n            }, {\n              fill: m(d.right.color).get(),\n              vertexes: [{\n                x: l,\n                y: k,\n                z: n\n              }, {\n                x: l,\n                y: p,\n                z: n\n              }, {\n                x: h,\n                y: g,\n                z: b\n              }, {\n                x: h,\n                y: c,\n                z: b\n              }],\n              enabled: d.right.visible && !d.back.visible\n            }]\n          });\n          this.frameShapes.back[r]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-back\",\n            zIndex: d.back.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: m(d.back.color).brighten(.1).get(),\n              vertexes: [{\n                x: l,\n                y: k,\n                z: n\n              }, {\n                x: f,\n                y: k,\n                z: n\n              }, {\n                x: q,\n                y: c,\n                z: b\n              }, {\n                x: h,\n                y: c,\n                z: b\n              }],\n              enabled: d.back.visible && !d.bottom.visible\n            }, {\n              fill: m(d.back.color).brighten(.1).get(),\n              vertexes: [{\n                x: f,\n                y: p,\n                z: n\n              }, {\n                x: l,\n                y: p,\n                z: n\n              }, {\n                x: h,\n                y: g,\n                z: b\n              }, {\n                x: q,\n                y: g,\n                z: b\n              }],\n              enabled: d.back.visible && !d.top.visible\n            }, {\n              fill: m(d.back.color).brighten(-.1).get(),\n              vertexes: [{\n                x: f,\n                y: k,\n                z: n\n              }, {\n                x: f,\n                y: p,\n                z: n\n              }, {\n                x: q,\n                y: g,\n                z: b\n              }, {\n                x: q,\n                y: c,\n                z: b\n              }],\n              enabled: d.back.visible && !d.left.visible\n            }, {\n              fill: m(d.back.color).brighten(-.1).get(),\n              vertexes: [{\n                x: l,\n                y: p,\n                z: n\n              }, {\n                x: l,\n                y: k,\n                z: n\n              }, {\n                x: h,\n                y: c,\n                z: b\n              }, {\n                x: h,\n                y: g,\n                z: b\n              }],\n              enabled: d.back.visible && !d.right.visible\n            }, {\n              fill: m(d.back.color).get(),\n              vertexes: [{\n                x: q,\n                y: g,\n                z: b\n              }, {\n                x: h,\n                y: g,\n                z: b\n              }, {\n                x: h,\n                y: c,\n                z: b\n              }, {\n                x: q,\n                y: c,\n                z: b\n              }],\n              enabled: d.back.visible\n            }, {\n              fill: m(d.back.color).get(),\n              vertexes: [{\n                x: f,\n                y: k,\n                z: n\n              }, {\n                x: l,\n                y: k,\n                z: n\n              }, {\n                x: l,\n                y: p,\n                z: n\n              }, {\n                x: f,\n                y: p,\n                z: n\n              }],\n              enabled: d.back.visible\n            }]\n          });\n          this.frameShapes.front[r]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-front\",\n            zIndex: d.front.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: m(d.front.color).brighten(.1).get(),\n              vertexes: [{\n                x: f,\n                y: k,\n                z: t\n              }, {\n                x: l,\n                y: k,\n                z: t\n              }, {\n                x: h,\n                y: c,\n                z: 0\n              }, {\n                x: q,\n                y: c,\n                z: 0\n              }],\n              enabled: d.front.visible && !d.bottom.visible\n            }, {\n              fill: m(d.front.color).brighten(.1).get(),\n              vertexes: [{\n                x: l,\n                y: p,\n                z: t\n              }, {\n                x: f,\n                y: p,\n                z: t\n              }, {\n                x: q,\n                y: g,\n                z: 0\n              }, {\n                x: h,\n                y: g,\n                z: 0\n              }],\n              enabled: d.front.visible && !d.top.visible\n            }, {\n              fill: m(d.front.color).brighten(-.1).get(),\n              vertexes: [{\n                x: f,\n                y: p,\n                z: t\n              }, {\n                x: f,\n                y: k,\n                z: t\n              }, {\n                x: q,\n                y: c,\n                z: 0\n              }, {\n                x: q,\n                y: g,\n                z: 0\n              }],\n              enabled: d.front.visible && !d.left.visible\n            }, {\n              fill: m(d.front.color).brighten(-.1).get(),\n              vertexes: [{\n                x: l,\n                y: k,\n                z: t\n              }, {\n                x: l,\n                y: p,\n                z: t\n              }, {\n                x: h,\n                y: g,\n                z: 0\n              }, {\n                x: h,\n                y: c,\n                z: 0\n              }],\n              enabled: d.front.visible && !d.right.visible\n            }, {\n              fill: m(d.front.color).get(),\n              vertexes: [{\n                x: h,\n                y: g,\n                z: 0\n              }, {\n                x: q,\n                y: g,\n                z: 0\n              }, {\n                x: q,\n                y: c,\n                z: 0\n              }, {\n                x: h,\n                y: c,\n                z: 0\n              }],\n              enabled: d.front.visible\n            }, {\n              fill: m(d.front.color).get(),\n              vertexes: [{\n                x: l,\n                y: k,\n                z: t\n              }, {\n                x: f,\n                y: k,\n                z: t\n              }, {\n                x: f,\n                y: p,\n                z: t\n              }, {\n                x: l,\n                y: p,\n                z: t\n              }],\n              enabled: d.front.visible\n            }]\n          });\n        }\n      }\n      function v() {\n        this.styledMode && [{\n          name: \"darker\",\n          slope: .6\n        }, {\n          name: \"brighter\",\n          slope: 1.4\n        }].forEach(function (a) {\n          this.renderer.definition({\n            tagName: \"filter\",\n            attributes: {\n              id: \"highcharts-\" + a.name\n            },\n            children: [{\n              tagName: \"feComponentTransfer\",\n              children: [{\n                tagName: \"feFuncR\",\n                attributes: {\n                  type: \"linear\",\n                  slope: a.slope\n                }\n              }, {\n                tagName: \"feFuncG\",\n                attributes: {\n                  type: \"linear\",\n                  slope: a.slope\n                }\n              }, {\n                tagName: \"feFuncB\",\n                attributes: {\n                  type: \"linear\",\n                  slope: a.slope\n                }\n              }]\n            }]\n          });\n        }, this);\n      }\n      function n() {\n        var a = this.options;\n        this.is3d() && (a.series || []).forEach(function (e) {\n          \"scatter\" === (e.type || a.chart.type || a.chart.defaultSeriesType) && (e.type = \"scatter3d\");\n        });\n      }\n      function B() {\n        var a = this.options.chart.options3d;\n        if (this.chart3d && this.is3d()) {\n          a && (a.alpha = a.alpha % 360 + (0 <= a.alpha ? 0 : 360), a.beta = a.beta % 360 + (0 <= a.beta ? 0 : 360));\n          var b = this.inverted,\n            d = this.clipBox,\n            h = this.margin;\n          d[b ? \"y\" : \"x\"] = -(h[3] || 0);\n          d[b ? \"x\" : \"y\"] = -(h[0] || 0);\n          d[b ? \"height\" : \"width\"] = this.chartWidth + (h[3] || 0) + (h[1] || 0);\n          d[b ? \"width\" : \"height\"] = this.chartHeight + (h[0] || 0) + (h[2] || 0);\n          this.scale3d = 1;\n          !0 === a.fitToPlot && (this.scale3d = this.chart3d.getScale(a.depth));\n          this.chart3d.frame3d = this.chart3d.get3dFrame();\n        }\n      }\n      function E() {\n        this.is3d() && (this.isDirtyBox = !0);\n      }\n      function y() {\n        this.chart3d && this.is3d() && (this.chart3d.frame3d = this.chart3d.get3dFrame());\n      }\n      function z() {\n        this.chart3d || (this.chart3d = new M(this));\n      }\n      function N(a) {\n        return this.is3d() || a.apply(this, [].slice.call(arguments, 1));\n      }\n      function h(a) {\n        var e = this.series.length;\n        if (this.is3d()) for (; e--;) a = this.series[e], a.translate(), a.render();else a.call(this);\n      }\n      function G(a) {\n        a.apply(this, [].slice.call(arguments, 1));\n        this.is3d() && (this.container.className += \" highcharts-3d-chart\");\n      }\n      var M = function () {\n        function a(a) {\n          this.frame3d = void 0;\n          this.chart = a;\n        }\n        a.prototype.get3dFrame = function () {\n          var a = this.chart,\n            d = a.options.chart.options3d,\n            e = d.frame,\n            h = a.plotLeft,\n            g = a.plotLeft + a.plotWidth,\n            c = a.plotTop,\n            f = a.plotTop + a.plotHeight,\n            l = d.depth,\n            p = function (d) {\n              d = C(d, a);\n              return .5 < d ? 1 : -.5 > d ? -1 : 0;\n            },\n            k = p([{\n              x: h,\n              y: f,\n              z: l\n            }, {\n              x: g,\n              y: f,\n              z: l\n            }, {\n              x: g,\n              y: f,\n              z: 0\n            }, {\n              x: h,\n              y: f,\n              z: 0\n            }]),\n            t = p([{\n              x: h,\n              y: c,\n              z: 0\n            }, {\n              x: g,\n              y: c,\n              z: 0\n            }, {\n              x: g,\n              y: c,\n              z: l\n            }, {\n              x: h,\n              y: c,\n              z: l\n            }]),\n            m = p([{\n              x: h,\n              y: c,\n              z: 0\n            }, {\n              x: h,\n              y: c,\n              z: l\n            }, {\n              x: h,\n              y: f,\n              z: l\n            }, {\n              x: h,\n              y: f,\n              z: 0\n            }]),\n            n = p([{\n              x: g,\n              y: c,\n              z: l\n            }, {\n              x: g,\n              y: c,\n              z: 0\n            }, {\n              x: g,\n              y: f,\n              z: 0\n            }, {\n              x: g,\n              y: f,\n              z: l\n            }]),\n            G = p([{\n              x: h,\n              y: f,\n              z: 0\n            }, {\n              x: g,\n              y: f,\n              z: 0\n            }, {\n              x: g,\n              y: c,\n              z: 0\n            }, {\n              x: h,\n              y: c,\n              z: 0\n            }]);\n          p = p([{\n            x: h,\n            y: c,\n            z: l\n          }, {\n            x: g,\n            y: c,\n            z: l\n          }, {\n            x: g,\n            y: f,\n            z: l\n          }, {\n            x: h,\n            y: f,\n            z: l\n          }]);\n          var M = !1,\n            B = !1,\n            v = !1,\n            E = !1;\n          [].concat(a.xAxis, a.yAxis, a.zAxis).forEach(function (a) {\n            a && (a.horiz ? a.opposite ? B = !0 : M = !0 : a.opposite ? E = !0 : v = !0);\n          });\n          var x = function (a, d, e) {\n            for (var h = [\"size\", \"color\", \"visible\"], g = {}, c = 0; c < h.length; c++) for (var f = h[c], l = 0; l < a.length; l++) if (\"object\" === typeof a[l]) {\n              var p = a[l][f];\n              if (\"undefined\" !== typeof p && null !== p) {\n                g[f] = p;\n                break;\n              }\n            }\n            a = e;\n            !0 === g.visible || !1 === g.visible ? a = g.visible : \"auto\" === g.visible && (a = 0 < d);\n            return {\n              size: b(g.size, 1),\n              color: b(g.color, \"none\"),\n              frontFacing: 0 < d,\n              visible: a\n            };\n          };\n          e = {\n            axes: {},\n            bottom: x([e.bottom, e.top, e], k, M),\n            top: x([e.top, e.bottom, e], t, B),\n            left: x([e.left, e.right, e.side, e], m, v),\n            right: x([e.right, e.left, e.side, e], n, E),\n            back: x([e.back, e.front, e], p, !0),\n            front: x([e.front, e.back, e], G, !1)\n          };\n          \"auto\" === d.axisLabelPosition ? (n = function (a, d) {\n            return a.visible !== d.visible || a.visible && d.visible && a.frontFacing !== d.frontFacing;\n          }, d = [], n(e.left, e.front) && d.push({\n            y: (c + f) / 2,\n            x: h,\n            z: 0,\n            xDir: {\n              x: 1,\n              y: 0,\n              z: 0\n            }\n          }), n(e.left, e.back) && d.push({\n            y: (c + f) / 2,\n            x: h,\n            z: l,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: -1\n            }\n          }), n(e.right, e.front) && d.push({\n            y: (c + f) / 2,\n            x: g,\n            z: 0,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: 1\n            }\n          }), n(e.right, e.back) && d.push({\n            y: (c + f) / 2,\n            x: g,\n            z: l,\n            xDir: {\n              x: -1,\n              y: 0,\n              z: 0\n            }\n          }), k = [], n(e.bottom, e.front) && k.push({\n            x: (h + g) / 2,\n            y: f,\n            z: 0,\n            xDir: {\n              x: 1,\n              y: 0,\n              z: 0\n            }\n          }), n(e.bottom, e.back) && k.push({\n            x: (h + g) / 2,\n            y: f,\n            z: l,\n            xDir: {\n              x: -1,\n              y: 0,\n              z: 0\n            }\n          }), t = [], n(e.top, e.front) && t.push({\n            x: (h + g) / 2,\n            y: c,\n            z: 0,\n            xDir: {\n              x: 1,\n              y: 0,\n              z: 0\n            }\n          }), n(e.top, e.back) && t.push({\n            x: (h + g) / 2,\n            y: c,\n            z: l,\n            xDir: {\n              x: -1,\n              y: 0,\n              z: 0\n            }\n          }), m = [], n(e.bottom, e.left) && m.push({\n            z: (0 + l) / 2,\n            y: f,\n            x: h,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: -1\n            }\n          }), n(e.bottom, e.right) && m.push({\n            z: (0 + l) / 2,\n            y: f,\n            x: g,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: 1\n            }\n          }), f = [], n(e.top, e.left) && f.push({\n            z: (0 + l) / 2,\n            y: c,\n            x: h,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: -1\n            }\n          }), n(e.top, e.right) && f.push({\n            z: (0 + l) / 2,\n            y: c,\n            x: g,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: 1\n            }\n          }), h = function (d, e, h) {\n            if (0 === d.length) return null;\n            if (1 === d.length) return d[0];\n            for (var b = r(d, a, !1), g = 0, c = 1; c < b.length; c++) h * b[c][e] > h * b[g][e] ? g = c : h * b[c][e] === h * b[g][e] && b[c].z < b[g].z && (g = c);\n            return d[g];\n          }, e.axes = {\n            y: {\n              left: h(d, \"x\", -1),\n              right: h(d, \"x\", 1)\n            },\n            x: {\n              top: h(t, \"y\", -1),\n              bottom: h(k, \"y\", 1)\n            },\n            z: {\n              top: h(f, \"y\", -1),\n              bottom: h(m, \"y\", 1)\n            }\n          }) : e.axes = {\n            y: {\n              left: {\n                x: h,\n                z: 0,\n                xDir: {\n                  x: 1,\n                  y: 0,\n                  z: 0\n                }\n              },\n              right: {\n                x: g,\n                z: 0,\n                xDir: {\n                  x: 0,\n                  y: 0,\n                  z: 1\n                }\n              }\n            },\n            x: {\n              top: {\n                y: c,\n                z: 0,\n                xDir: {\n                  x: 1,\n                  y: 0,\n                  z: 0\n                }\n              },\n              bottom: {\n                y: f,\n                z: 0,\n                xDir: {\n                  x: 1,\n                  y: 0,\n                  z: 0\n                }\n              }\n            },\n            z: {\n              top: {\n                x: v ? g : h,\n                y: c,\n                xDir: v ? {\n                  x: 0,\n                  y: 0,\n                  z: 1\n                } : {\n                  x: 0,\n                  y: 0,\n                  z: -1\n                }\n              },\n              bottom: {\n                x: v ? g : h,\n                y: f,\n                xDir: v ? {\n                  x: 0,\n                  y: 0,\n                  z: 1\n                } : {\n                  x: 0,\n                  y: 0,\n                  z: -1\n                }\n              }\n            }\n          };\n          return e;\n        };\n        a.prototype.getScale = function (a) {\n          var d = this.chart,\n            e = d.plotLeft,\n            h = d.plotWidth + e,\n            b = d.plotTop,\n            g = d.plotHeight + b,\n            c = e + d.plotWidth / 2,\n            f = b + d.plotHeight / 2,\n            l = Number.MAX_VALUE,\n            p = -Number.MAX_VALUE,\n            k = Number.MAX_VALUE,\n            t = -Number.MAX_VALUE,\n            n = 1;\n          var m = [{\n            x: e,\n            y: b,\n            z: 0\n          }, {\n            x: e,\n            y: b,\n            z: a\n          }];\n          [0, 1].forEach(function (a) {\n            m.push({\n              x: h,\n              y: m[a].y,\n              z: m[a].z\n            });\n          });\n          [0, 1, 2, 3].forEach(function (a) {\n            m.push({\n              x: m[a].x,\n              y: g,\n              z: m[a].z\n            });\n          });\n          m = r(m, d, !1);\n          m.forEach(function (a) {\n            l = Math.min(l, a.x);\n            p = Math.max(p, a.x);\n            k = Math.min(k, a.y);\n            t = Math.max(t, a.y);\n          });\n          e > l && (n = Math.min(n, 1 - Math.abs((e + c) / (l + c)) % 1));\n          h < p && (n = Math.min(n, (h - c) / (p - c)));\n          b > k && (n = 0 > k ? Math.min(n, (b + f) / (-k + b + f)) : Math.min(n, 1 - (b + f) / (k + f) % 1));\n          g < t && (n = Math.min(n, Math.abs((g - f) / (t - f))));\n          return n;\n        };\n        return a;\n      }();\n      a.Composition = M;\n      a.defaultOptions = {\n        chart: {\n          options3d: {\n            enabled: !1,\n            alpha: 0,\n            beta: 0,\n            depth: 100,\n            fitToPlot: !0,\n            viewDistance: 25,\n            axisLabelPosition: null,\n            frame: {\n              visible: \"default\",\n              size: 1,\n              bottom: {},\n              top: {},\n              left: {},\n              right: {},\n              back: {},\n              front: {}\n            }\n          }\n        }\n      };\n      a.compose = function (e, b) {\n        var d = e.prototype;\n        b = b.prototype;\n        d.is3d = function () {\n          return !(!this.options.chart.options3d || !this.options.chart.options3d.enabled);\n        };\n        d.propsRequireDirtyBox.push(\"chart.options3d\");\n        d.propsRequireUpdateSeries.push(\"chart.options3d\");\n        b.matrixSetter = function () {\n          if (1 > this.pos && (k(this.start) || k(this.end))) {\n            var a = this.start || [1, 0, 0, 1, 0, 0],\n              d = this.end || [1, 0, 0, 1, 0, 0];\n            var e = [];\n            for (var h = 0; 6 > h; h++) e.push(this.pos * d[h] + (1 - this.pos) * a[h]);\n          } else e = this.end;\n          this.elem.attr(this.prop, e, null, !0);\n        };\n        c(!0, x, a.defaultOptions);\n        f(e, \"init\", z);\n        f(e, \"addSeries\", g);\n        f(e, \"afterDrawChartBox\", t);\n        f(e, \"afterGetContainer\", v);\n        f(e, \"afterInit\", n);\n        f(e, \"afterSetChartSize\", B);\n        f(e, \"beforeRedraw\", E);\n        f(e, \"beforeRender\", y);\n        l(d, \"isInsidePlot\", N);\n        l(d, \"renderSeries\", h);\n        l(d, \"setClassName\", G);\n      };\n    })(g || (g = {}));\n    \"\";\n    return g;\n  });\n  F(a, \"Core/Axis/ZAxis.js\", [a[\"Core/Axis/Axis.js\"], a[\"Core/Utilities.js\"]], function (a, z) {\n    function x(a) {\n      return new c(this, a);\n    }\n    function D() {\n      var a = this,\n        c = this.options.zAxis = f(this.options.zAxis || {});\n      this.is3d() && (this.zAxis = [], c.forEach(function (b, c) {\n        b.index = c;\n        b.isX = !0;\n        a.addZAxis(b).setScale();\n      }));\n    }\n    var m = this && this.__extends || function () {\n        var a = function (b, c) {\n          a = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (a, b) {\n            a.__proto__ = b;\n          } || function (a, b) {\n            for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]);\n          };\n          return a(b, c);\n        };\n        return function (b, c) {\n          function g() {\n            this.constructor = b;\n          }\n          a(b, c);\n          b.prototype = null === c ? Object.create(c) : (g.prototype = c.prototype, new g());\n        };\n      }(),\n      H = z.addEvent,\n      r = z.merge,\n      C = z.pick,\n      f = z.splat,\n      k = [],\n      c = function (a) {\n        function b(b, c) {\n          b = a.call(this, b, c) || this;\n          b.isZAxis = !0;\n          return b;\n        }\n        m(b, a);\n        b.compose = function (a) {\n          -1 === k.indexOf(a) && (k.push(a), H(a, \"afterGetAxes\", D), a = a.prototype, a.addZAxis = x, a.collectionsWithInit.zAxis = [a.addZAxis], a.collectionsWithUpdate.push(\"zAxis\"));\n        };\n        b.prototype.getSeriesExtremes = function () {\n          var a = this,\n            b = this.chart;\n          this.hasVisibleSeries = !1;\n          this.dataMin = this.dataMax = this.ignoreMinPadding = this.ignoreMaxPadding = void 0;\n          this.stacking && this.stacking.buildStacks();\n          this.series.forEach(function (c) {\n            if (c.visible || !b.options.chart.ignoreHiddenSeries) a.hasVisibleSeries = !0, c = c.zData, c.length && (a.dataMin = Math.min(C(a.dataMin, c[0]), Math.min.apply(null, c)), a.dataMax = Math.max(C(a.dataMax, c[0]), Math.max.apply(null, c)));\n          });\n        };\n        b.prototype.setAxisSize = function () {\n          var b = this.chart;\n          a.prototype.setAxisSize.call(this);\n          this.width = this.len = b.options.chart.options3d && b.options.chart.options3d.depth || 0;\n          this.right = b.chartWidth - this.width - this.left;\n        };\n        b.prototype.setOptions = function (b) {\n          b = r({\n            offset: 0,\n            lineWidth: 0\n          }, b);\n          this.isZAxis = !0;\n          a.prototype.setOptions.call(this, b);\n          this.coll = \"zAxis\";\n        };\n        return b;\n      }(a);\n    return c;\n  });\n  F(a, \"Core/Axis/Axis3DDefaults.js\", [], function () {\n    return {\n      labels: {\n        position3d: \"offset\",\n        skew3d: !1\n      },\n      title: {\n        position3d: null,\n        skew3d: null\n      }\n    };\n  });\n  F(a, \"Core/Axis/Tick3DComposition.js\", [a[\"Core/Utilities.js\"]], function (a) {\n    function x(a) {\n      var f = this.axis.axis3D;\n      f && m(a.pos, f.fix3dPosition(a.pos));\n    }\n    function y(a) {\n      var f = this.axis.axis3D,\n        k = a.apply(this, [].slice.call(arguments, 1));\n      if (f) {\n        var c = k[0],\n          b = k[1];\n        if (\"M\" === c[0] && \"L\" === b[0]) return f = [f.fix3dPosition({\n          x: c[1],\n          y: c[2],\n          z: 0\n        }), f.fix3dPosition({\n          x: b[1],\n          y: b[2],\n          z: 0\n        })], this.axis.chart.renderer.toLineSegments(f);\n      }\n      return k;\n    }\n    var D = a.addEvent,\n      m = a.extend,\n      H = a.wrap,\n      r = [];\n    return {\n      compose: function (a) {\n        -1 === r.indexOf(a) && (r.push(a), D(a, \"afterGetLabelPosition\", x), H(a.prototype, \"getMarkPath\", y));\n      }\n    };\n  });\n  F(a, \"Core/Axis/Axis3DComposition.js\", [a[\"Core/Axis/Axis3DDefaults.js\"], a[\"Core/Globals.js\"], a[\"Core/Math3D.js\"], a[\"Core/Axis/Tick3DComposition.js\"], a[\"Core/Utilities.js\"]], function (a, z, y, D, m) {\n    function x() {\n      var a = this.chart,\n        b = this.options;\n      a.is3d && a.is3d() && \"colorAxis\" !== this.coll && (b.tickWidth = L(b.tickWidth, 0), b.gridLineWidth = L(b.gridLineWidth, 1));\n    }\n    function r(a) {\n      this.chart.is3d() && \"colorAxis\" !== this.coll && a.point && (a.point.crosshairPos = this.isXAxis ? a.point.axisXpos : this.len - a.point.axisYpos);\n    }\n    function C() {\n      this.axis3D || (this.axis3D = new K(this));\n    }\n    function f(a) {\n      return this.chart.is3d() && \"colorAxis\" !== this.coll ? [] : a.apply(this, [].slice.call(arguments, 1));\n    }\n    function k(a) {\n      if (!this.chart.is3d() || \"colorAxis\" === this.coll) return a.apply(this, [].slice.call(arguments, 1));\n      var b = arguments,\n        c = b[2],\n        f = [];\n      b = this.getPlotLinePath({\n        value: b[1]\n      });\n      c = this.getPlotLinePath({\n        value: c\n      });\n      if (b && c) for (var e = 0; e < b.length; e += 2) {\n        var g = b[e],\n          d = b[e + 1],\n          l = c[e],\n          k = c[e + 1];\n        \"M\" === g[0] && \"L\" === d[0] && \"M\" === l[0] && \"L\" === k[0] && f.push(g, d, k, [\"L\", l[1], l[2]], [\"Z\"]);\n      }\n      return f;\n    }\n    function c(a) {\n      var b = this.axis3D,\n        c = this.chart,\n        f = a.apply(this, [].slice.call(arguments, 1));\n      if (\"colorAxis\" === this.coll || !c.chart3d || !c.is3d() || null === f) return f;\n      var e = c.options.chart.options3d,\n        g = this.isZAxis ? c.plotWidth : e.depth;\n      e = c.chart3d.frame3d;\n      var d = f[0],\n        l = f[1];\n      f = [];\n      \"M\" === d[0] && \"L\" === l[0] && (b = [b.swapZ({\n        x: d[1],\n        y: d[2],\n        z: 0\n      }), b.swapZ({\n        x: d[1],\n        y: d[2],\n        z: g\n      }), b.swapZ({\n        x: l[1],\n        y: l[2],\n        z: 0\n      }), b.swapZ({\n        x: l[1],\n        y: l[2],\n        z: g\n      })], this.horiz ? (this.isZAxis ? (e.left.visible && f.push(b[0], b[2]), e.right.visible && f.push(b[1], b[3])) : (e.front.visible && f.push(b[0], b[2]), e.back.visible && f.push(b[1], b[3])), e.top.visible && f.push(b[0], b[1]), e.bottom.visible && f.push(b[2], b[3])) : (e.front.visible && f.push(b[0], b[2]), e.back.visible && f.push(b[1], b[3]), e.left.visible && f.push(b[0], b[1]), e.right.visible && f.push(b[2], b[3])), f = B(f, this.chart, !1));\n      return c.renderer.toLineSegments(f);\n    }\n    function b(a, b) {\n      var c = this.chart,\n        h = this.ticks,\n        e = this.gridGroup;\n      if (this.categories && c.frameShapes && c.is3d() && e && b && b.label) {\n        e = e.element.childNodes[0].getBBox();\n        var f = c.frameShapes.left.getBBox(),\n          d = c.options.chart.options3d;\n        c = {\n          x: c.plotWidth / 2,\n          y: c.plotHeight / 2,\n          z: d.depth / 2,\n          vd: L(d.depth, 1) * L(d.viewDistance, 0)\n        };\n        d = b.pos;\n        var g = h[d - 1],\n          l = h[d + 1],\n          k = h = void 0;\n        0 !== d && g && g.label && g.label.xy && (h = p({\n          x: g.label.xy.x,\n          y: g.label.xy.y,\n          z: null\n        }, c, c.vd));\n        l && l.label && l.label.xy && (k = p({\n          x: l.label.xy.x,\n          y: l.label.xy.y,\n          z: null\n        }, c, c.vd));\n        d = {\n          x: b.label.xy.x,\n          y: b.label.xy.y,\n          z: null\n        };\n        d = p(d, c, c.vd);\n        return Math.abs(h ? d.x - h.x : k ? k.x - d.x : e.x - f.x);\n      }\n      return a.apply(this, [].slice.call(arguments, 1));\n    }\n    function l(a) {\n      var b = a.apply(this, [].slice.call(arguments, 1));\n      return this.axis3D ? this.axis3D.fix3dPosition(b, !0) : b;\n    }\n    var g = z.deg2rad,\n      B = y.perspective,\n      p = y.perspective3D,\n      t = y.shapeArea,\n      v = m.addEvent,\n      n = m.merge,\n      L = m.pick,\n      E = m.wrap,\n      J = [],\n      K = function () {\n        function p(a) {\n          this.axis = a;\n        }\n        p.compose = function (h, g) {\n          D.compose(g);\n          -1 === J.indexOf(h) && (J.push(h), n(!0, h.defaultOptions, a), h.keepProps.push(\"axis3D\"), v(h, \"init\", C), v(h, \"afterSetOptions\", x), v(h, \"drawCrosshair\", r), h = h.prototype, E(h, \"getLinePath\", f), E(h, \"getPlotBandPath\", k), E(h, \"getPlotLinePath\", c), E(h, \"getSlotWidth\", b), E(h, \"getTitlePosition\", l));\n        };\n        p.prototype.fix3dPosition = function (a, b) {\n          var c = this.axis,\n            e = c.chart;\n          if (\"colorAxis\" === c.coll || !e.chart3d || !e.is3d()) return a;\n          var f = g * e.options.chart.options3d.alpha,\n            d = g * e.options.chart.options3d.beta,\n            h = L(b && c.options.title.position3d, c.options.labels.position3d);\n          b = L(b && c.options.title.skew3d, c.options.labels.skew3d);\n          var l = e.chart3d.frame3d,\n            k = e.plotLeft,\n            p = e.plotWidth + k,\n            n = e.plotTop,\n            m = e.plotHeight + n,\n            r = e = 0,\n            v = {\n              x: 0,\n              y: 1,\n              z: 0\n            },\n            E = !1;\n          a = c.axis3D.swapZ({\n            x: a.x,\n            y: a.y,\n            z: 0\n          });\n          if (c.isZAxis) {\n            if (c.opposite) {\n              if (null === l.axes.z.top) return {};\n              r = a.y - n;\n              a.x = l.axes.z.top.x;\n              a.y = l.axes.z.top.y;\n              k = l.axes.z.top.xDir;\n              E = !l.top.frontFacing;\n            } else {\n              if (null === l.axes.z.bottom) return {};\n              r = a.y - m;\n              a.x = l.axes.z.bottom.x;\n              a.y = l.axes.z.bottom.y;\n              k = l.axes.z.bottom.xDir;\n              E = !l.bottom.frontFacing;\n            }\n          } else if (c.horiz) {\n            if (c.opposite) {\n              if (null === l.axes.x.top) return {};\n              r = a.y - n;\n              a.y = l.axes.x.top.y;\n              a.z = l.axes.x.top.z;\n              k = l.axes.x.top.xDir;\n              E = !l.top.frontFacing;\n            } else {\n              if (null === l.axes.x.bottom) return {};\n              r = a.y - m;\n              a.y = l.axes.x.bottom.y;\n              a.z = l.axes.x.bottom.z;\n              k = l.axes.x.bottom.xDir;\n              E = !l.bottom.frontFacing;\n            }\n          } else if (c.opposite) {\n            if (null === l.axes.y.right) return {};\n            e = a.x - p;\n            a.x = l.axes.y.right.x;\n            a.z = l.axes.y.right.z;\n            k = l.axes.y.right.xDir;\n            k = {\n              x: k.z,\n              y: k.y,\n              z: -k.x\n            };\n          } else {\n            if (null === l.axes.y.left) return {};\n            e = a.x - k;\n            a.x = l.axes.y.left.x;\n            a.z = l.axes.y.left.z;\n            k = l.axes.y.left.xDir;\n          }\n          \"chart\" !== h && (\"flap\" === h ? c.horiz ? (d = Math.sin(f), f = Math.cos(f), c.opposite && (d = -d), E && (d = -d), v = {\n            x: k.z * d,\n            y: f,\n            z: -k.x * d\n          }) : k = {\n            x: Math.cos(d),\n            y: 0,\n            z: Math.sin(d)\n          } : \"ortho\" === h ? c.horiz ? (v = Math.cos(f), h = Math.sin(d) * v, f = -Math.sin(f), d = -v * Math.cos(d), v = {\n            x: k.y * d - k.z * f,\n            y: k.z * h - k.x * d,\n            z: k.x * f - k.y * h\n          }, f = 1 / Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z), E && (f = -f), v = {\n            x: f * v.x,\n            y: f * v.y,\n            z: f * v.z\n          }) : k = {\n            x: Math.cos(d),\n            y: 0,\n            z: Math.sin(d)\n          } : c.horiz ? v = {\n            x: Math.sin(d) * Math.sin(f),\n            y: Math.cos(f),\n            z: -Math.cos(d) * Math.sin(f)\n          } : k = {\n            x: Math.cos(d),\n            y: 0,\n            z: Math.sin(d)\n          });\n          a.x += e * k.x + r * v.x;\n          a.y += e * k.y + r * v.y;\n          a.z += e * k.z + r * v.z;\n          e = B([a], c.chart)[0];\n          b && (0 > t(B([a, {\n            x: a.x + k.x,\n            y: a.y + k.y,\n            z: a.z + k.z\n          }, {\n            x: a.x + v.x,\n            y: a.y + v.y,\n            z: a.z + v.z\n          }], c.chart)) && (k = {\n            x: -k.x,\n            y: -k.y,\n            z: -k.z\n          }), a = B([{\n            x: a.x,\n            y: a.y,\n            z: a.z\n          }, {\n            x: a.x + k.x,\n            y: a.y + k.y,\n            z: a.z + k.z\n          }, {\n            x: a.x + v.x,\n            y: a.y + v.y,\n            z: a.z + v.z\n          }], c.chart), e.matrix = [a[1].x - a[0].x, a[1].y - a[0].y, a[2].x - a[0].x, a[2].y - a[0].y, e.x, e.y], e.matrix[4] -= e.x * e.matrix[0] + e.y * e.matrix[2], e.matrix[5] -= e.x * e.matrix[1] + e.y * e.matrix[3]);\n          return e;\n        };\n        p.prototype.swapZ = function (a, b) {\n          var c = this.axis;\n          return c.isZAxis ? (b = b ? 0 : c.chart.plotLeft, {\n            x: b + a.z,\n            y: a.y,\n            z: a.x - b\n          }) : a;\n        };\n        return p;\n      }();\n    return K;\n  });\n  F(a, \"Core/Series/Series3D.js\", [a[\"Core/Math3D.js\"], a[\"Core/Series/Series.js\"], a[\"Core/Utilities.js\"]], function (a, z, y) {\n    var x = this && this.__extends || function () {\n        var a = function (c, b) {\n          a = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (a, b) {\n            a.__proto__ = b;\n          } || function (a, b) {\n            for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]);\n          };\n          return a(c, b);\n        };\n        return function (c, b) {\n          function f() {\n            this.constructor = c;\n          }\n          a(c, b);\n          c.prototype = null === b ? Object.create(b) : (f.prototype = b.prototype, new f());\n        };\n      }(),\n      m = a.perspective;\n    a = y.addEvent;\n    var H = y.extend,\n      r = y.merge,\n      C = y.pick,\n      f = y.isNumber;\n    y = function (a) {\n      function c() {\n        return null !== a && a.apply(this, arguments) || this;\n      }\n      x(c, a);\n      c.prototype.translate = function () {\n        a.prototype.translate.apply(this, arguments);\n        this.chart.is3d() && this.translate3dPoints();\n      };\n      c.prototype.translate3dPoints = function () {\n        var a = this.options,\n          c = this.chart,\n          g = C(this.zAxis, c.options.zAxis[0]),\n          k = [],\n          p,\n          t = [];\n        this.zPadding = (a.stacking ? f(a.stack) ? a.stack : 0 : this.index || 0) * (a.depth || 0 + (a.groupZPadding || 1));\n        for (p = 0; p < this.data.length; p++) {\n          a = this.data[p];\n          if (g && g.translate) {\n            var v = g.logarithmic && g.val2lin ? g.val2lin(a.z) : a.z;\n            a.plotZ = g.translate(v);\n            a.isInside = a.isInside ? v >= g.min && v <= g.max : !1;\n          } else a.plotZ = this.zPadding;\n          a.axisXpos = a.plotX;\n          a.axisYpos = a.plotY;\n          a.axisZpos = a.plotZ;\n          k.push({\n            x: a.plotX,\n            y: a.plotY,\n            z: a.plotZ\n          });\n          t.push(a.plotX || 0);\n        }\n        this.rawPointsX = t;\n        c = m(k, c, !0);\n        for (p = 0; p < this.data.length; p++) a = this.data[p], g = c[p], a.plotX = g.x, a.plotY = g.y, a.plotZ = g.z;\n      };\n      c.defaultOptions = r(z.defaultOptions);\n      return c;\n    }(z);\n    a(z, \"afterTranslate\", function () {\n      this.chart.is3d() && this.translate3dPoints();\n    });\n    H(z.prototype, {\n      translate3dPoints: y.prototype.translate3dPoints\n    });\n    return y;\n  });\n  F(a, \"Series/Area3D/Area3DSeries.js\", [a[\"Core/Math3D.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Core/Utilities.js\"]], function (a, z, y) {\n    function x(a) {\n      var f = a.apply(this, [].slice.call(arguments, 1));\n      if (!this.chart.is3d()) return f;\n      var c = H.getGraphPath,\n        b = this.options,\n        l = Math.round(this.yAxis.getThreshold(b.threshold)),\n        g = [];\n      if (this.rawPointsX) for (var r = 0; r < this.points.length; r++) g.push({\n        x: this.rawPointsX[r],\n        y: b.stacking ? this.points[r].yBottom : l,\n        z: this.zPadding\n      });\n      b = this.chart.options.chart.options3d;\n      g = m(g, this.chart, !0).map(function (a) {\n        return {\n          plotX: a.x,\n          plotY: a.y,\n          plotZ: a.z\n        };\n      });\n      this.group && b && b.depth && b.beta && (this.markerGroup && (this.markerGroup.add(this.group), this.markerGroup.attr({\n        translateX: 0,\n        translateY: 0\n      })), this.group.attr({\n        zIndex: Math.max(1, 270 < b.beta || 90 > b.beta ? b.depth - Math.round(this.zPadding || 0) : Math.round(this.zPadding || 0))\n      }));\n      g.reversed = !0;\n      c = c.call(this, g, !0, !0);\n      c[0] && \"M\" === c[0][0] && (c[0] = [\"L\", c[0][1], c[0][2]]);\n      this.areaPath && (c = this.areaPath.splice(0, this.areaPath.length / 2).concat(c), c.xMap = this.areaPath.xMap, this.areaPath = c);\n      return f;\n    }\n    var m = a.perspective,\n      H = z.seriesTypes.line.prototype,\n      r = y.wrap,\n      C = [];\n    return {\n      compose: function (a) {\n        -1 === C.indexOf(a) && (C.push(a), r(a.prototype, \"getGraphPath\", x));\n      }\n    };\n  });\n  F(a, \"Series/Column3D/Column3DComposition.js\", [a[\"Series/Column/ColumnSeries.js\"], a[\"Core/Globals.js\"], a[\"Core/Series/Series.js\"], a[\"Core/Math3D.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Core/Axis/Stacking/StackItem.js\"], a[\"Core/Utilities.js\"]], function (a, z, y, D, m, H, r) {\n    function x(a, b) {\n      var c = a.series,\n        f = {\n          totalStacks: 0\n        },\n        g,\n        l = 1;\n      c.forEach(function (a) {\n        g = B(a.options.stack, b ? 0 : c.length - 1 - a.index);\n        f[g] ? f[g].series.push(a) : (f[g] = {\n          series: [a],\n          position: l\n        }, l++);\n      });\n      f.totalStacks = l + 1;\n      return f;\n    }\n    function f(a) {\n      var b = a.apply(this, [].slice.call(arguments, 1));\n      this.chart.is3d && this.chart.is3d() && (b.stroke = this.options.edgeColor || b.fill, b[\"stroke-width\"] = B(this.options.edgeWidth, 1));\n      return b;\n    }\n    function k(a, b, c) {\n      var f = this.chart.is3d && this.chart.is3d();\n      f && (this.options.inactiveOtherPoints = !0);\n      a.call(this, b, c);\n      f && (this.options.inactiveOtherPoints = !1);\n    }\n    function c(a) {\n      for (var b = [], c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];\n      return this.series.chart.is3d() ? this.graphic && \"g\" !== this.graphic.element.nodeName : a.apply(this, b);\n    }\n    var b = a.prototype,\n      l = z.svg,\n      g = D.perspective;\n    z = r.addEvent;\n    var B = r.pick;\n    r = r.wrap;\n    r(b, \"translate\", function (a) {\n      a.apply(this, [].slice.call(arguments, 1));\n      this.chart.is3d() && this.translate3dShapes();\n    });\n    r(y.prototype, \"justifyDataLabel\", function (a) {\n      return arguments[2].outside3dPlot ? !1 : a.apply(this, [].slice.call(arguments, 1));\n    });\n    b.translate3dPoints = function () {};\n    b.translate3dShapes = function () {\n      var a = this,\n        b = a.chart,\n        c = a.options,\n        f = c.depth,\n        l = (c.stacking ? c.stack || 0 : a.index) * (f + (c.groupZPadding || 1)),\n        k = a.borderWidth % 2 ? .5 : 0,\n        m;\n      b.inverted && !a.yAxis.reversed && (k *= -1);\n      !1 !== c.grouping && (l = 0);\n      l += c.groupZPadding || 1;\n      a.data.forEach(function (c) {\n        c.outside3dPlot = null;\n        if (null !== c.y) {\n          var n = c.shapeArgs,\n            h = c.tooltipPos,\n            p;\n          [[\"x\", \"width\"], [\"y\", \"height\"]].forEach(function (b) {\n            p = n[b[0]] - k;\n            0 > p && (n[b[1]] += n[b[0]] + k, n[b[0]] = -k, p = 0);\n            p + n[b[1]] > a[b[0] + \"Axis\"].len && 0 !== n[b[1]] && (n[b[1]] = a[b[0] + \"Axis\"].len - n[b[0]]);\n            if (0 !== n[b[1]] && (n[b[0]] >= a[b[0] + \"Axis\"].len || n[b[0]] + n[b[1]] <= k)) {\n              for (var e in n) n[e] = \"y\" === e ? -9999 : 0;\n              c.outside3dPlot = !0;\n            }\n          });\n          \"rect\" === c.shapeType && (c.shapeType = \"cuboid\");\n          n.z = l;\n          n.depth = f;\n          n.insidePlotArea = !0;\n          m = {\n            x: n.x + n.width / 2,\n            y: n.y,\n            z: l + f / 2\n          };\n          b.inverted && (m.x = n.height, m.y = c.clientX);\n          c.plot3d = g([m], b, !0, !1)[0];\n          h = g([{\n            x: h[0],\n            y: h[1],\n            z: l + f / 2\n          }], b, !0, !1)[0];\n          c.tooltipPos = [h.x, h.y];\n        }\n      });\n      a.z = l;\n    };\n    r(b, \"animate\", function (a) {\n      if (this.chart.is3d()) {\n        var b = arguments[1],\n          c = this.yAxis,\n          f = this,\n          g = this.yAxis.reversed;\n        l && (b ? f.data.forEach(function (a) {\n          null !== a.y && (a.height = a.shapeArgs.height, a.shapey = a.shapeArgs.y, a.shapeArgs.height = 1, g || (a.shapeArgs.y = a.stackY ? a.plotY + c.translate(a.stackY) : a.plotY + (a.negative ? -a.height : a.height)));\n        }) : (f.data.forEach(function (a) {\n          if (null !== a.y && (a.shapeArgs.height = a.height, a.shapeArgs.y = a.shapey, a.graphic)) a.graphic[a.outside3dPlot ? \"attr\" : \"animate\"](a.shapeArgs, f.options.animation);\n        }), this.drawDataLabels()));\n      } else a.apply(this, [].slice.call(arguments, 1));\n    });\n    r(b, \"plotGroup\", function (a, b, c, f, g, l) {\n      \"dataLabelsGroup\" !== b && this.chart.is3d() && (this[b] && delete this[b], l && (this.chart.columnGroup || (this.chart.columnGroup = this.chart.renderer.g(\"columnGroup\").add(l)), this[b] = this.chart.columnGroup, this.chart.columnGroup.attr(this.getPlotBox()), this[b].survive = !0, \"group\" === b || \"markerGroup\" === b)) && (arguments[3] = \"visible\");\n      return a.apply(this, Array.prototype.slice.call(arguments, 1));\n    });\n    r(b, \"setVisible\", function (a, b) {\n      var c = this;\n      c.chart.is3d() && c.data.forEach(function (a) {\n        a.visible = a.options.visible = b = \"undefined\" === typeof b ? !B(c.visible, a.visible) : b;\n        c.options.data[c.data.indexOf(a)] = a.options;\n        a.graphic && a.graphic.attr({\n          visibility: b ? \"visible\" : \"hidden\"\n        });\n      });\n      a.apply(this, Array.prototype.slice.call(arguments, 1));\n    });\n    z(a, \"afterInit\", function () {\n      if (this.chart.is3d()) {\n        var a = this.options,\n          b = a.grouping,\n          c = a.stacking,\n          f = this.yAxis.options.reversedStacks,\n          g = 0;\n        if (\"undefined\" === typeof b || b) {\n          b = x(this.chart, c);\n          g = a.stack || 0;\n          for (c = 0; c < b[g].series.length && b[g].series[c] !== this; c++);\n          g = 10 * (b.totalStacks - b[g].position) + (f ? c : -c);\n          this.xAxis.reversed || (g = 10 * b.totalStacks - g);\n        }\n        a.depth = a.depth || 25;\n        this.z = this.z || 0;\n        a.zIndex = g;\n      }\n    });\n    r(b, \"pointAttribs\", f);\n    r(b, \"setState\", k);\n    r(b.pointClass.prototype, \"hasNewShapeType\", c);\n    m.seriesTypes.columnRange && (z = m.seriesTypes.columnrange.prototype, r(z, \"pointAttribs\", f), r(z, \"setState\", k), r(z.pointClass.prototype, \"hasNewShapeType\", c), z.plotGroup = b.plotGroup, z.setVisible = b.setVisible);\n    r(y.prototype, \"alignDataLabel\", function (a, b, c, f, l) {\n      var k = this.chart;\n      f.outside3dPlot = b.outside3dPlot;\n      if (k.is3d() && this.is(\"column\")) {\n        var m = this.options,\n          n = B(f.inside, !!this.options.stacking),\n          p = k.options.chart.options3d,\n          h = b.pointWidth / 2 || 0;\n        m = {\n          x: l.x + h,\n          y: l.y,\n          z: this.z + m.depth / 2\n        };\n        k.inverted && (n && (l.width = 0, m.x += b.shapeArgs.height / 2), 90 <= p.alpha && 270 >= p.alpha && (m.y += b.shapeArgs.width));\n        m = g([m], k, !0, !1)[0];\n        l.x = m.x - h;\n        l.y = b.outside3dPlot ? -9E9 : m.y;\n      }\n      a.apply(this, [].slice.call(arguments, 1));\n    });\n    r(H.prototype, \"getStackBox\", function (a, b, c, f, l, k, r, x) {\n      var n = a.apply(this, [].slice.call(arguments, 1));\n      if (b.is3d() && c.base) {\n        var h = +c.base.split(\",\")[0],\n          p = b.series[h];\n        h = b.options.chart.options3d;\n        p && p instanceof m.seriesTypes.column && (p = {\n          x: n.x + (b.inverted ? r : k / 2),\n          y: n.y,\n          z: p.options.depth / 2\n        }, b.inverted && (n.width = 0, 90 <= h.alpha && 270 >= h.alpha && (p.y += k)), p = g([p], b, !0, !1)[0], n.x = p.x - k / 2, n.y = p.y);\n      }\n      return n;\n    });\n    \"\";\n    return a;\n  });\n  F(a, \"Series/Pie3D/Pie3DPoint.js\", [a[\"Core/Series/SeriesRegistry.js\"]], function (a) {\n    var x = this && this.__extends || function () {\n      var a = function (m, x) {\n        a = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (a, m) {\n          a.__proto__ = m;\n        } || function (a, m) {\n          for (var f in m) m.hasOwnProperty(f) && (a[f] = m[f]);\n        };\n        return a(m, x);\n      };\n      return function (m, x) {\n        function r() {\n          this.constructor = m;\n        }\n        a(m, x);\n        m.prototype = null === x ? Object.create(x) : (r.prototype = x.prototype, new r());\n      };\n    }();\n    a = a.seriesTypes.pie.prototype.pointClass;\n    var y = a.prototype.haloPath;\n    return function (a) {\n      function m() {\n        var m = null !== a && a.apply(this, arguments) || this;\n        m.series = void 0;\n        return m;\n      }\n      x(m, a);\n      m.prototype.haloPath = function () {\n        return this.series.chart.is3d() ? [] : y.apply(this, arguments);\n      };\n      return m;\n    }(a);\n  });\n  F(a, \"Series/Pie3D/Pie3DSeries.js\", [a[\"Core/Globals.js\"], a[\"Series/Pie3D/Pie3DPoint.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Core/Utilities.js\"]], function (a, z, y, D) {\n    var m = this && this.__extends || function () {\n        var a = function (f, c) {\n          a = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (a, c) {\n            a.__proto__ = c;\n          } || function (a, c) {\n            for (var b in c) c.hasOwnProperty(b) && (a[b] = c[b]);\n          };\n          return a(f, c);\n        };\n        return function (f, c) {\n          function b() {\n            this.constructor = f;\n          }\n          a(f, c);\n          f.prototype = null === c ? Object.create(c) : (b.prototype = c.prototype, new b());\n        };\n      }(),\n      x = a.deg2rad,\n      r = a.svg;\n    a = D.extend;\n    var C = D.pick;\n    y = function (a) {\n      function f() {\n        return null !== a && a.apply(this, arguments) || this;\n      }\n      m(f, a);\n      f.prototype.addPoint = function () {\n        a.prototype.addPoint.apply(this, arguments);\n        this.chart.is3d() && this.update(this.userOptions, !0);\n      };\n      f.prototype.animate = function (c) {\n        if (this.chart.is3d()) {\n          var b = this.options.animation;\n          var f = this.center;\n          var g = this.group,\n            k = this.markerGroup;\n          r && (!0 === b && (b = {}), c ? (g.oldtranslateX = C(g.oldtranslateX, g.translateX), g.oldtranslateY = C(g.oldtranslateY, g.translateY), f = {\n            translateX: f[0],\n            translateY: f[1],\n            scaleX: .001,\n            scaleY: .001\n          }, g.attr(f), k && (k.attrSetters = g.attrSetters, k.attr(f))) : (f = {\n            translateX: g.oldtranslateX,\n            translateY: g.oldtranslateY,\n            scaleX: 1,\n            scaleY: 1\n          }, g.animate(f, b), k && k.animate(f, b)));\n        } else a.prototype.animate.apply(this, arguments);\n      };\n      f.prototype.drawDataLabels = function () {\n        if (this.chart.is3d()) {\n          var c = this.chart.options.chart.options3d;\n          this.data.forEach(function (a) {\n            var b = a.shapeArgs,\n              f = b.r,\n              k = (b.start + b.end) / 2;\n            a = a.labelPosition;\n            var m = a.connectorPosition,\n              r = -f * (1 - Math.cos((b.alpha || c.alpha) * x)) * Math.sin(k),\n              v = f * (Math.cos((b.beta || c.beta) * x) - 1) * Math.cos(k);\n            [a.natural, m.breakAt, m.touchingSliceAt].forEach(function (a) {\n              a.x += v;\n              a.y += r;\n            });\n          });\n        }\n        a.prototype.drawDataLabels.apply(this, arguments);\n      };\n      f.prototype.pointAttribs = function (c) {\n        var b = a.prototype.pointAttribs.apply(this, arguments),\n          f = this.options;\n        this.chart.is3d() && !this.chart.styledMode && (b.stroke = f.edgeColor || c.color || this.color, b[\"stroke-width\"] = C(f.edgeWidth, 1));\n        return b;\n      };\n      f.prototype.translate = function () {\n        a.prototype.translate.apply(this, arguments);\n        if (this.chart.is3d()) {\n          var c = this,\n            b = c.options,\n            f = b.depth || 0,\n            g = c.chart.options.chart.options3d,\n            k = g.alpha,\n            m = g.beta,\n            r = b.stacking ? (b.stack || 0) * f : c._i * f;\n          r += f / 2;\n          !1 !== b.grouping && (r = 0);\n          c.data.forEach(function (a) {\n            var g = a.shapeArgs;\n            a.shapeType = \"arc3d\";\n            g.z = r;\n            g.depth = .75 * f;\n            g.alpha = k;\n            g.beta = m;\n            g.center = c.center;\n            g = (g.end + g.start) / 2;\n            a.slicedTranslation = {\n              translateX: Math.round(Math.cos(g) * b.slicedOffset * Math.cos(k * x)),\n              translateY: Math.round(Math.sin(g) * b.slicedOffset * Math.cos(k * x))\n            };\n          });\n        }\n      };\n      f.prototype.drawTracker = function () {\n        a.prototype.drawTracker.apply(this, arguments);\n        this.chart.is3d() && this.points.forEach(function (a) {\n          a.graphic && [\"out\", \"inn\", \"side1\", \"side2\"].forEach(function (b) {\n            a.graphic && (a.graphic[b].element.point = a);\n          });\n        });\n      };\n      return f;\n    }(y.seriesTypes.pie);\n    a(y.prototype, {\n      pointClass: z\n    });\n    \"\";\n    return y;\n  });\n  F(a, \"Series/Pie3D/Pie3DComposition.js\", [a[\"Series/Pie3D/Pie3DPoint.js\"], a[\"Series/Pie3D/Pie3DSeries.js\"], a[\"Core/Series/SeriesRegistry.js\"]], function (a, z, y) {\n    y.seriesTypes.pie.prototype.pointClass.prototype.haloPath = a.prototype.haloPath;\n    y.seriesTypes.pie = z;\n  });\n  F(a, \"Series/Scatter3D/Scatter3DPoint.js\", [a[\"Series/Scatter/ScatterSeries.js\"], a[\"Core/Utilities.js\"]], function (a, z) {\n    var x = this && this.__extends || function () {\n        var a = function (m, r) {\n          a = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (a, f) {\n            a.__proto__ = f;\n          } || function (a, f) {\n            for (var k in f) f.hasOwnProperty(k) && (a[k] = f[k]);\n          };\n          return a(m, r);\n        };\n        return function (m, r) {\n          function x() {\n            this.constructor = m;\n          }\n          a(m, r);\n          m.prototype = null === r ? Object.create(r) : (x.prototype = r.prototype, new x());\n        };\n      }(),\n      D = z.defined;\n    return function (a) {\n      function m() {\n        var m = null !== a && a.apply(this, arguments) || this;\n        m.options = void 0;\n        m.series = void 0;\n        return m;\n      }\n      x(m, a);\n      m.prototype.applyOptions = function () {\n        a.prototype.applyOptions.apply(this, arguments);\n        D(this.z) || (this.z = 0);\n        return this;\n      };\n      return m;\n    }(a.prototype.pointClass);\n  });\n  F(a, \"Series/Scatter3D/Scatter3DSeries.js\", [a[\"Core/Math3D.js\"], a[\"Series/Scatter3D/Scatter3DPoint.js\"], a[\"Series/Scatter/ScatterSeries.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Core/Utilities.js\"]], function (a, z, y, D, m) {\n    var x = this && this.__extends || function () {\n        var a = function (f, c) {\n          a = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (a, c) {\n            a.__proto__ = c;\n          } || function (a, c) {\n            for (var b in c) c.hasOwnProperty(b) && (a[b] = c[b]);\n          };\n          return a(f, c);\n        };\n        return function (f, c) {\n          function b() {\n            this.constructor = f;\n          }\n          a(f, c);\n          f.prototype = null === c ? Object.create(c) : (b.prototype = c.prototype, new b());\n        };\n      }(),\n      r = a.pointCameraDistance;\n    a = m.extend;\n    var C = m.merge;\n    m = function (a) {\n      function f() {\n        var c = null !== a && a.apply(this, arguments) || this;\n        c.data = void 0;\n        c.options = void 0;\n        c.points = void 0;\n        return c;\n      }\n      x(f, a);\n      f.prototype.pointAttribs = function (c) {\n        var b = a.prototype.pointAttribs.apply(this, arguments);\n        this.chart.is3d() && c && (b.zIndex = r(c, this.chart));\n        return b;\n      };\n      f.defaultOptions = C(y.defaultOptions, {\n        tooltip: {\n          pointFormat: \"x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>\"\n        }\n      });\n      return f;\n    }(y);\n    a(m.prototype, {\n      axisTypes: [\"xAxis\", \"yAxis\", \"zAxis\"],\n      directTouch: !0,\n      parallelArrays: [\"x\", \"y\", \"z\"],\n      pointArrayMap: [\"x\", \"y\", \"z\"],\n      pointClass: z\n    });\n    D.registerSeriesType(\"scatter3d\", m);\n    \"\";\n    return m;\n  });\n  F(a, \"masters/highcharts-3d.src.js\", [a[\"Core/Globals.js\"], a[\"Core/Renderer/SVG/SVGRenderer3D.js\"], a[\"Core/Chart/Chart3D.js\"], a[\"Core/Axis/ZAxis.js\"], a[\"Core/Axis/Axis3DComposition.js\"], a[\"Series/Area3D/Area3DSeries.js\"]], function (a, z, y, D, m, F) {\n    z.compose(a.SVGRenderer);\n    y.compose(a.Chart, a.Fx);\n    D.compose(a.Chart);\n    m.compose(a.Axis, a.Tick);\n    F.compose(a.seriesTypes.area);\n  });\n});","map":{"version":3,"mappings":";;;;;;;AAOC,WAAUA,CAAD,EAAU;EACM,QAAtB,KAAI,OAAOC,MAAX,IAAkCA,cAAlC,IACID,EAAQ,SAAR,CACA,GADqBA,CACrB,mBAAiBA,CAFrB,IAG6B,UAAtB,KAAI,OAAOE,MAAX,IAAoCA,UAApC,GACHA,OAAO,0BAAP,EAAmC,CAAC,YAAD,CAAnC,EAAmD,UAAUC,CAAD,EAAa;IACrEH,EAAQG,CAAR,CACAH;IAAAA,eAAqBG,CACrB;IAAA,OAAOH,CAH8D;EAAA,CAAzE,CADG,GAOHA,EAA8B,WAAtB,YAAOG,UAAP,GAAoCA,UAApC,GAAiDC,MAAzD,CAXY;AAAA,CAAnB,EAaC,UAAUD,CAAD,EAAa;EAGpBE,SAASA,CAAe,CAACC,CAAD,EAAMC,CAAN,EAAYC,CAAZ,EAAkBC,CAAlB,EAAsB;IACrCH,iBAAmBC,CAAnB,CAAL,KACID,EAAIC,CAAJ,CAEA,GAFYE,QAAS,IAAT,EAAeD,CAAf,CAEZ,EAA2B,UAA3B,KAAI,OAAOE,WAAX,IACIC,qBACI,IAAID,WAAJ,CACI,wBADJ,EAEI;MAAEE,QAAQ;QAAEL,MAAMA,CAAR;QAAcN,QAAQK,EAAIC,CAAJ;MAAtB;IAAV,CAFJ,CADJ,CAJR,CAD0C;EAAA;EAD1CM,IAAWV,IAAaA,UAAb,GAAmC,EAelDE;EAAAA,EAAgBQ,CAAhB,EAA0B,gBAA1B,EAA4C,CAACA,EAAS,iBAAT,CAAD,EAA8BA,EAAS,mBAAT,CAA9B,CAA5C,EAA0G,UAAUC,CAAD,EAAIC,CAAJ,EAAO;IA4FtHC,SAASA,CAAW,CAACC,CAAD,EAASC,CAAT,EAAgBC,CAAhB,EAAgCC,CAAhC,EAAkD;MAAA,IAC9DC,IAAYH,yBADkD;QAM9DI,IAAWC,EAAKH,CAAL,EACXD,IAAiBD,UAAjB,GAAkC,EADvB,CANmD;QAQ9DM,IAAS;UACLC,GAAGP,WAAHO,GAAqB,CADhB;UAELC,GAAGR,YAAHQ,GAAsB,CAFjB;UAGLC,GAAGN,OAAHM,GAAqB,CAHhB;UAILC,IAAIL,EAAKF,OAAL,EAAsB,CAAtB,CAAJO,GAA+BL,EAAKF,cAAL,EAA6B,CAA7B;QAJ1B,CARqD;QAc9DQ,IAAQX,SAARW,IAAyB,CACzBC;MAAAA,IAAOC,CAAPD,GAAiBT,MAAjBS,IAAmCR,IAAW,EAAX,GAAgB,CAAnDQ,CACAE;MAAAA,IAAQD,CAARC,GAAkBX,OAAlBW,IAAqCV,IAAW,EAAX,GAAgB,CAArDU,CAEU;MAAA,iBAASA,CAAT;QACAC,aAAS,CAACH,CAAV,CADA;QAEAI,aAASF,CAAT,CAFA;QAGAG,aAAS,CAACL,CAAV,CAETX;MAAAA,CAAL,KACIK,GACA,IADYN,UACZ,SAAYA,SAFhB,CAKA;MAAA,OAAOD,MAAW,UAAUmB,CAAD,EAAQ;QACR,SAACd,IAAWc,GAAX,GAAqBA,GAAtB,IAAiCZ,GAAU;QAAA,SAACF,IAAWc,GAAX,GAAqBA,GAAtB,IAAiCZ,GAAU;QAAAa,KAACD,GAAD,IAAY,CAAZ,IAAiBZ,GA5DlI;QAAAc,IAAO;UACHb,GAAGc,CAAHd,GAAiBA,CAAjBA,GAAqBe,CAArBf,GAAmCE,CADhC;UAEHD,GAAG,CAACe,CAAJf,GAAkBc,CAAlBd,GAAgCD,CAAhCC,GAAoCgB,CAApChB,GAAkDA,CAAlDA,GACIa,CADJb,GACkBe,CADlBf,GACgCC,CAH7B;UAIHA,GAAGe,CAAHf,GAAiBa,CAAjBb,GAA+BF,CAA/BE,GAAmCc,CAAnCd,GAAiDD,CAAjDC,GACIe,CADJf,GACkBY,CADlBZ,GACgCA;QAL7B,CA+DCgB;QAAAA,IAAaC,EAAcC,CAAd,EACbrB,CADa,EAEbA,IAFa,CAIjBmB;QAAAA,MAAeA,GAAf,GAA8Bd,CAA9B,GAAsCL,GACtCmB;QAAAA,MAAeA,GAAf,GAA8Bd,CAA9B,GAAsCL,GACtCmB;QAAAA,MAAeE,GAAf,GAA2BhB,CAA3B,GAAmCL,GACnC;QAAA,OAAO;UACHC,GAAIH,IAAWqB,GAAX,GAA0BA,GAD3B;UAEHjB,GAAIJ,IAAWqB,GAAX,GAA0BA,GAF3B;UAGHhB,GAAGgB;QAHA,CAXwB;MAAA,CAA5B,CA5B2D;IAAA;IAkEtEC,SAASA,CAAa,CAACD,CAAD,EAAanB,CAAb,EAAqBsB,CAArB,EAA+B;MAC7CC,IAA0B,CAAb,GAAED,CAAF,IACRA,CADQ,GACGE,wBADH,GAETF,CAFS,IAEGH,GAFH,GAEkBnB,GAFlB,GAE6BsB,CAF7B,IAGT,CACR;MAAA,OAAO;QACHrB,GAAGkB,GAAHlB,GAAkBsB,CADf;QAEHrB,GAAGiB,GAAHjB,GAAkBqB;MAFf,CAL0C;IAAA;IA4DrDE,SAASA,CAAS,CAACC,CAAD,EAAW;MAAA,IACrBC,IAAO,CADc;QAErBC,CAEJ;MAAA,KAAKA,CAAL,GAAS,CAAT,EAAYA,CAAZ,GAAgBF,QAAhB,EAAiCE,GAAjC,EAAsC;QAClC,SAAKA,CAALC,GAAS,CAATA,IAAcH,QACdC;QAAAA,KAAQD,EAASE,CAAT,GAAR,GAAwBF,EAASG,CAAT,GAAxB,GAAwCH,EAASG,CAAT,GAAxC,GAAwDH,EAASE,CAAT,GAFtB;MAAA;MAItC,OAAOD,CAAP,GAAc,CARW;IAAA;IAhN7B,IAAIpB,IAAUjB,SAAd;MACIS,IAAOR,MA6PX;IAAA,OARauC;MACLtC,aAAaA,CADRsC;MAELV,eAAeA,CAFVU;MAGLC,qBAzERA,UAA6BC,CAAD,EAActC,CAAd,EAAqB;QAAA,IACzCG,IAAYH,yBAD6B;UAGlCuC,kBAAkB,CAClB;QAAAnB,mBAAmB,CACnB;QAAAoB,MAAKrC,OAAL,EAAsB,CAAtB,IAA2BE,EAAKF,cAAL,EAA6B,CAA7B,CAA3B,GACCA,OASZ;QAAA,OANesC,UAAUA,SAASlC,CAAT,GAA4BF,EAAKiC,OAAL,EACjDA,GADiD,CAA5B,EACL,CADK,CAAVV,GAEPa,SAASjC,CAAT,GAA4BH,EAAKiC,OAAL,EAChCA,GADgC,CAA5B,EACY,CADZ,CAFOV,GAIPa,SAAShC,CAAT,GAA4BJ,EAAKiC,OAAL,EAChCA,GADgC,CAA5B,EACY,CADZ,CAJOV,CAT8B;MAAA,CAsEpCQ;MAILL,WAAWA,CAJNK;MAKLM,aAbRA,UAAqBV,CAAD,EAAWhC,CAAX,EAAkBC,CAAlB,EAAkC;QAClD,OAAO8B,EAAUjC,EAAYkC,CAAZ,EAAsBhC,CAAtB,EAA6BC,CAA7B,CAAV,CAD2C;MAAA;IAQzCmC,CAhQyG;EAAA,CAA1H,CA0QAjD;EAAAA,EAAgBQ,CAAhB,EAA0B,mCAA1B,EAA+D,CAACA,EAAS,qBAAT,CAAD,EAAkCA,EAAS,iCAAT,CAAlC,EAA+EA,EAAS,mBAAT,CAA/E,CAA/D,EAA8K,UAAUgD,CAAD,EAAQC,CAAR,EAAoB/C,CAApB,EAAuB;IAY1M,IAAIgD,IAAQF,OAAZ;MACIG,IAAUjD,SACVkD;IAAAA,IAAQlD,OAd8L;IAAA,IAetMmD,IAAanD,YAfyL;MAgBtMQ,IAAOR,MAhB+L;MAsBtMoD,IAAe;QACNC,MAAO;UAMhBC,UAAUA,UAAU7D,CAAD,EAAO;YAAA,IAClB8D,IAAS,IADS;cAElBC,IAAWD,UAFO;cAGlBE,IAAQD,EAASD,UAAT,GAA2B,MAA3B,EAAmC9D,CAAnC,CAHU;cAIlBiE,IAAWD,UAEfF;YAAAA,gBAAqB,UAAUI,CAAD,EAAO;cACjC,IAAIC,IAAU;gBACN,SAAS,gBAAT,GAA4BD,CADtB;gBAENE,QAAQH,EAASC,CAAT,CAARE,IAA0B;cAFpB,CAIVL;cAAAA,YAAJ,KACiB,KAAb,KAAIG,CAAJ,GACIC,QADJ,GACqB,2BADrB,GAGkB,MAHlB,KAGSD,CAHT,KAIIC,QAJJ,GAIqB,yBAJrB,CADJ,CAQAL;cAAAA,EAAOI,CAAP,IAAeH,OAAcC,EAAME,CAAN,CAAd,OACLC,CADK,MAENL,CAFM,CAbkB;YAAA,CAArC,CAiBAA;YAAAA,OAAY;cACR,mBAAmB,OADX;cAERM,QAAQH;YAFA,CAAZ,CAKAH;YAAAA,oBAAyBA,SACzBA;YAAAA,YAAiBA,cAEjBA;YAAAA,gBAAqBE,aA/BC;UAAA,CANV;UA2ChBK,sBAAsBA,UAAUC,CAAD,EAAOC,CAAP,EAAYC,CAAZ,EAAoBC,CAApB,EAA0BC,CAA1B,EAAoCC,CAApC,EAA8C;YAAA,IAErEC,IAAU,EACVC;YAAAA,IAAiB,CAAC,IAAD,EACjB,IADiB,EACVJ,CADU,IACF,MADE,EAEjBC,CAFiB,EAGjBC,CAHiB,CAFrB;YAAA,IAMIG,IAAcN,CAAdM,IAAwBN,UACvBA;YAAAA,CAAL,IAOQM,CAaJ,IAbmBA,OAanB,IAZI,UAAU;cACNV,QAAQU;YADF,CAAV,CAYJ,EARApB,EAAWc,CAAX,EAAmB,UAAUO,CAAD,EAAUb,CAAV,EAAgB;cACxCU,EAAQV,CAAR,IAAgB,EAChBU;cAAAA,EAAQV,CAAR,EAAcI,CAAd,IAAsBS,CAElBD;cAAAA,CAAJ,KACIF,EAAQV,CAAR,QADJ,GAC2BM,WAAgBN,CAAhB,CAD3B,IACoD,CADpD,CAJwC;YAAA,CAA5C,CAQA,IAAe,CAAf,IAAoBU,CApBxB,KACIA,EAAQN,CAAR,CACA,GADgBC,CAChB,IAAe,CAAf,IAAoBK,CAFxB,CAsBA;YAAA,OA7Bad,IA6BNkB,oBA7BMlB,IA6BN,EAAkCe,CAAlC,CA9BkE;UAAA,CA3C7D;UA+EhBG,cAAcA,UAAUC,CAAD,EAAQC,CAAR,EAAoBT,CAApB,EAA0BC,CAA1B,EAAoCC,CAApC,EAA8C;YACjE,IAAIb,IAAS,IACbA;YAAAA,gBAAqB,UAAUI,CAAD,EAAO;cAE7BgB,CAAJ,KACID,CADJ,GACYlE,EAAKmE,EAAWhB,CAAX,CAAL,EAAuB,EAAvB,CADZ,CAIA;cAAA,IAAc,EAAd,KAAIe,CAAJ,EACInB,EAAOI,CAAP,EAAaO,CAAb,EAAmBQ,CAAnB,EAA0BP,CAA1B,EAAoCC,CAApC,CAP6B;YAAA,CAArC,CAUA;YAAA,OAAOb,CAZ0D;UAAA,CA/ErD;UAiGhBqB,cAAcA,YAAY;YACtB,kBAAkB,IAAlB,EAAwB,IAAxB,EAA8B,SAA9B,CACA;YAAA,OAAO,sBAFe;UAAA;QAjGV;MADD,CAwGnBxB;IAAAA,WAAsBF,EAAME,MAAN,EAAyB;MAC3CyB,OAAO,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,CADoC;MAE3CC,UAAU,QAFiC;MAG3CC,MAAMA,UAAUtF,CAAD,EAAOuE,CAAP,EAAYI,CAAZ,EAAsBY,CAAtB,EAAyC;QAEpD,IAAoB,QAApB,KAAI,OAAOvF,CAAX,IAA+C,WAA/C,KAAgC,OAAOuE,CAAvC,EAA4D;UACxD,IAAIiB,IAAMxF,CACVA;UAAAA,IAAO,EACPA;UAAAA,EAAKwF,CAAL,IAAYjB,CAH4C;QAAA;QAK5D,OAAIvE,WAAJ,IAAsBwD,EAAQxD,GAAR,CAAtB,GACW,0BAA0B,GAA1B,EAA+B,IAA/B,EAAqC,cAAc,aAAd,GAA8B,MAA9B,EAAsCA,WAAtC,IAAwDA,CAAxD,CAArC,CADX,GAGOsD,sBAA+B,IAA/B,EAAqCtD,CAArC,EAA2C,KAAK,CAAhD,EAAmD2E,CAAnD,EAA6DY,CAA7D,CAV6C;MAAA,CAHb;MAe3CE,SAASA,UAAUzF,CAAD,EAAO0E,CAAP,EAAiBC,CAAjB,EAA2B;QACzC,IAAInB,EAAQxD,GAAR,CAAJ,IAAuBwD,EAAQxD,GAAR,CAAvB,EAAwC;UAChCgE,IAAQ,cAAc,aAAd,GAA8B,MAA9B,EAAsChE,CAAtC,CAAZ;UAAA,IACI0F,IAAc1B,aAClB;UAAA,0BAA0B,GAA1B,EAA+B,IAA/B,EAAqCA,CAArC,EAA4C,SAA5C,EAAuDU,CAAvD,EAAiEC,CAAjE,CACA;UAAA,UAAU;YACNP,QAAQJ;UADF,CAAV,CAII0B;UAAAA,CAAJ,KAAoB,gBAApB,KACI,gBACA,GADmBA,CACnB,EAAK,wBAAL,IACI/B,yBAAoC,IAApC,EAA0C,SAA1C,CAHR,CARoC;QAAA,CAAxC,MAgBIL,yBAAkC,IAAlC,EAAwCtD,CAAxC,EAA8C0E,CAA9C,EAAwDC,CAAxD,CAEJ;QAAA,OAAO,IAnBkC;MAAA,CAfF;MAoC3CgB,YAAYA,UAAUC,CAAD,EAAO;QACX9B,IACb4B,eADa5B,IACQ4B,YAArB,IAA2C,EAD9B5B;QAAAA,IAEbO,sBAA4B,MAA5B,EAAoC,IAApC,EAA0C;UACtCwB,OAAOD,CAD+B;UAGtCE,KAAKvC,EAAMqC,CAAN,WAA0D,CAArC,IALjB9B,IAKiB4B,qBAA2B,KAA3B,IAAyC,CAAzC,GAA6C,EAAlE,OAHiC;UAItCK,MAAMxC,EAAMqC,CAAN,WAA2D,CAAtC,IANlB9B,IAMkB4B,qBAA2B,MAA3B,IAA0C,CAA1C,GAA8C,GAAnE;QAJgC,CAA1C,CAFa5B;QAAAA,IASbP,SATaO,IASE8B,KAAf,GAA6BA,CAC7B;QAAA,OAVa9B,IADW;MAAA;IApCe,CAAzB,CAwDtB;IAAA,OAAOH,CAtLmM;EAAA,CAA9M,CAwLA9D;EAAAA,EAAgBQ,CAAhB,EAA0B,oCAA1B,EAAgE,CAACA,EAAS,sCAAT,CAAD,EAAmDA,EAAS,qBAAT,CAAnD,EAAoFA,EAAS,iBAAT,CAApF,EAAiHA,EAAS,gBAAT,CAAjH,EAA6IA,EAAS,iCAAT,CAA7I,EAA0LA,EAAS,mCAAT,CAA1L,EAAyOA,EAAS,kCAAT,CAAzO,EAAuRA,EAAS,mBAAT,CAAvR,CAAhE,EAAuX,UAAU2F,CAAD,EAAI3C,CAAJ,EAAW/C,CAAX,EAAcwC,CAAd,EAAsBQ,CAAtB,EAAkCK,CAAlC,EAAgDsC,CAAhD,EAA6D1F,CAA7D,EAAgE;IAY5b,IAAI2F,IAAa,IAAbA,IAAqB,cAArBA,IAAyC,YAAY;QACjD,IAAIC,IAAgBA,UAAUC,CAAD,EACjCvE,CADiC,EAC9B;UACKsE,IAAgBE,qBAAhB,IACK;YAAEC,WAAW;UAAb,CADL,YACkCC,KADlC,IAC2C,UAAUH,CAAD,EAC5DvE,CAD4D,EACzD;YAAEuE,cAAcvE,CAAhB;UAAA,CAFK,IAGI,UAAUuE,CAAD,EACrBvE,CADqB,EAClB;YAAE,KAAK2E,IAAIA,CAAT,IAAc3E,CAAd,EAAqBA,iBAAiB2E,CAAjB,CAAJ,KAAyBJ,EAAEI,CAAF,CAAzB,GAAgC3E,EAAE2E,CAAF,CAAhC,CAAnB;UAAA,CACC;UAAA,OAAOL,EAAcC,CAAd,EAAiBvE,CAAjB,CANR;QAAA,CAQH;QAAA,OAAO,UAAUuE,CAAD,EAAIvE,CAAJ,EAAO;UAEnB4E,SAASA,CAAE,GAAG;YAAE,mBAAmBL,CAArB;UAAA;UADdD,EAAcC,CAAd,EAAiBvE,CAAjB,CAEAuE;UAAAA,cAAoB,IAAN,SAAaC,cAAcxE,CAAd,CAAb,IAAiC4E,cAAe5E,WAAf,EAA4B,IAAI4E,CAAjE,GAHK;QAAA,CAV8B;MAAA,CAAb,EAA5C;MAgBIC,IAAaV,YAhBjB;MAiBIzC,IAAQF,OAjBZ;MAkBIsD,IAASrG,QAlBb;MAmBIiB,IAAUjB,SAnBd;MAoBIE,IAAcsC,aApBlB;MAqBIL,IAAYK,WArBhB;MAsBIU,IAAUjD,SAtBd;MAuBIqG,IAASrG,QAvBb;MAwBIkD,IAAQlD,OAxBZ;MAyBIQ,IAAOR,MAzBX;MA+BIsG,IAAM1D,QA/BV;MAgCI2D,IAAM3D,QAhCV;MAiCI4D,IAAK5D,OAjCT;MAkCI6D,IAAW,CAAXA,IAAgB7D,UAAU,CAAV,CAAhB6D,GAA+B,CAA/BA,IAAoC,CAApCA,IAA0CD,CAA1CC,GAA+C,CAA/CA,CAo3BJ;IAAA,OAx2BmC,UAAUC,CAAD,EAAS;MAEjDC,SAASA,CAAa,GAAG;QACrB,OAAkB,IAAlB,KAAOD,CAAP,IAA0BA,QAAa,IAAb,EAAmBE,SAAnB,CAA1B,IAA2D,IADtC;MAAA;MADrBjB,EAAUgB,CAAV,EAAyBD,CAAzB,CAUJC;MAAAA,YAAwBE,UAAUC,CAAD,EAAmB;QAC5CC,IAAmBD,WAAvB;QAAA,IACIE,IAAqBL,WACzBI;QAAAA,eAA8B3D,CAC9B2D;QAAAA,UAAyBC,OACzBD;QAAAA,cAA6BC,WAC7BD;QAAAA,WAA0BC,QAC1BD;QAAAA,eAA8BC,YAC9BD;QAAAA,cAA6BC,WAC7BD;QAAAA,WAA0BC,QAC1BD;QAAAA,eAA8BC,YAC9BD;QAAAA,eAA8BC,YAC9BD;QAAAA,mBAAkCC,gBAZc;MAAA,CAmBpDL;MAAAA,YAAwBM,UAAUC,CAAD,EAAKC,CAAL,EAASC,CAAT,EAAaC,CAAb,EAAiBC,CAAjB,EAAwBC,CAAxB,EAA6BC,CAA7B,EAAiCC,CAAjC,EAAqC;QAAA,IAC9DC,IAAS,EADqD;UAE9DC,IAAWJ,CAAXI,GAAiBL,CACrB;QAAA,OAAKC,CAAL,GAAWD,CAAX,IAAsBC,CAAtB,GAA4BD,CAA5B,GAAoC1E,OAApC,GAA8C,CAA9C,GAAkD,KAAlD,IACI8E,CACAA,GADSA,SAAc,aAAaR,CAAb,EAAiBC,CAAjB,EAAqBC,CAArB,EAAyBC,CAAzB,EAA6BC,CAA7B,EAAoCA,CAApC,GAA6C1E,OAA7C,GAAuD,CAAvD,EAA2D4E,CAA3D,EAA+DC,CAA/D,CAAd,CACTC,MAASA,SAAc,aAAaR,CAAb,EAAiBC,CAAjB,EAAqBC,CAArB,EAAyBC,CAAzB,EAA6BC,CAA7B,GAAsC1E,OAAtC,GAAgD,CAAhD,EAAoD2E,CAApD,EAAyDC,CAAzD,EAA6DC,CAA7D,CAAd,CAFb,IAKKF,CAAL,GAAWD,CAAX,IAAsBA,CAAtB,GAA8BC,CAA9B,GAAoC3E,OAApC,GAA8C,CAA9C,GAAkD,KAAlD,IACI8E,CACAA,GADSA,SAAc,aAAaR,CAAb,EAAiBC,CAAjB,EAAqBC,CAArB,EAAyBC,CAAzB,EAA6BC,CAA7B,EAAoCA,CAApC,GAA6C1E,OAA7C,GAAuD,CAAvD,EAA2D4E,CAA3D,EAA+DC,CAA/D,CAAd,CACTC,MAASA,SAAc,aAAaR,CAAb,EAAiBC,CAAjB,EAAqBC,CAArB,EAAyBC,CAAzB,EAA6BC,CAA7B,GAAsC1E,OAAtC,GAAgD,CAAhD,EAAoD2E,CAApD,EAAyDC,CAAzD,EAA6DC,CAA7D,CAAd,CAFb,IAKO,CAAC,CACA,GADA,EAEAP,CAFA,GAEME,CAFN,GAEWxE,SAAS0E,CAAT,CAFX,GAGMF,CAHN,GAGWX,CAHX,GAGqBkB,CAHrB,GAGiC/E,SAAS0E,CAAT,CAHjC,GAGoDE,CAHpD,EAIAL,CAJA,GAIME,CAJN,GAIWzE,SAAS0E,CAAT,CAJX,GAKMD,CALN,GAKWZ,CALX,GAKqBkB,CALrB,GAKiC/E,SAAS0E,CAAT,CALjC,GAKoDG,CALpD,EAMAP,CANA,GAMME,CANN,GAMWxE,SAAS2E,CAAT,CANX,GAOMH,CAPN,GAOWX,CAPX,GAOqBkB,CAPrB,GAOiC/E,SAAS2E,CAAT,CAPjC,GAOkDC,CAPlD,EAQAL,CARA,GAQME,CARN,GAQWzE,SAAS2E,CAAT,CARX,GASMF,CATN,GASWZ,CATX,GASqBkB,CATrB,GASiC/E,SAAS2E,CAAT,CATjC,GASkDE,CATlD,EAUAP,CAVA,GAUME,CAVN,GAUWxE,SAAS2E,CAAT,CAVX,GAU4BC,CAV5B,EAWAL,CAXA,GAWME,CAXN,GAWWzE,SAAS2E,CAAT,CAXX,GAW4BE,CAX5B,CAAD,CAb2D;MAAA,CAiCtEd;MAAAA,yBAAqCiB,UAAU1H,CAAD,EAAS2H,CAAT,EAAiB;QAC3D,IAAIH,IAAS,EAEbxH;QAAAA,UAAe,UAAUmB,CAAD,EAAQ;UAC5BqG,OAAY,CAAC,GAAD,EAAMrG,GAAN,EAAeA,GAAf,CAAZ,CAD4B;QAAA,CAAhC,CAGInB;QAAAA,QAAJ,KAEIwH,EAAO,CAAP,EAAU,CAAV,CAEA,GAFe,GAEf,EAAIG,CAAJ,IACIH,OAAY,CAAC,GAAD,CAAZ,CALR,CAQA;QAAA,OAAOA,CAdoD;MAAA,CAiB/Df;MAAAA,6BAAyCmB,UAAU5H,CAAD,EAAS;QAAA,IACnDwH,IAAS,EAD0C;UAEnDK,IAAI,EACR7H;QAAAA,UAAe,UAAUmB,CAAD,EAAQ;UAC5BqG,OAAYK,IAAI,CAAC,GAAD,EAAM1G,GAAN,EAAeA,GAAf,CAAJ,GAA8B,CAAC,GAAD,EAAMA,GAAN,EAAeA,GAAf,CAA1C,CACA0G;UAAAA,IAAI,CAACA,CAFuB;QAAA,CAAhC,CAIA;QAAA,OAAOL,CAPgD;MAAA,CAe3Df;MAAAA,qBAAiCqB,UAAUvI,CAAD,EAAO;QAAA,IACzC+D,IAAW,IAD8B;UAEzCyE,IAAM,mBAAmB,MAAnB,CACVA;QAAAA,aAAe,EACfA;QAAAA,mBAAqB,EACrBA;QAAAA,YAAc,EAEdA;QAAAA,SAAWC,UAAUC,CAAD,EAAO;UACvB,IAAoB,QAApB,KAAI,OAAOA,CAAX,KACKlF,EAAQkF,SAAR,CADL,IAEQlF,EAAQkF,UAAR,CAFR,IAGQlF,EAAQkF,gBAAR,CAHR,GAGuC;YACnC,eAAe3H,EAAK2H,SAAL,EAAmB,YAAnB,CACf;YAAA,gBAAgB3H,EAAK2H,UAAL,EAAoB,aAApB,CAChB;YAAA,sBAAsB3H,EAAK2H,gBAAL,EAA0B,mBAA1B,CACtB;YAAA,OAAOA,SACP;YAAA,OAAOA,UACP;YAAA,OAAOA,gBAN4B;YAAA,IAQ/BC,IAAanI,EAAY,aAAZ,EADLmG,EAAO5C,YAAPrD,CACK,EAEb,mBAFa,CARkB;cAW/BX,IAAOgE,aAAoB4E,CAApB,EACP,EADO,CAEPhG;YAAAA,IAAOF,EAAUkG,CAAV,CACXD;YAAAA,MAAS3I,CACT2I;YAAAA,eAAmB,YAAD,IAAwB,CAAxB,GAAiB/F,CAAjB,GACd,SADc,GACF,QAhBmB;UAAA;UAkBvC,OAAOW,uBAAgC,IAAhC,EAAsC6D,SAAtC,CAtBgB;QAAA,CAwB3BqB;QAAAA,YAAcI,UAAUC,CAAD,EAAS;UAC5B,IAAsB,QAAtB,KAAI,OAAOA,CAAX,KACKrF,EAAQqF,SAAR,CADL,IAEQrF,EAAQqF,UAAR,CAFR,IAGQrF,EAAQqF,gBAAR,CAHR,GAGyC;YACrC,eAAe9H,EAAK8H,SAAL,EAAqB,YAArB,CACf;YAAA,gBAAgB9H,EAAK8H,UAAL,EAAsB,aAAtB,CAChB;YAAA,sBAAsB9H,EAAK8H,gBAAL,EAA4B,mBAA5B,CACtB;YAAA,OAAOA,SACP;YAAA,OAAOA,UACP;YAAA,OAAOA,gBAN8B;YAAA,IAQjCF,IAAanI,EAAY,aAAZ,EADLmG,EAAO5C,YAAPrD,CACK,EAEb,mBAFa,CARoB;cAWjCX,IAAOgE,aAAoB4E,CAApB,EACP,EADO,CAEPhG;YAAAA,IAAOF,EAAUkG,CAAV,CACPG;YAAAA,IAAc,YAAD,IAAwB,CAAxB,GAAiBnG,CAAjB,GACT,SADS,GACG,QACpBkG;YAAAA,MAAW9I,CACX;YAAA,UAAU,YAAV,EAAwB+I,CAAxB,CAjBqC;UAAA;UAmBzC,OAAOxF,0BAAmC,IAAnC,EAAyC6D,SAAzC,CAvBqB;QAAA,CA0BhC;QAAA,OAAOqB,OAASxI,CAAT,CAzDsC;MAAA,CAiEjDkH;MAAAA,yBAAqC6B,UAAU/I,CAAD,EAAO;QAAA,IAC7C+D,IAAW,IADkC;UAE7CkE,IAAS,QAFoC;UAG7Ce,IAAUf,SACT;QAAA,eAAL,IACIA,OAAY;UACR,mBAAmB;QADX,CAAZ,CAIJA;QAAAA,UAAe,EAGfA;QAAAA,YAAiBgB,YAAY;UACzB,KAAK,IAAIrG,IAAI,CAAb,EAAgBA,CAAhB,GAAoBqF,cAApB,EAAyCrF,GAAzC,EACIqF,QAAarF,CAAb,WAEJ;iBAAOoG,OAAa,IAAb,CAJkB;QAAA,CAM7Bf;QAAAA,SAAciB,UAAUR,CAAD,EAAOnE,CAAP,EAAYI,CAAZ,EAAsBY,CAAtB,EAAyC;UAC5D,IAAoB,QAApB,KAAI,OAAOmD,CAAX,IAAgClF,EAAQkF,OAAR,CAAhC,EAAqD;YACjD,OAAOT,cAAP,GAA6BS,cAA7B,GACIT,uBAEJ;YAAA,OAAOA,cAAP,GAA6BS,cAA7B,GACIT,aAAkBlE,eAAsBkE,CAAtB,CAAlB,CAEJ;YAAA,KAAK,IAAIrF,IAAI,CAAb,EAAgBA,CAAhB,GAAoB8F,cAApB,EAAuC9F,GAAvC,EACQmB,YAGJ,IAFI,OAAO2E,QAAW9F,CAAX,MAEX,UAAaA,CAAb,OAAqB8F,QAAW9F,CAAX,CAArB,EAAoC,IAApC,EAA0C+B,CAA1C,EAAoDY,CAApD,CAEJ;YAAA,OAAOmD,OAb0C;UAAA;UAerD,OAAOpF,uBAAgC,IAAhC,EAAsC6D,SAAtC,CAhBqD;QAAA,CAkBhEc;QAAAA,YAAiBkB,UAAUN,CAAD,EAASnE,CAAT,EAAmBC,CAAnB,EAA6B;UACnD,IAAIkE,CAAJ,IAAcA,OAAd,EAA4B;YACxB,OAAOZ,cAAP,GAA6BY,cAA7B,GACIZ,uBAEJ;YAAA,OAAOA,cAAP,GAA6BY,cAA7B,GACIZ,aAAkBlE,eAAsBkE,CAAtB,CAAlB,CAEJ;iBAAK,IAAIrF,IAAI,CAAb,EAAgBA,CAAhB,GAAoBiG,cAApB,EAAyCjG,GAAzC,EACIqF,QAAarF,CAAb,UAAwBiG,QAAajG,CAAb,CAAxB,EAAyC8B,CAAzC,EAAmDC,CAAnD,CAEJ;YAAA,OAAOkE,OAViB;UAAA;UAY5B,OAAOvF,0BAAmC,IAAnC,EAAyC6D,SAAzC,CAb4C;QAAA,CAgBvD;QAAA,OAAOc,OAAYjI,CAAZ,CApD0C;MAAA,CA2DrDkH;MAAAA,wBAAoCkC,UAAUC,CAAD,EAAOC,CAAP,EAAkB;QAE3D,IAAId,IAAM,QAEV5B;QAAAA,EAAO4B,CAAP,EAAY,gBAAgBa,CAAhB,CAAZ,CAEAb;QAAAA,WAAac,CAAb,CAEA;QAAA,OAAOd,CARoD;MAAA,CAc/DtB;MAAAA,qBAAiCqC,UAAUD,CAAD,EAAY;QAClD,OAAO,eAAe,QAAf,EAAyBA,CAAzB,CAD2C;MAAA,CAOtDpC;MAAAA,yBAAqCsC,UAAUF,CAAD,EAAY;QA4EtDG,SAASA,CAAW,CAAC7G,CAAD,EAAI;UAIpB,OAAU,CAAV,KAAI8G,CAAJ,IAAmB,CAAnB,GAAe9G,CAAf,IAA4B,CAA5B,GAAwBA,CAAxB,GACW;YACH3B,GAAG0I,EAAK/G,CAAL,GADA;YAKH1B,GAAGyI,EAAK/G,CAAL,GAAH1B,GAAe,EALZ;YAMHC,GAAGwI,EAAK/G,CAAL;UANA,CADX,GAaI+G,EAAK,CAAL,GAAJ,KAAkBA,EAAK,CAAL,GAAlB,IAAoC,CAApC,IAA+B/G,CAA/B,GACW;YACH3B,GAAG0I,EAAK/G,CAAL,GAAH3B,GAAe,EADZ;YAKHC,GAAGyI,EAAK/G,CAAL,GALA;YAMHzB,GAAGwI,EAAK/G,CAAL;UANA,CADX,GAWU,CAAV,KAAIwD,CAAJ,IAAmB,CAAnB,GAAexD,CAAf,IAA4B,CAA5B,GAAwBA,CAAxB,GACW;YACH3B,GAAG0I,EAAK/G,CAAL,GADA;YAKH1B,GAAGyI,EAAK/G,CAAL,GALA;YAMHzB,GAAGwI,EAAK/G,CAAL,GAAHzB,GAAe;UANZ,CADX,GAUOwI,EAAK/G,CAAL,CAtCa;QAAA;QA4CxBgH,SAASA,CAAO,CAAChH,CAAD,EAAI;UAChB,OAAO+G,EAAK/G,CAAL,CADS;QAAA;QAxHkC,IAClD3B,IAAIqI,GAAJrI,IAAmB,CAD+B;UAElDC,IAAIoI,GAAJpI,IAAmB,CAF+B;UAGlDC,IAAImI,GAAJnI,IAAmB,CAH+B;UAOlDuI,IAAIJ,QAAJI,IAAwB,CAP0B;UAQlDG,IAAIP,OAAJO,IAAuB,CAR2B;UASlDzD,IAAIkD,OAAJlD,IAAuB,CAT2B;UAUlD1F,IAAQiG,EAAO,eAAP,CAV0C;UAyBlDnF,IADYd,yBACJc,MAzB0C;UAiClD4C,IAAS,CAjCyC;UAmClDuF,IAAO,CAAC;YACA1I,GAAGA,CADH;YAEAC,GAAGA,CAFH;YAGAC,GAAGA;UAHH,CAAD,EAIA;YACCF,GAAGA,CAAHA,GAAO4I,CADR;YAEC3I,GAAGA,CAFJ;YAGCC,GAAGA;UAHJ,CAJA,EAQA;YACCF,GAAGA,CAAHA,GAAO4I,CADR;YAEC3I,GAAGA,CAAHA,GAAOwI,CAFR;YAGCvI,GAAGA;UAHJ,CARA,EAYA;YACCF,GAAGA,CADJ;YAECC,GAAGA,CAAHA,GAAOwI,CAFR;YAGCvI,GAAGA;UAHJ,CAZA,EAgBA;YACCF,GAAGA,CADJ;YAECC,GAAGA,CAAHA,GAAOwI,CAFR;YAGCvI,GAAGA,CAAHA,GAAOiF;UAHR,CAhBA,EAoBA;YACCnF,GAAGA,CAAHA,GAAO4I,CADR;YAEC3I,GAAGA,CAAHA,GAAOwI,CAFR;YAGCvI,GAAGA,CAAHA,GAAOiF;UAHR,CApBA,EAwBA;YACCnF,GAAGA,CAAHA,GAAO4I,CADR;YAEC3I,GAAGA,CAFJ;YAGCC,GAAGA,CAAHA,GAAOiF;UAHR,CAxBA,EA4BA;YACCnF,GAAGA,CADJ;YAECC,GAAGA,CAFJ;YAGCC,GAAGA,CAAHA,GAAOiF;UAHR,CA5BA,CAnC2C;UAoElDV,IAAc,EAGlBiE;QAAAA,IAAOnJ,EAAYmJ,CAAZ,EAAkBjJ,CAAlB,EAAyB4I,gBAAzB,CA6DP;QAAA,QAAYQ,UAAUC,CAAD,EAAiBC,CAAjB,EAAiCjE,CAAjC,EAAuC;UAAA,IACpDyC,IAAM,CAAC,EAAD,EAAK,EAAL,CAD8C;YAGpDyB,IAAQF,MAAmBH,CAAnB,CAH4C;YAIpDM,IAAQF,MAAmBJ,CAAnB,CAKRO;UAAAA,IAAaJ,MAAmBN,CAAnB,CACbW;UAAAA,IAAaJ,MAAmBP,CAAnB,CACM;UAAA,CAAvB,GAAIhH,EAAUwH,CAAV,CAAJ,GACIzB,CADJ,GACU,CAACyB,CAAD,EAAQ,CAAR,CADV,GAG4B,CAAvB,GAAIxH,EAAUyH,CAAV,CAAJ,GACD1B,CADC,GACK,CAAC0B,CAAD,EAAQ,CAAR,CADL,GAGInE,CAHJ,KAIDL,OAAiBK,CAAjB,CAEI,MADwB,CAA5B,GAAItD,EAAU0H,CAAV,CAAJ,GACU,CAACF,CAAD,EAAQ,CAAR,CADV,GAGiC,CAA5B,GAAIxH,EAAU2H,CAAV,CAAJ,GACK,CAACF,CAAD,EAAQ,CAAR,CADL,GAIK,CAACD,CAAD,EAAQ,CAAR,CAZT,CAeL;iBAAOzB,CA7BiD;QAAA,CAkC5D;QAAA,QAAQsB,EAFAjE,CAAC,CAADA,EAAI,CAAJA,EAAO,CAAPA,EAAU,CAAVA,CAEA,EADDwE,CAAC,CAADA,EAAI,CAAJA,EAAO,CAAPA,EAAU,CAAVA,CACC,EAAuB,OAAvB,CACRC;QAAAA,IAAQC,EAAM,CAAN,CACR;QAAA,QAAUA,EAAM,CAAN,CAIVA;QAAAA,IAAQT,EAFFhE,CAAC,CAADA,EAAI,CAAJA,EAAO,CAAPA,EAAU,CAAVA,CAEE,EADC0E,CAAC,CAADA,EAAI,CAAJA,EAAO,CAAPA,EAAU,CAAVA,CACD,EAAuB,KAAvB,CACRC;QAAAA,IAAQF,EAAM,CAAN,CACR;QAAA,QAAQA,EAAM,CAAN,CAIRA;QAAAA,IAAQT,EAFAY,CAAC,CAADA,EAAI,CAAJA,EAAO,CAAPA,EAAU,CAAVA,CAEA,EADDC,CAAC,CAADA,EAAI,CAAJA,EAAO,CAAPA,EAAU,CAAVA,CACC,EAAuB,MAAvB,CACRC;QAAAA,IAAQL,EAAM,CAAN,CACRM;QAAAA,IAAUN,EAAM,CAAN,CASM;QAAA,CAAhB,KAAIM,CAAJ,GAGIzG,CAHJ,IAjKiB0G,GAiKjB,IAG4BpK,WAH5B,GAG8CO,CAH9C,IAKU4J,CALV,KAMIzG,CANJ,IAjKiB0G,GAiKjB,GAM2B7J,CAN3B,CAQAmD;QAAAA,KAtKiB2G,EAsKjB,IAAwB,CAACC,CAAD,IAEV,CAFU,IAEnBxJ,CAFmB,IAEI,GAFJ,IAELA,CAFK,IAEmB,GAFnB,GAEWA,CAFX,IAEkC,KAFlC,GAE0BA,CAF1B,GAGpBd,YAHoB,GAGDQ,CAHC,GAGG,EAHH,GAGQA,CAHhC,CAIgB;QAAA,CAAhB,KAAI+J,CAAJ,GACI7G,CADJ,IAzKiB8G,GAyKjB,GAC4B/J,CAD5B,GAGU8J,CAHV,KAII7G,CAJJ,IAzKiB8G,GAyKjB,IAI4B,GAJ5B,GAImC/J,CAJnC,EAMA;QAAA,OAAO;UACH0E,OAAO,gBAAgByE,CAAhB,EAAuB,EAAvB,CADJ;UAEHxE,KAAK,gBAAgB2E,CAAhB,EAAuB,EAAvB,CAFF;UAGH1E,MAAM,gBAAgB6E,CAAhB,EAAuB,EAAvB,CAHH;UAIH3G,UAAU;YACNkH,OAAOhI,WAAWiB,CAAX;UADD,CAJP;UAOHsB,aAAaA,CAPV;UASHuF,SAASA,CATN;UAUHD,OAAOA;QAVJ,CA/M+C;MAAA,CA6N1D9D;MAAAA,oBAAgCkE,UAAUjH,CAAD,EAAU;QAO/CkH,SAASA,CAAa,CAACxC,CAAD,EAAS;UAAA,IACvByC,IAAQ,EADe;YAEvBC,IAAK,EAFkB;YAGvB/F,CACJqD;UAAAA,IAASpF,EAAMoF,CAAN,CACT;UAAA,KAAKrD,CAAL,IAAYqD,CAAZ,EACuC,EAAnC,KAAI2C,UAAsBhG,CAAtB,CAAJ,KACI+F,EAAG/F,CAAH,CAEA,GAFUqD,EAAOrD,CAAP,CAEV,EADA,OAAOqD,EAAOrD,CAAP,CACP,MAAQ,EAHZ,CAMJ;UAAA,OAAO8F,IAAQ,CAACC,CAAD,EAAK1C,CAAL,CAAR,GAAuB,EAZH;QAAA;QAPgB,IAC3C4C,IAAU,QADiC;UACvB1H,IAAW0H,UADY;UACMD,IAAgB,yCAoBrErH;QAAAA,IAAUV,EAAMU,CAAN,CACVA;QAAAA,WAAiBA,OAAjB,IAAkC,CAAlC,IAAuC5C,CACvC4C;QAAAA,UAAgBA,MAAhB,IAAgC,CAAhC,IAAqC5C,CAErCkK;QAAAA,QAAc1H,QACd0H;QAAAA,UAAgB1H,QAChB0H;QAAAA,UAAgB1H,QAChB0H;QAAAA,QAAc1H,QACd0H;QAAAA,QAAc1H,QAGd0H;QAAAA,UAAgBC,YAAY;UAAA,IACpBC,IAASF,aADW;YAEpBG,IAAYH,OAAa,OAAb,CAChBA;UAAAA,UAAgBA,CAAhB,CAGA;UAAA,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,OAAxB,UAAyC,UAAUI,CAAD,EAAO;YACrDJ,EAAQI,CAAR,OACU;cACN,SAASD,CAAT,GAAqB;YADf,CADV,MAISD,CAJT,CADqD;UAAA,CAAzD,CANwB;QAAA,CAe5B;QAAA,CAAC,UAAD,EAAa,aAAb,UAAoC,UAAU1L,CAAD,EAAK;UAC9CwL,EAAQxL,CAAR,IAAc,YAAY;YACtB,IAAID,IAAOmH,SACX;YAAA,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,OAAtB,EAA+B,OAA/B,UAAgD,UAAU0E,CAAD,EAAO;cAC5DJ,EAAQI,CAAR,EAAc5L,CAAd,QAAwBwL,EAAQI,CAAR,CAAxB,EAAuC7L,CAAvC,CAD4D;YAAA,CAAhE,CAFsB;UAAA,CADoB;QAAA,CAAlD,CAYAyL;QAAAA,aAAmBK,UAAU3H,CAAD,EAAU;UAAA,IAC9BH,IAAQyH,qBAA2BtH,CAA3B,CADsB;YAE9BC,IAAsB,GAAtBA,GAASJ,MACbyH;UAAAA,YAAkBtH,CAClBsH;UAAAA,WAAiB;YAAErF,GAAGpC,KAAL;YAAgBI,QAAQJ;UAAxB,CAAjB,CACAyH;UAAAA,WAAiB;YAAErF,GAAGpC,KAAL;YAAgBI,QAAQJ;UAAxB,CAAjB,CACAyH;UAAAA,WAAiB;YAAErF,GAAGpC,KAAL;YAAgBI,QAAQJ;UAAxB,CAAjB,CACAyH;UAAAA,aAAmB;YAAErF,GAAGpC,OAAL;YAAkBI,QAAQJ;UAA1B,CAAnB,CACAyH;UAAAA,aAAmB;YAAErF,GAAGpC,OAAL;YAAkBI,QAAQJ;UAA1B,CAAnB,CAEAyH;UAAAA,WAAiBrH,CACjBqH;UAAAA,OAAa;YAAErH,QAAQA;UAAV,CAAb,CAEID;UAAAA,QAAJ,KACIsH,yBAA+BtH,QAA/B,CACA,SAAOA,QAFX,CAbkC;QAAA,CAkBtCsH;QAAAA,WAAiBtH,CAAjB,CAKAsH;QAAAA,eAAqBM,UAAUC,CAAD,EAAQ;UAClC,IAAIC,IAAS1I,EAAMyI,CAAN,WAAsB,GAAtB,OACb;UAAA,YAAYA,CACZ;UAAA,gBAAgB;YAAEpG,MAAMqG;UAAR,CAAhB,CACA;UAAA,gBAAgB;YAAErG,MAAMqG;UAAR,CAAhB,CACA;UAAA,cAAc;YAAErG,MAAMqG;UAAR,CAAd,CACA;UAAA,cAAc;YAAErG,MAAMqG;UAAR,CAAd,CACA;UAAA,cAAc;YAAErG,MAAMoG;UAAR,CAAd,CACA;UAAA,OAAO,IAR2B;QAAA,CAYtC;QAAA,CAAC,SAAD,EAAY,YAAZ,EAA0B,YAA1B,EAAwC,YAAxC,UAA8D,UAAUE,CAAD,EAAS;UAC5ET,EAAQS,CAAR,GAAiB,QAAjB,IAA6B,UAAUF,CAAD,EAAQxG,CAAR,EAAa;YAC/CiG,EAAQjG,CAAR,IAAewG,CACf;YAAA,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,OAAxB,EAAiC,KAAjC,UAAgD,UAAUG,CAAD,EAAK;cAC1DV,EAAQU,CAAR,OAAiB3G,CAAjB,EAAsBwG,CAAtB,CAD0D;YAAA,CAA9D,CAF+C;UAAA,CADyB;QAAA,CAAhF,CAUAP;QAAAA,SAAeW,UAAUvD,CAAD,EAAS;UAAA,IAEzBwD,CACJ;UAAA,IAAsB,QAAtB,KAAI,OAAOxD,CAAX,KACIwD,CADJ,GACehB,EAAcxC,CAAd,CADf,GAEkB;YACV,QAAKwD,EAAS,CAAT,CACLlF;YAAAA,UAAU,CAAV,IAAekF,EAAS,CAAT,CACfzF;YAAAA,EAAO6E,SAAP,EAAwBF,CAAxB,CACAE;YAAAA,WAAiBA,SAAjB,CAJU;UAAA;UAOlB,OAAOnI,uBAAgCmI,CAAhC,EAAyCtE,SAAzC,CAZsB;QAAA,CAiBjCsE;QAAAA,YAAkBa,UAAUzD,CAAD,EAAS0D,CAAT,EAAoB5H,CAApB,EAA8B;UAAA,IAEjD6H,IAAO,YAF0C;YAKjDC,IAAc,OAAdA,GAAwBtJ,uBAAuB,EAAvB,YAAqC,CAArC,EAAwC,CAAxC,CAG5B;UAAA,OAAO0F,QACP;UAAA,OAAOA,GACP;UAAA,OAAOA,OACP;UAAA,OAAOA,MACP;UAAA,QAAOnC,EAAW3F,EAAKwL,CAAL,EAAgB,6BAAhB,CAAX,CACP;UAAA,IAAIG,UAAJ,EAAmB;YACfL,IAAWhB,EAAcxC,CAAd,CAGX4C;YAAAA,EAAQgB,CAAR,IAAsB,CACtB5D;YAAAA,EAAO4D,CAAP,IAAqB,CACrBhB;YAAAA,EAAQgB,CAAR,GAAqB,QAArB,IAAiCnM,MACjC;YAAA,IAAI+L,CAAJ,EAAc;cACV,QAAKA,EAAS,CAAT,CACLK;cAAAA,SAAYC,UAAUC,CAAD,EAAIC,CAAJ,EAAQ;gBAIzBC,SAASA,CAAW,CAACtH,CAAD,EAAM;kBACtB,OAAOgH,EAAKhH,CAAL,CAAP,IAAoBzE,EAAKgM,EAAGvH,CAAH,CAAL,EAAcgH,EAAKhH,CAAL,CAAd,CAApB,GACIgH,EAAKhH,CAAL,CADJ,IACiBqH,KAFK;gBAAA;gBAItBA,MAAJ,KAAgBJ,CAAhB,IACII,gBAAiBpJ,EAAM+I,CAAN,EAAY;kBACzBvL,GAAG6L,EAAY,GAAZ,CADsB;kBAEzB5L,GAAG4L,EAAY,GAAZ,CAFsB;kBAGzBE,GAAGF,EAAY,GAAZ,CAHsB;kBAIzBG,QAAQH,EAAY,QAAZ,CAJiB;kBAKzBjF,OAAOiF,EAAY,OAAZ,CALkB;kBAMzBhF,KAAKgF,EAAY,KAAZ,CANoB;kBAOzBI,OAAOJ,EAAY,OAAZ;gBAPkB,CAAZ,CAAjB,CATqB;cAAA,CAFnB;YAAA;YAuBdP,IAAYG,CA9BG;UAAA;UAgCnB,OAAOpJ,yBAAkC,IAAlC,EAAwCuF,CAAxC,EAAgD0D,CAAhD,EAA2D5H,CAA3D,CA7C8C;QAAA,CAgDzD8G;QAAAA,YAAkB0B,YAAY;UAC1B,kBACA;UAAA,kBACA;UAAA,kBACA;UAAA,oBACA;UAAA,oBACA;UAAA,OAAO7J,yBAAkC,IAAlC,CANmB;QAAA,CAS9BmI;QAAAA,SAAe2B,YAAY;UACvB,eACA;UAAA,eACA;UAAA,eACA;UAAA,iBACA;UAAA,iBALuB;QAAA,CAO3B3B;QAAAA,SAAe4B,UAAUC,CAAD,EAAU;UAC9B,cAAcA,CAAd,CACA;UAAA,cAAcA,CAAd,CACA;UAAA,cAAcA,CAAd,CACA;UAAA,gBAAgBA,CAAhB,CACA;UAAA,gBAAgBA,CAAhB,CAL8B;QAAA,CAQlC;QAAA,OAAO7B,CAjMwC;MAAA,CAuMnDvE;MAAAA,wBAAoCqG,UAAUjE,CAAD,EAAY;QA8KrDkE,SAASA,CAAa,CAACC,CAAD,EAAQ;UAClBA,CAAR,IAAiB,CAAjB,GAAqBtK,OACjBsK;UAAAA,CAAJ,GAAYtK,OAAZ,KACIsK,CADJ,GACY,CADZ,GACgBtK,OADhB,GAC0BsK,CAD1B,CAGA;UAAA,OAAOA,CALmB;QAAA;QA9KuB,IACjDhG,IAAK6B,GAAL7B,IAAoB,CAD6B;UAEjDC,IAAK4B,GAAL5B,IAAoB,CAF6B;UAGjDG,IAAQyB,OAARzB,IAA2B,CAHsB;UAIjDC,KAAOwB,KAAPxB,IAAwB,CAAxBA,IAA6B,MAJoB;UAKjDkF,IAAI1D,GAAJ0D,IAAmB,CAL8B;UAMjDU,IAAKpE,QAALoE,IAAyB,CANwB;UAOjDtH,IAAIkD,OAAJlD,IAAuB,CAP0B;UAQjD5E,IAAQ8H,OAAR9H,IAA2B,CARsB;UASjDF,IAAOgI,MAAPhI,IAAyB,CATwB;UAW7CqM,IAAKxK,SAAS0E,CAAT,CAXwC;UAYjD+F,IAAKzK,SAAS0E,CAAT,CACLgG;QAAAA,IAAK1K,SAAS2E,CAAT,CAb4C;QAAA,IAcjDgG,IAAK3K,SAAS2E,CAAT,CAd4C;UAejDH,IAAKqF,CAALrF,GAASxE,SAAS7B,CAAT,CACJ0L;QAAAA,CAALpF,IAASzE,SAAS3B,CAAT,CAhBwC;QAAA,IAiBjDuM,IAAML,CAANK,GAAW5K,SAAS7B,CAAT,CAjBsC;UAkBjD0M,IAAMN,CAANM,GAAW7K,SAAS3B,CAAT,CACXuG;QAAAA,IAAK3B,CAAL2B,GAAS5E,SAAS7B,CAAT,CART;QAAA,IASA0G,IAAK5B,CAAL4B,GAAS7E,SAAS3B,CAAT,CAELsE;QAAAA,IAAM,CACN,CAAC,GAAD,EACJ2B,CADI,GACEE,CADF,GACOgG,CADP,EAEJjG,CAFI,GAEEE,CAFF,GAEOgG,CAFP,CADM,CAKd9H;QAAAA,IAAMA,SAAWoB,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BC,CAA9B,EAAkCC,CAAlC,EAAsCC,CAAtC,EAA6CC,CAA7C,EAAkD,CAAlD,EAAqD,CAArD,CAAX,CACNhC;QAAAA,OAAS,CACL,GADK,EACA2B,CADA,GACMsG,CADN,GACYF,CADZ,EACiBnG,CADjB,GACuBsG,CADvB,GAC6BF,CAD7B,CAAT,CAGAhI;QAAAA,IAAMA,SAAWoB,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BqG,CAA9B,EAAmCC,CAAnC,EAAwClG,CAAxC,EAA6CD,CAA7C,EAAoD,CAApD,EAAuD,CAAvD,CAAX,CACN/B;QAAAA,OAAS,CAAC,GAAD,CAAT,CAhCqD;QAAA,IAkCjDjE,IAAY,CAAP,OAAWsB,OAAX,GAAqB,CAArB,GAAyB,CAC9ByJ;QAAAA,IAAa,CAAR,OAAY,CAAZ,GAAgBzJ,OAAhB,GAA0B,CAC/B8K;QAAAA,IAASpG,IAAQ,CAAChG,CAAT,GAAagG,CAAb,GAAsBC,IAAM,CAACjG,CAAP,GAAW,CAACA,CAAZ,GAAgBgG,CApCE;QAAA,IAqCjDqG,IAAOpG,IAAMf,CAAN,GAAW6F,CAAX,GAAe9E,CAAf,GAAsBD,IAAQd,CAAR,GAAa6F,CAAb,GAAiB7F,CAAjB,GAAsB6F,CAAtB,GAA0B9E,CArCN;UAsCjDqG,IAAS,CAATA,GAAapH,CAAboH,GAAkBvB,CAwBlBwB;QAAAA,IAAM,CACF,CAAC,GAAD,EACJ3G,CADI,GACEE,CADF,GACOd,EAAIoH,CAAJ,CADP,EAEJvG,CAFI,GAEEE,CAFF,GAEOd,EAAImH,CAAJ,CAFP,CADE,CAKVG;QAAAA,IAAMA,SAAWlH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BC,CAA9B,EAAkCC,CAAlC,EAAsCqG,CAAtC,EAA8CC,CAA9C,EAAoD,CAApD,EAAuD,CAAvD,CAAX,CAGFpG;QAAAA,CAAJ,GAAUqG,CAAV,IAAoBtG,CAApB,GAA4BsG,CAA5B,IAEIC,OAAS,CACL,GADK,EACA3G,CADA,GACME,CADN,GACWd,EAAIqH,CAAJ,CADX,GACwBnG,CADxB,EAC4BL,CAD5B,GACkCE,CADlC,GACuCd,EAAIoH,CAAJ,CADvC,GACoDlG,CADpD,CAAT,CAqBA,EAjBAoG,CAiBA,GAjBMA,SAAWlH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BC,CAA9B,EAAkCC,CAAlC,EAAsCsG,CAAtC,EAA4CC,CAA5C,EAAoDpG,CAApD,EAAwDC,CAAxD,CAAX,CAiBN,EAfAoG,OAAS,CACL,GADK,EACA3G,CADA,GACME,CADN,GACWd,EAAIsH,CAAJ,CADX,EACyBzG,CADzB,GAC+BE,CAD/B,GACoCd,EAAIqH,CAAJ,CADpC,CAAT,CAeA,EAXAC,CAWA,GAXMA,SAAWlH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BC,CAA9B,EAAkCC,CAAlC,EAAsCuG,CAAtC,EAA8CrG,CAA9C,EAAmD,CAAnD,EAAsD,CAAtD,CAAX,CAWN,EATAsG,OAAS,CACL,GADK,EACA3G,CADA,GACME,CADN,GACWd,EAAIiB,CAAJ,CADX,GACuBC,CADvB,EAC2BL,CAD3B,GACiCE,CADjC,GACsCd,EAAIgB,CAAJ,CADtC,GACkDE,CADlD,CAAT,CASA,EALAoG,CAKA,GALMA,SAAWlH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BC,CAA9B,EAAkCC,CAAlC,EAAsCE,CAAtC,EAA2CqG,CAA3C,EAAmDpG,CAAnD,EAAuDC,CAAvD,CAAX,CAKN,EAJAoG,OAAS,CACL,GADK,EACA3G,CADA,GACME,CADN,GACWd,EAAIsH,CAAJ,CADX,EACyBzG,CADzB,GAC+BE,CAD/B,GACoCd,EAAIqH,CAAJ,CADpC,CAAT,CAIA,MAAMC,SAAWlH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BC,CAA9B,EAAkCC,CAAlC,EAAsCuG,CAAtC,EAA8CD,CAA9C,EAAoD,CAApD,EAAuD,CAAvD,CAAX,CAvBV,IA0BSpG,CA1BT,GA0Bef,CA1Bf,GA0BoB6F,CA1BpB,IA0ByB/E,CA1BzB,GA0BiCd,CA1BjC,GA0BsC6F,CA1BtC,KA4BIwB,OAAS,CACL,GADK,EAEL3G,CAFK,GAECE,CAFD,GAEMxE,SAAS+K,CAAT,CAFN,GAEwBnG,CAFxB,EAGLL,CAHK,GAGCE,CAHD,GAGMzE,SAAS+K,CAAT,CAHN,GAGwBlG,CAHxB,CAAT,CAYA,EANAoG,CAMA,GANMA,SAAWlH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BC,CAA9B,EAAkCC,CAAlC,EAAsCsG,CAAtC,EAA4CpG,CAA5C,EAAiDC,CAAjD,EAAqDC,CAArD,CAAX,CAMN,EAJAoG,OAAS,CACL,GADK,EACA3G,CADA,GACME,CADN,GACWxE,SAAS2E,CAAT,CADX,EAC2BJ,CAD3B,GACiCE,CADjC,GACsCzE,SAAS2E,CAAT,CADtC,CAAT,CAIA,MAAMsG,SAAWlH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BC,CAA9B,EAAkCC,CAAlC,EAAsCE,CAAtC,EAA2CoG,CAA3C,EAAiD,CAAjD,EAAoD,CAApD,CAAX,CAxCV,CA0CAE;QAAAA,OAAS,CACL,GADK,EAEL3G,CAFK,GAECE,CAFD,GAEMxE,SAAS+K,CAAT,CAFN,GAEwBnG,CAFxB,EAGLL,CAHK,GAGCE,CAHD,GAGMzE,SAAS+K,CAAT,CAHN,GAGwBlG,CAHxB,CAAT,CAKAoG;QAAAA,IAAMA,SAAWlH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BC,CAA9B,EAAkCC,CAAlC,EAAsCsG,CAAtC,EAA4CD,CAA5C,EAAoDlG,CAApD,EAAwDC,CAAxD,CAAX,CACNoG;QAAAA,OAAS,CAAC,GAAD,CAAT,CAEIC;QAAAA,IAAM,CACF,CAAC,GAAD,EACJ5G,CADI,GACEsG,CADF,GACQJ,CADR,EAEJjG,CAFI,GAEEsG,CAFF,GAEQJ,CAFR,CADE,CAKVS;QAAAA,IAAMA,SAAWnH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BqG,CAA9B,EAAmCC,CAAnC,EAAwCnG,CAAxC,EAA+CC,CAA/C,EAAoD,CAApD,EAAuD,CAAvD,CAAX,CACNuG;QAAAA,OAAS,CACL,GADK,EAEL5G,CAFK,GAECsG,CAFD,GAEO5K,SAAS2E,CAAT,CAFP,GAEwBC,CAFxB,EAGLL,CAHK,GAGCsG,CAHD,GAGO7K,SAAS2E,CAAT,CAHP,GAGwBE,CAHxB,CAAT,CAKAqG;QAAAA,IAAMA,SAAWnH,UAAsBO,CAAtB,EAA0BC,CAA1B,EAA8BqG,CAA9B,EAAmCC,CAAnC,EAAwClG,CAAxC,EAA6CD,CAA7C,EAAoDE,CAApD,EAAwDC,CAAxD,CAAX,CACNqG;QAAAA,OAAS,CAAC,GAAD,CAAT,CAEIC;QAAAA,IAAQ,CACJ,CAAC,GAAD,EACJ7G,CADI,GACEE,CADF,GACOgG,CADP,EAEJjG,CAFI,GAEEE,CAFF,GAEOgG,CAFP,CADI,EAIJ,CAAC,GAAD,EACJnG,CADI,GACEE,CADF,GACOgG,CADP,GACa5F,CADb,EAEJL,CAFI,GAEEE,CAFF,GAEOgG,CAFP,GAEa5F,CAFb,CAJI,EAOJ,CAAC,GAAD,EACJP,CADI,GACEsG,CADF,GACQJ,CADR,GACc5F,CADd,EAEJL,CAFI,GAEEsG,CAFF,GAEQJ,CAFR,GAEc5F,CAFd,CAPI,EAUJ,CAAC,GAAD,EACJP,CADI,GACEsG,CADF,GACQJ,CADR,EAEJjG,CAFI,GAEEsG,CAFF,GAEQJ,CAFR,CAVI,EAaJ,CAAC,GAAD,CAbI,CAeRW;QAAAA,IAAQ,CACJ,CAAC,GAAD,EACJ9G,CADI,GACEE,CADF,GACOkG,CADP,EAEJnG,CAFI,GAEEE,CAFF,GAEOkG,CAFP,CADI,EAIJ,CAAC,GAAD,EACJrG,CADI,GACEE,CADF,GACOkG,CADP,GACa9F,CADb,EAEJL,CAFI,GAEEE,CAFF,GAEOkG,CAFP,GAEa9F,CAFb,CAJI,EAOJ,CAAC,GAAD,EACJP,CADI,GACEsG,CADF,GACQF,CADR,GACc9F,CADd,EAEJL,CAFI,GAEEsG,CAFF,GAEQF,CAFR,GAEc9F,CAFd,CAPI,EAUJ,CAAC,GAAD,EACJP,CADI,GACEsG,CADF,GACQF,CADR,EAEJnG,CAFI,GAEEsG,CAFF,GAEQF,CAFR,CAVI,EAaJ,CAAC,GAAD,CAbI,CAiBRU;QAAAA,IAAYrL,WAAW6E,CAAX,EAAe,CAACD,CAAhB,CACZ0G;QAAAA,IAAWtL,SAAS2E,CAAT,GAAe0G,CAAf,CACXE;QAAAA,IAAavL,SAAS0E,CAAT,GAAiB2G,CAAjB,CACbG;QAAAA,IAAWxL,UAAU0E,CAAV,GAAkBC,CAAlB,IAAyB,CAAzB,GAA6B0G,CAA7B,CAYfC;QAAAA,IAAWjB,EAAciB,CAAd,CACXC;QAAAA,IAAalB,EAAckB,CAAd,CACbC;QAAAA,IAAWnB,EAAcmB,CAAd,CAGFA;QAAAA,CAALC,IADeC,GAEfC;QAAAA,IAFeD,GAEfC,GAAKJ,CACAD;QAAAA,CAALM,IAHeF,GAInB;QAAA,OAAO;UACH/I,KAAKA,CADF;UAGHkJ,MAPeH,GAOfG,GAAM7L,OAAN6L,GAA+B,CAH5B;UAIHZ,KAAKA,CAJF;UAKHa,MAAM9L,SAASyL,CAAT,EAAaE,CAAb,EAAiBC,CAAjB,CALH;UAMHV,KAAKA,CANF;UAOHa,MAAM/L,SAASyL,CAAT,EAAaE,CAAb,EAAiBC,CAAjB,CAPH;UAQHT,OAAOA,CARJ;UAUHa,QAAa,GAAbA,GAAQJ,CAVL;UAWHR,OAAOA,CAXJ;UAYHa,QAAa,GAAbA,GAAQN;QAZL,CA7L8C;MAAA,CA4MzD;MAAA,OAAO5H,CAh2B0C;IAAA,CAAlBA,CAi2BjCjB,CAj2BiCiB,CA1DyZ;EAAA,CAAhc,CAo6BArH;EAAAA,EAAgBQ,CAAhB,EAA0B,uBAA1B,EAAmD,CAACA,EAAS,qBAAT,CAAD,EAAkCA,EAAS,kBAAT,CAAlC,EAAgEA,EAAS,gBAAT,CAAhE,EAA4FA,EAAS,mBAAT,CAA5F,CAAnD,EAA+K,UAAUgD,CAAD,EAAQgM,CAAR,EAAWvM,CAAX,EAAmBvC,CAAnB,EAAsB;IAY1M,IAAIgD,IAAQF,OAAZ;MACIiM,IAAwBD,gBAD5B;MAEI7O,IAAcsC,aAFlB;MAGIM,IAAcN,aAHlB;MAIIyM,IAAWhP,UAJf;MAKIiP,IAAUjP,SALd;MAMIkD,IAAQlD,OANZ;MAOIQ,IAAOR,MAPX;MAQIkP,IAAOlP,MARX;MASImP,CACH;IAAA,WAAUA,CAAD,EAAU;MAqsBhBC,SAASA,CAAW,CAACC,CAAD,EAAI;QAChB,WAAJ,IAC2B,SAD3B,KACQA,cADR,KAEQA,cAFR,GAEyB,WAFzB,CADoB;MAAA;MAUxBC,SAASA,CAAmB,GAAG;QAC3B,IAAI,YAAJ,IACI,WADJ,EACiB;UAAA,IAET9L,IADQrD,IACGqD,SAFF;YAGTlD,IAFQH,IAEIoP,wBAHH;YAITC,IAHQrP,IAGAsP,qBAJC;YAKTC,IAJQvP,IAIHwP,SALI;YAMTC,IALQzP,IAKHwP,SAALC,GALQzP,IAKc0P,UANb;YAOTC,IANQ3P,IAMH4P,QAPI;YAQTC,IAPQ7P,IAOH4P,QAALC,GAPQ7P,IAOa8P,WAErBC;UAAAA,IAAK5P,OAVI;UAAA,IAWT6P,IAAMT,CAANS,IAAYX,iBAAqBA,WAArB,GAAuC,CAAnDW,CAXS;YAYTC,IAAMR,CAANQ,IAAYZ,kBAAsBA,YAAtB,GAAyC,CAArDY,CAZS;YAaTC,IAAMP,CAANO,IAAYb,gBAAoBA,UAApB,GAAqC,CAAjDa,CAbS;YAcTC,IAAMN,CAANM,IAAYd,mBAAuBA,aAAvB,GAA2C,CAAvDc,CAdS;YAeTC,IANKC,CAMLD,IAAYf,kBAAsBA,YAAtB,GAAyC,CAArDe,CAfS;YAgBTE,IAAMP,CAANO,IAAYjB,iBAAqBA,WAArB,GAAuC,CAAnDiB,CAhBS;YAiBTvM,IAhBQ/D,IAgBDuQ,eAAoB,SAApB,GAAgC,MAhB/BvQ;UAAAA,IAiBZsP,mBAAwBD,CAjBZrP;UAAAA,IAkBPwQ,YAAL,KAlBYxQ,IAmBRwQ,YADJ,GACwB;YAChB1G,QAAQzG,oBADQ;YAEhB+B,KAAK/B,oBAFW;YAGhB4G,MAAM5G,oBAHU;YAIhB2G,OAAO3G,oBAJS;YAKhBsG,MAAMtG,oBALU;YAMhB8B,OAAO9B;UANS,CADxB,CAlBYrD;UAAAA,IA4BZwQ,oBAAyBzM,CAAzB,EAA+B;YAC3B,SAAS,gDADkB;YAE3BL,QAAQ2L,uBAA2B,IAA3B,GAAmC,GAFhB;YAG3BoB,OAAO,CAAC;cACAvL,MAAMrC,EAAMwM,cAAN,WAAmC,EAAnC,OADN;cAEArN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG2P,CAFA;gBAGH1P,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CARG,EAYH;gBACC/P,GAAGyP,CADJ;gBAECxP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CAZG,CAFV;cAmBAI,SAASrB;YAnBT,CAAD,EAqBH;cACInK,MAAMrC,EAAMwM,cAAN,WAAmC,EAAnC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGgP,CADA;gBAEH/O,GAAGqP,CAFA;gBAGHpP,GAAGsP;cAHA,CAAD,EAIH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CAJG,EAQH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAzDX4P;cAsDU,CARG,EAYH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GA7DX4P;cA0DU,CAZG,CAFd;cAmBIK,SAASrB;YAnBb,CArBG,EA0CH;cACInK,MAAMrC,EAAMwM,cAAN,WAAmC,GAAnC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG2P,CAFA;gBAGH1P,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAGyP,CADJ;gBAECxP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAlFX4P;cA+EU,CAZG,CAFd;cAmBIK,SAASrB,gBAATqB,IAAiC,CAACrB;YAnBtC,CA1CG,EA+DH;cACInK,MAAMrC,EAAMwM,cAAN,WAAmC,GAAnC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG2P,CAFA;gBAGH1P,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAnGX4P;cAgGU,CARG,EAYH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB,gBAATqB,IAAiC,CAACrB;YAnBtC,CA/DG,EAoFH;cACInK,MAAMrC,EAAMwM,cAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG2P,CAFA;gBAGH1P,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAGyP,CADJ;gBAECxP,GAAG2P,CAFJ;gBAGC1P,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAxHX4P;cAqHU,CARG,EAYH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GA5HX4P;cAyHU,CAZG,CAFd;cAmBIK,SAASrB,gBAATqB,IAAiC,CAACrB;YAnBtC,CApFG,EAyGH;cACInK,MAAMrC,EAAMwM,cAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG2P,CAFA;gBAGH1P,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB,gBAATqB,IAAiC,CAACrB;YAnBtC,CAzGG;UAHoB,CAA/B,CA5BYrP;UAAAA,IA8JZwQ,iBAAsBzM,CAAtB,EAA4B;YACxB,SAAS,6CADe;YAExBL,QAAQ2L,oBAAwB,IAAxB,GAAgC,GAFhB;YAGxBoB,OAAO,CAAC;cACAvL,MAAMrC,EAAMwM,WAAN,WAAgC,EAAhC,OADN;cAEArN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG0P,CAFA;gBAGHzP,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CARG,EAYH;gBACC7P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CAZG,CAFV;cAmBAM,SAASrB;YAnBT,CAAD,EAqBH;cACInK,MAAMrC,EAAMwM,WAAN,WAAgC,EAAhC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGgP,CADA;gBAEH/O,GAAGmP,CAFA;gBAGHlP,GAnLX4P;cAgLc,CAAD,EAIH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAvLX4P;cAoLU,CAJG,EAQH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB;YAnBb,CArBG,EA0CH;cACInK,MAAMrC,EAAMwM,WAAN,WAAgC,GAAhC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG0P,CAFA;gBAGHzP,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GAhNX4P;cA6MU,CARG,EAYH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB,aAATqB,IAA8B,CAACrB;YAnBnC,CA1CG,EA+DH;cACInK,MAAMrC,EAAMwM,WAAN,WAAgC,GAAhC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG0P,CAFA;gBAGHzP,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAzOX4P;cAsOU,CAZG,CAFd;cAmBIK,SAASrB,aAATqB,IAA8B,CAACrB;YAnBnC,CA/DG,EAoFH;cACInK,MAAMrC,EAAMwM,WAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG0P,CAFA;gBAGHzP,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GA1PX4P;cAuPU,CARG,EAYH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GA9PX4P;cA2PU,CAZG,CAFd;cAmBIK,SAASrB,aAATqB,IAA8B,CAACrB;YAnBnC,CApFG,EAyGH;cACInK,MAAMrC,EAAMwM,WAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG0P,CAFA;gBAGHzP,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB,aAATqB,IAA8B,CAACrB;YAnBnC,CAzGG;UAHiB,CAA5B,CA9JYrP;UAAAA,IAgSZwQ,kBAAuBzM,CAAvB,EAA6B;YACzB,SAAS,8CADgB;YAEzBL,QAAQ2L,qBAAyB,IAAzB,GAAiC,GAFhB;YAGzBoB,OAAO,CAAC;cACAvL,MAAMrC,EAAMwM,YAAN,WAAiC,EAAjC,OADN;cAEArN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG2P,CAFA;gBAGH1P,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GApSX4P;cAiSU,CAJG,EAQH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGyP,CADJ;gBAECxP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CAZG,CAFV;cAmBAI,SAASrB,cAATqB,IAA+B,CAACrB;YAnBhC,CAAD,EAqBH;cACInK,MAAMrC,EAAMwM,YAAN,WAAiC,EAAjC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG0P,CAFA;gBAGHzP,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CAJG,EAQH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GA7TX4P;cA0TU,CARG,EAYH;gBACC9P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CAZG,CAFd;cAmBIM,SAASrB,cAATqB,IAA+B,CAACrB;YAnBpC,CArBG,EA0CH;cACInK,MAAMrC,EAAMwM,YAAN,WAAiC,GAAjC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG2P,CAFA;gBAGH1P,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CARG,EAYH;gBACC7P,GAAGyP,CADJ;gBAECxP,GAAG2P,CAFJ;gBAGC1P,GAAG2P;cAHJ,CAZG,CAFd;cAmBIM,SAASrB;YAnBb,CA1CG,EA+DH;cACInK,MAAMrC,EAAMwM,YAAN,WAAiC,GAAjC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGgP,CADA;gBAEH/O,GAAGmP,CAFA;gBAGHlP,GAAGsP;cAHA,CAAD,EAIH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CAJG,EAQH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAvWX4P;cAoWU,CARG,EAYH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GA3WX4P;cAwWU,CAZG,CAFd;cAmBIK,SAASrB;YAnBb,CA/DG,EAoFH;cACInK,MAAMrC,EAAMwM,YAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG2P,CAFA;gBAGH1P,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GA5XX4P;cAyXU,CARG,EAYH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAhYX4P;cA6XU,CAZG,CAFd;cAmBIK,SAASrB,cAATqB,IAA+B,CAACrB;YAnBpC,CApFG,EAyGH;cACInK,MAAMrC,EAAMwM,YAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG0P,CAFA;gBAGHzP,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAGyP,CADJ;gBAECxP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB,cAATqB,IAA+B,CAACrB;YAnBpC,CAzGG;UAHkB,CAA7B,CAhSYrP;UAAAA,IAkaZwQ,mBAAwBzM,CAAxB,EAA8B;YAC1B,SAAS,+CADiB;YAE1BL,QAAQ2L,sBAA0B,IAA1B,GAAkC,GAFhB;YAG1BoB,OAAO,CAAC;cACAvL,MAAMrC,EAAMwM,aAAN,WAAkC,EAAlC,OADN;cAEArN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG2P,CAFA;gBAGH1P,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CAJG,EAQH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GA1aX4P;cAuaU,CARG,EAYH;gBACC9P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG2P;cAHJ,CAZG,CAFV;cAmBAM,SAASrB,eAATqB,IAAgC,CAACrB;YAnBjC,CAAD,EAqBH;cACInK,MAAMrC,EAAMwM,aAAN,WAAkC,EAAlC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG0P,CAFA;gBAGHzP,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GA3bX4P;cAwbU,CAJG,EAQH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CAZG,CAFd;cAmBII,SAASrB,eAATqB,IAAgC,CAACrB;YAnBrC,CArBG,EA0CH;cACInK,MAAMrC,EAAMwM,aAAN,WAAkC,GAAlC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGkP,CADA;gBAEHjP,GAAGmP,CAFA;gBAGHlP,GA5cX4P;cAycc,CAAD,EAIH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAhdX4P;cA6cU,CAJG,EAQH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB;YAnBb,CA1CG,EA+DH;cACInK,MAAMrC,EAAMwM,aAAN,WAAkC,GAAlC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG2P,CAFA;gBAGH1P,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CARG,EAYH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CAZG,CAFd;cAmBII,SAASrB;YAnBb,CA/DG,EAoFH;cACInK,MAAMrC,EAAMwM,aAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG0P,CAFA;gBAGHzP,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GA9fX4P;cA2fU,CARG,EAYH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAlgBX4P;cA+fU,CAZG,CAFd;cAmBIK,SAASrB,eAATqB,IAAgC,CAACrB;YAnBrC,CApFG,EAyGH;cACInK,MAAMrC,EAAMwM,aAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG2P,CAFA;gBAGH1P,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB,eAATqB,IAAgC,CAACrB;YAnBrC,CAzGG;UAHmB,CAA9B,CAlaYrP;UAAAA,IAoiBZwQ,kBAAuBzM,CAAvB,EAA6B;YACzB,SAAS,8CADgB;YAEzBL,QAAQ2L,qBAAyB,IAAzB,GAAiC,GAFhB;YAGzBoB,OAAO,CAAC;cACAvL,MAAMrC,EAAMwM,YAAN,WAAiC,EAAjC,OADN;cAEArN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG2P,CAFA;gBAGH1P,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAGyP,CADJ;gBAECxP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CAZG,CAFV;cAmBAW,SAASrB,cAATqB,IAA+B,CAACrB;YAnBhC,CAAD,EAqBH;cACInK,MAAMrC,EAAMwM,YAAN,WAAiC,EAAjC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG0P,CAFA;gBAGHzP,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB,cAATqB,IAA+B,CAACrB;YAnBpC,CArBG,EA0CH;cACInK,MAAMrC,EAAMwM,YAAN,WAAiC,GAAjC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG2P,CAFA;gBAGH1P,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB,cAATqB,IAA+B,CAACrB;YAnBpC,CA1CG,EA+DH;cACInK,MAAMrC,EAAMwM,YAAN,WAAiC,GAAjC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG0P,CAFA;gBAGHzP,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB,cAATqB,IAA+B,CAACrB;YAnBpC,CA/DG,EAoFH;cACInK,MAAMrC,EAAMwM,YAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGgP,CADA;gBAEH/O,GAAGmP,CAFA;gBAGHlP,GAAGsP;cAHA,CAAD,EAIH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAAGsP;cAHJ,CAJG,EAQH;gBACCxP,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CARG,EAYH;gBACCxP,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAAGsP;cAHJ,CAZG,CAFd;cAmBIW,SAASrB;YAnBb,CApFG,EAyGH;cACInK,MAAMrC,EAAMwM,YAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG2P,CAFA;gBAGH1P,GAAG6P;cAHA,CAAD,EAIH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG6P;cAHJ,CAJG,EAQH;gBACC/P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CARG,EAYH;gBACC/P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG6P;cAHJ,CAZG,CAFd;cAmBII,SAASrB;YAnBb,CAzGG;UAHkB,CAA7B,CApiBYrP;UAAAA,IAsqBZwQ,mBAAwBzM,CAAxB,EAA8B;YAC1B,SAAS,+CADiB;YAE1BL,QAAQ2L,sBAA0B,IAA1B,GAAkC,GAFhB;YAG1BoB,OAAO,CAAC;cACAvL,MAAMrC,EAAMwM,aAAN,WAAkC,EAAlC,OADN;cAEArN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG2P,CAFA;gBAGH1P,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG2P,CAFJ;gBAGC1P,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GA9qBX4P;cA2qBU,CARG,EAYH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAlrBX4P;cA+qBU,CAZG,CAFV;cAmBAK,SAASrB,eAATqB,IAAgC,CAACrB;YAnBjC,CAAD,EAqBH;cACInK,MAAMrC,EAAMwM,aAAN,WAAkC,EAAlC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG0P,CAFA;gBAGHzP,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GAnsBX4P;cAgsBU,CARG,EAYH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GAvsBX4P;cAosBU,CAZG,CAFd;cAmBIK,SAASrB,eAATqB,IAAgC,CAACrB;YAnBrC,CArBG,EA0CH;cACInK,MAAMrC,EAAMwM,aAAN,WAAkC,GAAlC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGyP,CADA;gBAEHxP,GAAG0P,CAFA;gBAGHzP,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAGyP,CADJ;gBAECxP,GAAG2P,CAFJ;gBAGC1P,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAxtBX4P;cAqtBU,CARG,EAYH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GA5tBX4P;cAytBU,CAZG,CAFd;cAmBIK,SAASrB,eAATqB,IAAgC,CAACrB;YAnBrC,CA1CG,EA+DH;cACInK,MAAMrC,EAAMwM,aAAN,WAAkC,GAAlC,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG2P,CAFA;gBAGH1P,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGkP,CADJ;gBAECjP,GAAGmP,CAFJ;gBAGClP,GA7uBX4P;cA0uBU,CARG,EAYH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAjvBX4P;cA8uBU,CAZG,CAFd;cAmBIK,SAASrB,eAATqB,IAAgC,CAACrB;YAnBrC,CA/DG,EAoFH;cACInK,MAAMrC,EAAMwM,aAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAGkP,CADA;gBAEHjP,GAAGmP,CAFA;gBAGHlP,GA1vBX4P;cAuvBc,CAAD,EAIH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGmP,CAFJ;gBAGClP,GA9vBX4P;cA2vBU,CAJG,EAQH;gBACC9P,GAAGgP,CADJ;gBAEC/O,GAAGqP,CAFJ;gBAGCpP,GAlwBX4P;cA+vBU,CARG,EAYH;gBACC9P,GAAGkP,CADJ;gBAECjP,GAAGqP,CAFJ;gBAGCpP,GAtwBX4P;cAmwBU,CAZG,CAFd;cAmBIK,SAASrB;YAnBb,CApFG,EAyGH;cACInK,MAAMrC,EAAMwM,aAAN,OADV;cAEIrN,UAAU,CAAC;gBACHzB,GAAG0P,CADA;gBAEHzP,GAAG2P,CAFA;gBAGH1P,GAAG2P;cAHA,CAAD,EAIH;gBACC7P,GAAGyP,CADJ;gBAECxP,GAAG2P,CAFJ;gBAGC1P,GAAG2P;cAHJ,CAJG,EAQH;gBACC7P,GAAGyP,CADJ;gBAECxP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CARG,EAYH;gBACC7P,GAAG0P,CADJ;gBAECzP,GAAG0P,CAFJ;gBAGCzP,GAAG2P;cAHJ,CAZG,CAFd;cAmBIM,SAASrB;YAnBb,CAzGG;UAHmB,CAA9B,CAvqBa;QAAA;MAFU;MAizB/BsB,SAASA,CAAmB,GAAG;QACvB,eAAJ,IAEI,CAAC;UACOC,MAAM,QADb;UAEOC,OAAO;QAFd,CAAD,EAGO;UACCD,MAAM,UADP;UAECC,OAAO;QAFR,CAHP,UAMe,UAAUC,CAAD,EAAM;UAC1B,yBAAyB;YACrBC,SAAS,QADY;YAErBC,YAAY;cACRC,IAAI,aAAJA,GAAoBH;YADZ,CAFS;YAKrBI,UAAU,CAAC;cACHH,SAAS,qBADN;cAEHG,UAAU,CAAC;gBACHH,SAAS,SADN;gBAEHC,YAAY;kBACRrI,MAAM,QADE;kBAERkI,OAAOC;gBAFC;cAFT,CAAD,EAMH;gBACCC,SAAS,SADV;gBAECC,YAAY;kBACRrI,MAAM,QADE;kBAERkI,OAAOC;gBAFC;cAFb,CANG,EAYH;gBACCC,SAAS,SADV;gBAECC,YAAY;kBACRrI,MAAM,QADE;kBAERkI,OAAOC;gBAFC;cAFb,CAZG;YAFP,CAAD;UALW,CAAzB,CAD0B;QAAA,CAN9B,EAmCG,IAnCH,CAHuB;MAAA;MA8C/BK,SAASA,CAAW,GAAG;QACnB,IAAI/B,IAAU,YACV;QAAA,WAAJ,IACIgC,CAAChC,QAADgC,IAAmB,EAAnBA,UAA+B,UAAUC,CAAD,EAAI;UAI3B,SAAb,MAHYA,MAGZ,IAFQjC,YAER,IADQA,yBACR,MACIiC,MADJ,GACa,WADb,CAJwC;QAAA,CAA5C,CAHe;MAAA;MAgBvBC,SAASA,CAAmB,GAAG;QAC3B,IACInR,IADQH,IACIoP,wBAChB;QAAA,IAFYpP,IAERsP,QAAJ,IAFYtP,IAGRuR,OADJ,EACkB;UAEVpR,CAAJ,KACIA,OAEA,GAFkBA,OAElB,GAFoC,GAEpC,IADwB,CAAnB,cAAuB,CAAvB,GAA2B,GAChC,YAAiBA,MAAjB,GAAkC,GAAlC,IACuB,CAAlB,aAAsB,CAAtB,GAA0B,GAD/B,CAHJ,CAFc;UAAA,IAQVC,IAXIJ,IAWOI,SARD;YAQiBoR,IAXvBxR,IAWiCwR,QAR3B;YAQ0CC,IAXhDzR,IAWyDyR,OACjED;UAAAA,EADmFpR,IAAW,GAAXG,GAAiB,GACpG,IAAa,EAAEkR,EAAO,CAAP,CAAF,IAAe,CAAf,CACbD;UAAAA,EAF6GpR,IAAW,GAAXI,GAAiB,GAE9H,IAAa,EAAEiR,EAAO,CAAP,CAAF,IAAe,CAAf,CACbD;UAAAA,EAHuIpR,IAAW,QAAX+I,GAAsB,OAG7J,IAdQnJ,IAcM0R,WAAd,IAAkCD,EAAO,CAAP,CAAlC,IAA+C,CAA/C,KAAqDA,EAAO,CAAP,CAArD,IAAkE,CAAlE,CACAD;UAAAA,EAJ0KpR,IAAW,OAAX4I,GAAqB,QAI/L,IAfQhJ,IAeM2R,YAAd,IAAmCF,EAAO,CAAP,CAAnC,IAAgD,CAAhD,KAAsDA,EAAO,CAAP,CAAtD,IAAmE,CAAnE,CAfQzR;UAAAA,IAkBR4R,WAAgB,CACY;UAAA,EAA5B,KAAIzR,WAAJ,KAnBQH,IAoBJ4R,QADJ,GAnBQ5R,IAoBYsP,kBAAuBnP,OAAvB,CADpB,CAnBQH;cAyBRsP,mBAzBQtP,IAyBgBsP,qBAtBV;QAAA;MAJS;MAgC/BuC,SAASA,CAAc,GAAG;QAClB,WAAJ,KAEI,eAFJ,GAEsB,EAFtB,CADsB;MAAA;MAS1BC,SAASA,CAAc,GAAG;QAClB,YAAJ,IAAoB,WAApB,KACI,oBADJ,GAC2B,yBAD3B,CADsB;MAAA;MAQ1BC,SAASA,CAAM,GAAG;QACT,YAAL,KACI,YADJ,GACmB,IAAIC,CAAJ,CAAgB,IAAhB,CADnB,CADc;MAAA;MAQlBC,SAASA,CAAgB,CAACC,CAAD,EAAU;QAC/B,OAAO,WAAP,IAAsBA,QAAc,IAAd,EAAoB,cAAczL,SAAd,EAAyB,CAAzB,CAApB,CADS;MAAA;MAOnC0L,SAASA,CAAgB,CAACD,CAAD,EAAU;QAC/B,IACIhQ,IAAI,kBACR;QAAA,IAAI,WAAJ,EACI,OAAOA,GAAP,GACIkQ,CAEA,GAFS,YAAYlQ,CAAZ,CAET,EADAkQ,aACA,YAJR,MAQIF,OAAa,IAAb,CAX2B;MAAA;MAiBnCG,SAASA,CAAgB,CAACH,CAAD,EAAU;QAC/BA,QAAc,IAAd,EAAoB,cAAczL,SAAd,EAAyB,CAAzB,CAApB,CACI;QAAA,WAAJ,KACI,wBADJ,IACgC,sBADhC,CAF+B;MAAA;MApoDnC,IAAIuL,IAA6B,YAAY;QAMrCA,SAASA,CAAW,CAAChS,CAAD,EAAQ;UACxB,eAAe,KAAK,CACxB;UAAA,aAAaA,CAFe;QAAA;QAShCgS,yBAAmCM,YAAY;UAAA,IACvCtS,IAAQ,UAD+B;YAEvCG,IAAYH,yBAF2B;YAGvCuS,IAAepS,OAHwB;YAIvCoP,IAAKvP,UAJkC;YAKvCyP,IAAKzP,UAALyP,GAAsBzP,WALiB;YAMvC2P,IAAK3P,SANkC;YAOvC6P,IAAK7P,SAAL6P,GAAqB7P,YAPkB;YASvC+P,IAAK5P,OATkC;YAUvCqS,IAAkBA,UAAUxQ,CAAD,EAAW;cAC9BC,IAAOS,EAAYV,CAAZ,EACfhC,CADe,CAGf;cAAA,OAAW,EAAX,GAAIiC,CAAJ,GACW,CADX,GAGW,GAAX,GAAIA,CAAJ,GACW,EADX,GAGO,CAV+B;YAAA,CAVC;YAqBxCwQ,IAAoBD,EAAgB,CACnC;cAAEjS,GAAGgP,CAAL;cAAS/O,GAAGqP,CAAZ;cAAgBpP,GAAGsP;YAAnB,CADmC,EAEnC;cAAExP,GAAGkP,CAAL;cAASjP,GAAGqP,CAAZ;cAAgBpP,GAAGsP;YAAnB,CAFmC,EAGnC;cAAExP,GAAGkP,CAAL;cAASjP,GAAGqP,CAAZ;cAAgBpP,GAhBX4P;YAgBL,CAHmC,EAInC;cAAE9P,GAAGgP,CAAL;cAAS/O,GAAGqP,CAAZ;cAAgBpP,GAjBX4P;YAiBL,CAJmC,CAAhB,CArBoB;YA0BvCqC,IAAiBF,EAAgB,CACjC;cAAEjS,GAAGgP,CAAL;cAAS/O,GAAGmP,CAAZ;cAAgBlP,GAnBX4P;YAmBL,CADiC,EAEjC;cAAE9P,GAAGkP,CAAL;cAASjP,GAAGmP,CAAZ;cAAgBlP,GApBX4P;YAoBL,CAFiC,EAGjC;cAAE9P,GAAGkP,CAAL;cAASjP,GAAGmP,CAAZ;cAAgBlP,GAAGsP;YAAnB,CAHiC,EAIjC;cAAExP,GAAGgP,CAAL;cAAS/O,GAAGmP,CAAZ;cAAgBlP,GAAGsP;YAAnB,CAJiC,CAAhB,CA1BsB;YA+BvC4C,IAAkBH,EAAgB,CAClC;cAAEjS,GAAGgP,CAAL;cAAS/O,GAAGmP,CAAZ;cAAgBlP,GAxBX4P;YAwBL,CADkC,EAElC;cAAE9P,GAAGgP,CAAL;cAAS/O,GAAGmP,CAAZ;cAAgBlP,GAAGsP;YAAnB,CAFkC,EAGlC;cAAExP,GAAGgP,CAAL;cAAS/O,GAAGqP,CAAZ;cAAgBpP,GAAGsP;YAAnB,CAHkC,EAIlC;cAAExP,GAAGgP,CAAL;cAAS/O,GAAGqP,CAAZ;cAAgBpP,GA3BX4P;YA2BL,CAJkC,CAAhB,CA/BqB;YAoCvCuC,IAAmBJ,EAAgB,CACnC;cAAEjS,GAAGkP,CAAL;cAASjP,GAAGmP,CAAZ;cAAgBlP,GAAGsP;YAAnB,CADmC,EAEnC;cAAExP,GAAGkP,CAAL;cAASjP,GAAGmP,CAAZ;cAAgBlP,GA9BX4P;YA8BL,CAFmC,EAGnC;cAAE9P,GAAGkP,CAAL;cAASjP,GAAGqP,CAAZ;cAAgBpP,GA/BX4P;YA+BL,CAHmC,EAInC;cAAE9P,GAAGkP,CAAL;cAASjP,GAAGqP,CAAZ;cAAgBpP,GAAGsP;YAAnB,CAJmC,CAAhB,CApCoB;YAyCvC8C,IAAmBL,EAAgB,CACnC;cAAEjS,GAAGgP,CAAL;cAAS/O,GAAGqP,CAAZ;cAAgBpP,GAlCX4P;YAkCL,CADmC,EAEnC;cAAE9P,GAAGkP,CAAL;cAASjP,GAAGqP,CAAZ;cAAgBpP,GAnCX4P;YAmCL,CAFmC,EAGnC;cAAE9P,GAAGkP,CAAL;cAASjP,GAAGmP,CAAZ;cAAgBlP,GApCX4P;YAoCL,CAHmC,EAInC;cAAE9P,GAAGgP,CAAL;cAAS/O,GAAGmP,CAAZ;cAAgBlP,GArCX4P;YAqCL,CAJmC,CAAhB,CAKnByC;UAAAA,IAAkBN,EAAgB,CAClC;YAAEjS,GAAGgP,CAAL;YAAS/O,GAAGmP,CAAZ;YAAgBlP,GAAGsP;UAAnB,CADkC,EAElC;YAAExP,GAAGkP,CAAL;YAASjP,GAAGmP,CAAZ;YAAgBlP,GAAGsP;UAAnB,CAFkC,EAGlC;YAAExP,GAAGkP,CAAL;YAASjP,GAAGqP,CAAZ;YAAgBpP,GAAGsP;UAAnB,CAHkC,EAIlC;YAAExP,GAAGgP,CAAL;YAAS/O,GAAGqP,CAAZ;YAAgBpP,GAAGsP;UAAnB,CAJkC,CAAhB,CA9CqB;UAAA,IAoDvCgD,IAAoB,EApDmB;YAqDvCC,IAAiB,EArDsB;YAsDvCC,IAAkB,EAtDqB;YAuDvCC,IAAmB,EAIvB;UAAA,UACYlT,OADZ,EACyBA,OADzB,EACsCA,OADtC,UAEa,UAAUmT,CAAD,EAAO;YACrBA,CAAJ,KACQA,OAAJ,GACQA,UAAJ,GACIH,CADJ,GACqB,EADrB,GAIID,CAJJ,GAIwB,EAL5B,GASQI,UAAJ,GACID,CADJ,GACuB,EADvB,GAIID,CAJJ,GAIsB,EAd9B,CADyB;UAAA,CAF7B,CAsBA;UAAA,IAAIG,IAAiBA,UAAUC,CAAD,EAAUb,CAAV,EAA2Bc,CAA3B,EAA2C;YAErE,KAFqE,IAC7DC,IAAY,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,CADiD,EACnBnE,IAAU,EADS,EAE5DlN,IAAI,CAAb,EAAgBA,CAAhB,GAAoBqR,QAApB,EAAsCrR,GAAtC,EAEI,KADA,IAAI0C,IAAO2O,EAAUrR,CAAV,CAAX,EACSC,IAAI,CAAb,EAAgBA,CAAhB,GAAoBkR,QAApB,EAAoClR,GAApC,EACI,IAA0B,QAA1B,KAAI,OAAOkR,EAAQlR,CAAR,CAAX,EAAoC;cAChC,IAAI0B,IAAMwP,EAAQlR,CAAR,EAAWyC,CAAX,CACV;kBAAmB,WAAnB,KAAI,OAAOf,CAAX,IAA0C,IAA1C,KAAkCA,CAAlC,EAAgD;gBAC5CuL,EAAQxK,CAAR,IAAgBf,CAChB;gBAAA;cAF4C;YAFhB;YASxC2P,IAAYF,CACQ;YAAA,EAAxB,KAAIlE,SAAJ,IAAoD,EAApD,KAAgCA,SAAhC,GACIoE,CADJ,GACgBpE,SADhB,GAG6B,MAH7B,KAGSA,SAHT,KAIIoE,CAJJ,GAIkC,CAJlC,GAIgBhB,CAJhB,CAMA;YAAA,OAAO;cACHiB,MAAMpT,EAAK+O,MAAL,EAAmB,CAAnB,CADH;cAEHvM,OAAOxC,EAAK+O,OAAL,EAAoB,MAApB,CAFJ;cAGHsE,aAA+B,CAA/BA,GAAalB,CAHV;cAIHmB,SAASH;YAJN,CArB8D;UAAA,CA8BrE1L;UAAAA,IAAM;YACF8L,MAAM,EADJ;YAQF9J,QAAQsJ,EAAe,CAACb,QAAD,EAC3BA,KAD2B,EAE3BA,CAF2B,CAAf,EAGZE,CAHY,EAIZM,CAJY,CARN;YAaF3N,KAAKgO,EAAe,CAACb,KAAD,EACxBA,QADwB,EAExBA,CAFwB,CAAf,EAGTG,CAHS,EAITM,CAJS,CAbH;YAkBF/I,MAAMmJ,EAAe,CACjBb,MADiB,EAEjBA,OAFiB,EAGjBA,MAHiB,EAIjBA,CAJiB,CAAf,EAMVI,CANU,EAOVM,CAPU,CAlBJ;YA0BFjJ,OAAOoJ,EAAe,CAClBb,OADkB,EAElBA,MAFkB,EAGlBA,MAHkB,EAIlBA,CAJkB,CAAf,EAMXK,CANW,EAOXM,CAPW,CA1BL;YAkCFvJ,MAAMyJ,EAAe,CAACb,MAAD,EACzBA,OADyB,EAEzBA,CAFyB,CAAf,EAGVO,CAHU,EA9FkCe,EA8FlC,CAlCJ;YAuCF1O,OAAOiO,EAAe,CAACb,OAAD,EAC1BA,MAD0B,EAE1BA,CAF0B,CAAf,EAGXM,CAHW,EAnGQiB,EAmGR;UAvCL,CAiD0B;UAAA,MAApC,KAAI3T,mBAAJ,IACQ4T,CAsIJ,GAtIkBA,UAAUxK,CAAD,EACvBC,CADuB,EAChB;YACH,OAASD,SAAT,KAA2BC,SAA3B,IACKD,SADL,IAEQC,SAFR,IAGSD,aAHT,KAG+BC,aAJ5B;UAAA,CAqIX,EA/HIwK,CA+HJ,GA/Ha,EA+Hb,EA9HID,EAAYjM,MAAZ,EAAsBA,OAAtB,CA8HJ,IA7HIkM,OAAY;YACRxT,IAAImP,CAAJnP,GAASqP,CAATrP,IAAe,CADP;YAERD,GAAGgP,CAFK;YAGR9O,GArKH4P,CAkKW;YAIR4D,MAAM;cAAE1T,GAAG,CAAL;cAAQC,GAAG,CAAX;cAAcC,GAAG;YAAjB;UAJE,CAAZ,CA6HJ,EAtHIsT,EAAYjM,MAAZ,EAAsBA,MAAtB,CAsHJ,IArHIkM,OAAY;YACRxT,IAAImP,CAAJnP,GAASqP,CAATrP,IAAe,CADP;YAERD,GAAGgP,CAFK;YAGR9O,GAAGsP,CAHK;YAIRkE,MAAM;cAAE1T,GAAG,CAAL;cAAQC,GAAG,CAAX;cAAcC,GAAG;YAAjB;UAJE,CAAZ,CAqHJ,EA9GIsT,EAAYjM,OAAZ,EAAuBA,OAAvB,CA8GJ,IA7GIkM,OAAY;YACRxT,IAAImP,CAAJnP,GAASqP,CAATrP,IAAe,CADP;YAERD,GAAGkP,CAFK;YAGRhP,GArLH4P,CAkLW;YAIR4D,MAAM;cAAE1T,GAAG,CAAL;cAAQC,GAAG,CAAX;cAAcC,GAAG;YAAjB;UAJE,CAAZ,CA6GJ,EAtGIsT,EAAYjM,OAAZ,EAAuBA,MAAvB,CAsGJ,IArGIkM,OAAY;YACRxT,IAAImP,CAAJnP,GAASqP,CAATrP,IAAe,CADP;YAERD,GAAGkP,CAFK;YAGRhP,GAAGsP,CAHK;YAIRkE,MAAM;cAAE1T,GAAG,EAAL;cAASC,GAAG,CAAZ;cAAeC,GAAG;YAAlB;UAJE,CAAZ,CAqGJ,EA9FIyT,CA8FJ,GA9FmB,EA8FnB,EA7FIH,EAAYjM,QAAZ,EAAwBA,OAAxB,CA6FJ,IA5FIoM,OAAkB;YACd3T,IAAIgP,CAAJhP,GAASkP,CAATlP,IAAe,CADD;YAEdC,GAAGqP,CAFW;YAGdpP,GAtMH4P,CAmMiB;YAId4D,MAAM;cAAE1T,GAAG,CAAL;cAAQC,GAAG,CAAX;cAAcC,GAAG;YAAjB;UAJQ,CAAlB,CA4FJ,EArFIsT,EAAYjM,QAAZ,EAAwBA,MAAxB,CAqFJ,IApFIoM,OAAkB;YACd3T,IAAIgP,CAAJhP,GAASkP,CAATlP,IAAe,CADD;YAEdC,GAAGqP,CAFW;YAGdpP,GAAGsP,CAHW;YAIdkE,MAAM;cAAE1T,GAAG,EAAL;cAASC,GAAG,CAAZ;cAAeC,GAAG;YAAlB;UAJQ,CAAlB,CAoFJ,EA7EI0T,CA6EJ,GA7EgB,EA6EhB,EA5EIJ,EAAYjM,KAAZ,EAAqBA,OAArB,CA4EJ,IA3EIqM,OAAe;YACX5T,IAAIgP,CAAJhP,GAASkP,CAATlP,IAAe,CADJ;YAEXC,GAAGmP,CAFQ;YAGXlP,GAvNH4P,CAoNc;YAIX4D,MAAM;cAAE1T,GAAG,CAAL;cAAQC,GAAG,CAAX;cAAcC,GAAG;YAAjB;UAJK,CAAf,CA2EJ,EApEIsT,EAAYjM,KAAZ,EAAqBA,MAArB,CAoEJ,IAnEIqM,OAAe;YACX5T,IAAIgP,CAAJhP,GAASkP,CAATlP,IAAe,CADJ;YAEXC,GAAGmP,CAFQ;YAGXlP,GAAGsP,CAHQ;YAIXkE,MAAM;cAAE1T,GAAG,EAAL;cAASC,GAAG,CAAZ;cAAeC,GAAG;YAAlB;UAJK,CAAf,CAmEJ,EA5DI2T,CA4DJ,GA5DmB,EA4DnB,EA3DIL,EAAYjM,QAAZ,EAAwBA,MAAxB,CA2DJ,IA1DIsM,OAAkB;YACd3T,IAtOH4P,CAsOG5P,GAASsP,CAATtP,IAAe,CADD;YAEdD,GAAGqP,CAFW;YAGdtP,GAAGgP,CAHW;YAId0E,MAAM;cAAE1T,GAAG,CAAL;cAAQC,GAAG,CAAX;cAAcC,GAAG;YAAjB;UAJQ,CAAlB,CA0DJ,EAnDIsT,EAAYjM,QAAZ,EAAwBA,OAAxB,CAmDJ,IAlDIsM,OAAkB;YACd3T,IA9OH4P,CA8OG5P,GAASsP,CAATtP,IAAe,CADD;YAEdD,GAAGqP,CAFW;YAGdtP,GAAGkP,CAHW;YAIdwE,MAAM;cAAE1T,GAAG,CAAL;cAAQC,GAAG,CAAX;cAAcC,GAAG;YAAjB;UAJQ,CAAlB,CAkDJ,EA3CI4T,CA2CJ,GA3CgB,EA2ChB,EA1CIN,EAAYjM,KAAZ,EAAqBA,MAArB,CA0CJ,IAzCIuM,OAAe;YACX5T,IAvPH4P,CAuPG5P,GAASsP,CAATtP,IAAe,CADJ;YAEXD,GAAGmP,CAFQ;YAGXpP,GAAGgP,CAHQ;YAIX0E,MAAM;cAAE1T,GAAG,CAAL;cAAQC,GAAG,CAAX;cAAcC,GAAG;YAAjB;UAJK,CAAf,CAyCJ,EAlCIsT,EAAYjM,KAAZ,EAAqBA,OAArB,CAkCJ,IAjCIuM,OAAe;YACX5T,IA/PH4P,CA+PG5P,GAASsP,CAATtP,IAAe,CADJ;YAEXD,GAAGmP,CAFQ;YAGXpP,GAAGkP,CAHQ;YAIXwE,MAAM;cAAE1T,GAAG,CAAL;cAAQC,GAAG,CAAX;cAAcC,GAAG;YAAjB;UAJK,CAAf,CAiCJ,EA1BI6T,CA0BJ,GA1BeA,UAAUC,CAAD,EACpBpB,CADoB,EAEpBqB,CAFoB,EAEd;YACF,IAAqB,CAArB,KAAID,QAAJ,EACI,OAAO,IAEf;YAAA,IAAqB,CAArB,KAAIA,QAAJ,EACI,OAAOA,EAAM,CAAN,CAMX;YAAA,KAJA,IAAIE,IAAc3U,EAAYyU,CAAZ,EACdvU,CADc,EAEd,EAFc,CAAlB,EAGI0U,IAAO,CAHX,EAISxS,IAAI,CAAb,EAAgBA,CAAhB,GAAoBuS,QAApB,EAAwCvS,GAAxC,EACQsS,CAAJ,GAAWC,EAAYvS,CAAZ,EAAeiR,CAAf,CAAX,GACIqB,CADJ,GACWC,EAAYC,CAAZ,EAAkBvB,CAAlB,CADX,GAEIuB,CAFJ,GAEWxS,CAFX,GAIUsS,CAJV,GAIiBC,EAAYvS,CAAZ,EAAeiR,CAAf,CAJjB,KAKIqB,CALJ,GAKWC,EAAYC,CAAZ,EAAkBvB,CAAlB,CALX,IAMKsB,EAAYvS,CAAZ,GANL,GAMwBuS,EAAYC,CAAZ,GANxB,KAOIA,CAPJ,GAOWxS,CAPX,CAUJ;YAAA,OAAOqS,EAAMG,CAAN,CAtBD;UAAA,CAwBV,WAAW;YACPlU,GAAG;cACCyJ,MAAQqK,EAASN,CAAT,EAAiB,GAAjB,EAAsB,EAAtB,CADT;cAEChK,OAASsK,EAASN,CAAT,EAAiB,GAAjB,EAAuB,CAAvB;YAFV,CADI;YAKPzT,GAAG;cACC6E,KAAOkP,EAASH,CAAT,EAAoB,GAApB,EAAyB,EAAzB,CADR;cAECrK,QAAUwK,EAASJ,CAAT,EAAuB,GAAvB,EAA6B,CAA7B;YAFX,CALI;YASPzT,GAAG;cACC2E,KAAOkP,EAASD,CAAT,EAAoB,GAApB,EAAyB,EAAzB,CADR;cAECvK,QAAUwK,EAASF,CAAT,EAAuB,GAAvB,EAA6B,CAA7B;YAFX;UATI,CAvIf,IAuJItM,MAvJJ,GAuJe;YACPtH,GAAG;cACCyJ,MAAQ;gBACJ1J,GAAGgP,CADC;gBACG9O,GAlTd4P,CAiTW;gBACU4D,MAAM;kBAAE1T,GAAG,CAAL;kBAAQC,GAAG,CAAX;kBAAcC,GAAG;gBAAjB;cADhB,CADT;cAICuJ,OAAS;gBACLzJ,GAAGkP,CADE;gBACEhP,GArTd4P,CAoTY;gBACS4D,MAAM;kBAAE1T,GAAG,CAAL;kBAAQC,GAAG,CAAX;kBAAcC,GAAG;gBAAjB;cADf;YAJV,CADI;YASPF,GAAG;cACC6E,KAAO;gBACH5E,GAAGmP,CADA;gBACIlP,GA1Td4P,CAyTU;gBACW4D,MAAM;kBAAE1T,GAAG,CAAL;kBAAQC,GAAG,CAAX;kBAAcC,GAAG;gBAAjB;cADjB,CADR;cAICqJ,QAAU;gBACNtJ,GAAGqP,CADG;gBAENpP,GA9TP4P,CA4Ta;gBAGN4D,MAAM;kBAAE1T,GAAG,CAAL;kBAAQC,GAAG,CAAX;kBAAcC,GAAG;gBAAjB;cAHA;YAJX,CATI;YAmBPA,GAAG;cACC2E,KAAO;gBACH7E,GAAG0S,IAAkBxD,CAAlB,GAAuBF,CADvB;gBAEH/O,GAAGmP,CAFA;gBAGHsE,MAAMhB,IACF;kBAAE1S,GAAG,CAAL;kBAAQC,GAAG,CAAX;kBAAcC,GAAG;gBAAjB,CADE,GAEF;kBAAEF,GAAG,CAAL;kBAAQC,GAAG,CAAX;kBAAcC,GAAG;gBAAjB;cALD,CADR;cAQCqJ,QAAU;gBACNvJ,GAAG0S,IAAkBxD,CAAlB,GAAuBF,CADpB;gBAEN/O,GAAGqP,CAFG;gBAGNoE,MAAMhB,IACF;kBAAE1S,GAAG,CAAL;kBAAQC,GAAG,CAAX;kBAAcC,GAAG;gBAAjB,CADE,GAEF;kBAAEF,GAAG,CAAL;kBAAQC,GAAG,CAAX;kBAAcC,GAAG;gBAAjB;cALE;YARX;UAnBI,CAqCf;UAAA,OAAOqH,CA5VoC;QAAA,CAmX/CkK;QAAAA,uBAAiC2C,UAAUnI,CAAD,EAAQ;UAAA,IAC1CxM,IAAQ,UADkC;YAE1CwP,IAAWxP,UAF+B;YAG1C4U,IAAY5U,WAAZ4U,GAA8BpF,CAHY;YAI1CI,IAAU5P,SAJgC;YAK1C6U,IAAa7U,YAAb6U,GAAgCjF,CALU;YAM1CkF,IAAUtF,CAAVsF,GAAqB9U,WAArB8U,GAAuC,CANG;YAO1CC,IAAUnF,CAAVmF,GAAoB/U,YAApB+U,GAAuC,CAPG;YAShCC,oBATgC;YAUhClP,KAAChE,gBAV+B;YAWhCkT,oBAXgC;YAYhCjU,KAACe,gBAZ+B;YAe1CnB,IAAQ,CAEZ;UAAA,QAAU,CAAC;YACHJ,GAAGiP,CADA;YAEHhP,GAAGoP,CAFA;YAGHnP,GAAG;UAHA,CAAD,EAIH;YACCF,GAAGiP,CADJ;YAEChP,GAAGoP,CAFJ;YAGCnP,GAAG+L;UAHJ,CAJG,CAUV;UAAA,CAAC,CAAD,EAAI,CAAJ,UAAe,UAAUtK,CAAD,EAAI;YACxB+S,OAAa;cACT1U,GAAGqU,CADM;cAETpU,GAAGyU,EAAQ/S,CAAR,GAFM;cAGTzB,GAAGwU,EAAQ/S,CAAR;YAHM,CAAb,CADwB;UAAA,CAA5B,CAQA;UAAA,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,UAAqB,UAAUA,CAAD,EAAI;YAC9B+S,OAAa;cACT1U,GAAG0U,EAAQ/S,CAAR,GADM;cAET1B,GAAGqU,CAFM;cAGTpU,GAAGwU,EAAQ/S,CAAR;YAHM,CAAb,CAD8B;UAAA,CAAlC,CAQA+S;UAAAA,IAAUnV,EAAYmV,CAAZ,EAAqBjV,CAArB,EAA4B,EAA5B,CAEViV;UAAAA,UAAgB,UAAUC,CAAD,EAAS;YAC9BC,IAAc1S,SAAS0S,CAAT,EAAsBD,GAAtB,CACdE;YAAAA,IAAc3S,SAAS2S,CAAT,EAAsBF,GAAtB,CACdG;YAAAA,IAAc5S,SAAS4S,CAAT,EAAsBH,GAAtB,CACdI;YAAAA,IAAc7S,SAAS6S,CAAT,EAAsBJ,GAAtB,CAJgB;UAAA,CAAlC,CAOI1F;UAAAA,CAAJ,GAAe2F,CAAf,KACIxU,CADJ,GACY8B,SAAS9B,CAAT,EAAgB,CAAhB,GAAoB8B,UAAU+M,CAAV,GAAqBsF,CAArB,KAAiCK,CAAjC,GAA+CL,CAA/C,EAApB,GAA+E,CAA/E,CADZ,CAIIF;WAAJ,GAAgBQ,CAAhB,KACIzU,CADJ,GACY8B,SAAS9B,CAAT,GAAiBiU,CAAjB,GAA6BE,CAA7B,KAAyCM,CAAzC,GAAuDN,CAAvD,EADZ,CAIIlF;UAAAA,CAAJ,GAAcyF,CAAd,KAEQ1U,CAFR,GACsB,CAAlB,GAAI0U,CAAJ,GACY5S,SAAS9B,CAAT,GAAiBiP,CAAjB,GAA2BmF,CAA3B,KAAuC,CAACM,CAAxC,GAAsDzF,CAAtD,GAAgEmF,CAAhE,EADZ,GAIYtS,SAAS9B,CAAT,EAAgB,CAAhB,IAAqBiP,CAArB,GAA+BmF,CAA/B,KAA2CM,CAA3C,GAAyDN,CAAzD,IAAoE,CAApE,CALhB,CASIF;UAAAA,CAAJ,GAAiBS,CAAjB,KACI3U,CADJ,GACY8B,SAAS9B,CAAT,EAAgB8B,UAAUoS,CAAV,GAAuBE,CAAvB,KAAmCO,CAAnC,GAAiDP,CAAjD,EAAhB,CADZ,CAGA;UAAA,OAAOpU,CAxEuC;QAAA,CA0ElD;QAAA,OAAOqR,CA5ckC;MAAA,CAAZ,EA8cjChD;MAAAA,gBAAsBgD,CAUtBhD;MAAAA,mBAAyB;QACrBhP,OAAO;UAUHG,WAAW;YAOPuQ,SAAS,EAPF;YAcP5P,OAAO,CAdA;YAqBPF,MAAM,CArBC;YA4BP4L,OAAO,GA5BA;YAoCP+I,WAAW,EApCJ;YA8CPC,cAAc,EA9CP;YAuDPC,mBAAmB,IAvDZ;YAgEPpG,OAAO;cAIHsE,SAAS,SAJN;cAQHF,MAAM,CARH;cAoDH3J,QAAQ,EApDL;cA0DH1E,KAAK,EA1DF;cAgEH6E,MAAM,EAhEH;cAsEHD,OAAO,EAtEJ;cA4EHL,MAAM,EA5EH;cAkFHxE,OAAO;YAlFJ;UAhEA;QAVR;MADc,CA4NzB6J;MAAAA,YAjDA0G,UAAiBC,CAAD,EAAaC,CAAb,EAAsB;QAClC,IAAIC,IAAaF,WACbG;QAAAA,IAAUF,WAOdC;QAAAA,SAAkBE,YAAY;UAC1B,OAAO,EAAQ5V,6BAAR,IACHuQ,qCADG,CADmB;QAAA,CAI9BmF;QAAAA,4BAAqC,iBAArC,CACAA;QAAAA,gCAAyC,iBAAzC,CAKAC;QAAAA,iBAAuBE,YAAY;UAE/B,IAAe,CAAf,GAAI,QAAJ,KACKlH,EAAQ,UAAR,CADL,IAC4BA,EAAQ,QAAR,CAD5B,GACgD;YAAA,IACxC3H,IAAS,UAATA,IACI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAFoC;cAGxCC,IAAM,QAANA,IAAkB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CACtB;YAAA,QAAe,EACf;YAAA,KAAK,IAAIlF,IAAI,CAAb,EAAoB,CAApB,GAAgBA,CAAhB,EAAuBA,GAAvB,EACI+T,OAAkB,QAAlB,GAA6B7O,EAAIlF,CAAJ,CAA7B,IAAuC,CAAvC,GAA2C,QAA3C,IAAuDiF,EAAMjF,CAAN,CAAvD,CANwC;UAAA,CADhD,MAWI+T,IAAe,QAEnB;UAAA,eAAe,SAAf,EAA0BA,CAA1B,EAAwC,IAAxC,EAA8C,EAA9C,CAf+B;QAAA,CAiBnClT;QAAAA,EAAM,EAAN,EAAY6L,CAAZ,EAAmCI,gBAAnC,CACAH;QAAAA,EAAS8G,CAAT,EAAqB,MAArB,EAA6B5D,CAA7B,CACAlD;QAAAA,EAAS8G,CAAT,EAAqB,WAArB,EAAkC1G,CAAlC,CACAJ;QAAAA,EAAS8G,CAAT,EAAqB,mBAArB,EAA0CxG,CAA1C,CACAN;QAAAA,EAAS8G,CAAT,EAAqB,mBAArB,EAA0ChF,CAA1C,CACA9B;SAAA,CAAS8G,CAAT,EAAqB,WAArB,EAAkCxE,CAAlC,CACAtC;QAAAA,EAAS8G,CAAT,EAAqB,mBAArB,EAA0CrE,CAA1C,CACAzC;QAAAA,EAAS8G,CAAT,EAAqB,cAArB,EAAqC9D,CAArC,CACAhD;QAAAA,EAAS8G,CAAT,EAAqB,cAArB,EAAqC7D,CAArC,CACA/C;QAAAA,EAAK8G,CAAL,EAAiB,cAAjB,EAAiC5D,CAAjC,CACAlD;QAAAA,EAAK8G,CAAL,EAAiB,cAAjB,EAAiC1D,CAAjC,CACApD;QAAAA,EAAK8G,CAAL,EAAiB,cAAjB,EAAiCxD,CAAjC,CA/CkC;MAAA,CA9oBtB;IAAA,CAAnB,EAqpDErD,CArpDH,KAqpDeA,CArpDf,GAqpDyB,EArpDzB,EA+rDA;IAAA,EAEA;IAAA,OAAOA,CAvtDmM;EAAA,CAA9M,CAytDA7P;EAAAA,EAAgBQ,CAAhB,EAA0B,oBAA1B,EAAgD,CAACA,EAAS,mBAAT,CAAD,EAAgCA,EAAS,mBAAT,CAAhC,CAAhD,EAAgH,UAAUuW,CAAD,EAAOrW,CAAP,EAAU;IA4C/HsW,SAASA,CAAa,CAAC/G,CAAD,EAAU;MAC5B,OAAO,IAAIgH,CAAJ,CAAU,IAAV,EAAgBhH,CAAhB,CADqB;IAAA;IAOhCiH,SAASA,CAAmB,GAAG;MAC3B,IAAIC,IAAQ,IAAZ;QACIC,IAAe,kBAAfA,GAAoCC,EAAM,kBAAN,IAA4B,EAA5B,CACnC;MAAA,WAAL,KAGA,UACA,GADa,EACb,YAAqB,UAAUC,CAAD,EAAcvU,CAAd,EAAiB;QAC3CuU,UAAoBvU,CAEpBuU;QAAAA,QAAkB,EAClBH;QAAAA,WAAeG,CAAf,YAJ2C;MAAA,CAA/C,CAJA,CAH2B;IAAA;IAzC/B,IAAIjR,IAAa,IAAbA,IAAqB,cAArBA,IAAyC,YAAY;QACjD,IAAIC,IAAgBA,UAAUC,CAAD,EACjCvE,CADiC,EAC9B;UACKsE,IAAgBE,qBAAhB,IACK;YAAEC,WAAW;UAAb,CADL,YACkCC,KADlC,IAC2C,UAAUH,CAAD,EAC5DvE,CAD4D,EACzD;YAAEuE,cAAcvE,CAAhB;UAAA,CAFK,IAGI,UAAUuE,CAAD,EACrBvE,CADqB,EAClB;YAAE,KAAK2E,IAAIA,CAAT,IAAc3E,CAAd,EAAqBA,iBAAiB2E,CAAjB,CAAJ,KAAyBJ,EAAEI,CAAF,CAAzB,GAAgC3E,EAAE2E,CAAF,CAAhC,CAAnB;UAAA,CACC;UAAA,OAAOL,EAAcC,CAAd,EAAiBvE,CAAjB,CANR;QAAA,CAQH;QAAA,OAAO,UAAUuE,CAAD,EAAIvE,CAAJ,EAAO;UAEnB4E,SAASA,CAAE,GAAG;YAAE,mBAAmBL,CAArB;UAAA;UADdD,EAAcC,CAAd,EAAiBvE,CAAjB,CAEAuE;UAAAA,cAAoB,IAAN,SAAaC,cAAcxE,CAAd,CAAb,IAAiC4E,cAAe5E,WAAf,EAA4B,IAAI4E,CAAjE,GAHK;QAAA,CAV8B;MAAA,CAAb,EAA5C;MAgBI8I,IAAWhP,UAhBf;MAiBIkD,IAAQlD,OAjBZ;MAkBIQ,IAAOR,MAlBX;MAmBI2W,IAAQ3W,OAnBZ;MAyBI6W,IAAkB,EAzBtB;MA+DIN,IAAuB,UAAU7P,CAAD,EAAS;QAOzC6P,SAASA,CAAK,CAACpW,CAAD,EAAQ2W,CAAR,EAAqB;UAC3BL,IAAQ/P,OAAY,IAAZ,EACRvG,CADQ,EAER2W,CAFQ,CAARL,IAEgB,IACpBA;UAAAA,YAAgB,EAChB;UAAA,OAAOA,CALwB;QAAA;QAN/B9Q,EAAU4Q,CAAV,EAAiB7P,CAAjB,CAkBJ6P;QAAAA,YAAgBQ,UAAUjB,CAAD,EAAa;UACU,EAA5C,KAAIe,UAAwBf,CAAxB,CAAJ,KACIe,OAAqBf,CAArB,CAKA,EAJA9G,EAAS8G,CAAT,EAAqB,cAArB,EAAqCU,CAArC,CAIA,EAHIR,CAGJ,GAHiBF,WAGjB,EAFAE,UAEA,GAFsBM,CAEtB,EADAN,2BACA,GADuC,CAACA,UAAD,CACvC,+BAAsC,OAAtC,CANJ,CADkC;QAAA,CAetCO;QAAAA,gCAAoCS,YAAY;UAC5C,IAAIP,IAAQ,IAAZ;YACItW,IAAQ,UACZ;UAAA,wBAAwB,EAExB;UAAA,eAAe,YAAf,GAA8B,qBAA9B,GAAuD,qBAAvD,GAA+E,KAAK,CAChF;UAAA,aAAJ,IACI,2BAGJ;UAAA,oBAAoB,UAAUoS,CAAD,EAAS;YAClC,IAAIA,SAAJ,IACI,CAACpS,kCADL,EAGIsW,kBAMA,GANyB,EAMzB,EADIQ,CACJ,GADY1E,OACZ,EAAI0E,QAAJ,KACIR,SACA,GADgB7T,SAASpC,EAAKiW,SAAL,EAAoBQ,EAAM,CAAN,CAApB,CAAT,EAAwCrU,eAAe,IAAf,EAAqBqU,CAArB,CAAxC,CAChB,cAAgBrU,SAASpC,EAAKiW,SAAL,EAAoBQ,EAAM,CAAN,CAApB,CAAT,EAAwCrU,eAAe,IAAf,EAAqBqU,CAArB,CAAxC,CAFpB,CAV8B;UAAA,CAAtC,CAV4C;QAAA,CA8BhDV;QAAAA,0BAA8BW,YAAY;UACtC,IAAI/W,IAAQ,UACZuG;UAAAA,6BAAkC,IAAlC,CACA;UAAA,aAAa,QAAb,GAAyBvG,yBAAzB,IACIA,+BADJ,IAC4C,CAC5C;UAAA,aAAaA,YAAb,GAAgC,UAAhC,GAA6C,SALP;QAAA,CAU1CoW;QAAAA,yBAA6BY,UAAUL,CAAD,EAAc;UAChDA,IAAc5T,EAAM;YAChBkU,QAAQ,CADQ;YAEhBC,WAAW;UAFK,CAAN,EAGXP,CAHW,CAKd;UAAA,eAAe,EACfpQ;UAAAA,4BAAiC,IAAjC,EAAuCoQ,CAAvC,CACA;UAAA,YAAY,OARoC;QAAA,CAUpD;QAAA,OAAOP,CApFkC;MAAA,CAAlB,CAqFzBF,CArFyB,CA4F3B;IAAA,OAAOE,CArKwH;EAAA,CAAnI,CAuKAjX;EAAAA,EAAgBQ,CAAhB,EAA0B,6BAA1B,EAAyD,EAAzD,EAA6D,YAAY;IAkIrE,OA9GqBwX;MACbC,QAAQ;QA8BJC,YAAY,QA9BR;QA+CJC,QAAQ;MA/CJ,CADKH;MAkDbI,OAAO;QAgCHF,YAAY,IAhCT;QAmDHC,QAAQ;MAnDL;IAlDMH,CApBgD;EAAA,CAAzE,CAoIAhY;EAAAA,EAAgBQ,CAAhB,EAA0B,gCAA1B,EAA4D,CAACA,EAAS,mBAAT,CAAD,CAA5D,EAA6F,UAAUE,CAAD,EAAI;IAuCtG2X,SAASA,CAA2B,CAACtI,CAAD,EAAI;MACpC,IAAIuI,IAAS,gBACTA;MAAAA,CAAJ,IACIvR,EAAOgJ,KAAP,EAAcuI,gBAAqBvI,KAArB,CAAd,CAHgC;IAAA;IASxCwI,SAASA,CAAmB,CAACxF,CAAD,EAAU;MAAA,IAC9BuF,IAAS,gBADqB;QAE9BpY,IAAO6S,QAAc,IAAd,EACP,cAAczL,SAAd,EAAyB,CAAzB,CADO,CAEX;MAAA,IAAIgR,CAAJ,EAAY;QACR,IAAItQ,IAAQ9H,EAAK,CAAL,CAAZ;UACI+H,IAAM/H,EAAK,CAAL,CACV;QAAA,IAAiB,GAAjB,KAAI8H,EAAM,CAAN,CAAJ,IAAmC,GAAnC,KAAwBC,EAAI,CAAJ,CAAxB,EASI,OARI6B,CAQG,GARI,CACHwO,gBAAqB;UAAElX,GAAG4G,EAAM,CAAN,CAAL;UACzB3G,GAAG2G,EAAM,CAAN,CADsB;UAEzB1G,GAAG;QAFsB,CAArB,CADG,EAIHgX,gBAAqB;UAAElX,GAAG6G,EAAI,CAAJ,CAAL;UACzB5G,GAAG4G,EAAI,CAAJ,CADsB;UAEzB3G,GAAG;QAFsB,CAArB,CAJG,CAQJ,0CAAwCwI,CAAxC,CAZH;MAAA;MAeZ,OAAO5J,CAnB2B;IAAA;IAhDgE,IAYlGwP,IAAWhP,UAZuF;MAalGqG,IAASrG,QAbyF;MAclGkP,IAAOlP,MAd2F;MAoBlG6W,IAAkB,EA0DtB;IAAA,OAJsBiB;MACdjC,SA9CRA,UAAiBkC,CAAD,EAAY;QACmB,EAA3C,KAAIlB,UAAwBkB,CAAxB,CAAJ,KACIlB,OAAqBkB,CAArB,CAEA,EADA/I,EAAS+I,CAAT,EAAoB,uBAApB,EAA6CJ,CAA7C,CACA,IAAKI,WAAL,EAA0B,aAA1B,EAAyCF,CAAzC,CAHJ,CADwB;MAAA;IA6CNC,CA1EgF;EAAA,CAA1G,CAgFAxY;EAAAA,EAAgBQ,CAAhB,EAA0B,gCAA1B,EAA4D,CAACA,EAAS,6BAAT,CAAD,EAA0CA,EAAS,iBAAT,CAA1C,EAAuEA,EAAS,gBAAT,CAAvE,EAAmGA,EAAS,gCAAT,CAAnG,EAA+IA,EAAS,mBAAT,CAA/I,CAA5D,EAA2O,UAAUwX,CAAD,EAAiBvX,CAAjB,EAAoBwC,CAApB,EAA4ByV,CAA5B,EAAoChY,CAApC,EAAuC;IAkCvRiY,SAASA,CAAqB,GAAG;MAAA,IAEzB9X,IADOmT,IACCnT,MAFiB;QAGzBoP,IAFO+D,IAEG/D,QACVpP;MAAAA,MAAJ,IAAkBA,QAAlB,IAAgD,WAAhD,KAHWmT,IAGuB4E,KAAlC,KACI3I,WACA,GADoB/O,EAAK+O,WAAL,EAAwB,CAAxB,CACpB,oBAAwB/O,EAAK+O,eAAL,EAA4B,CAA5B,CAF5B,CAJ6B;IAAA;IAYjC4I,SAASA,CAAmB,CAAC9I,CAAD,EAAI;MACjBiE,IACPnT,aAAJ,IACkB,WADlB,KADWmT,IAEP4E,KADJ,IAEQ7I,OAFR,KAGQA,oBAHR,GADWiE,IAIoB8E,WACnB/I,gBADmB,GAJpBiE,IAMC+E,IAFmB,GAERhJ,gBALvB,CAF4B;IAAA;IAchCiJ,SAASA,CAAU,GAAG;MACPhF,IACNsE,OAAL,KADWtE,IAEPsE,OADJ,GACkB,IAAIW,CAAJ,CAFPjF,IAEO,CADlB,CAFkB;IAAA;IAUtBkF,SAASA,CAAmB,CAACnG,CAAD,EAAU;MAGlC,OAFWiB,IAENnT,aAAL,IAAwC,WAAxC,KAFWmT,IAEe4E,KAA1B,GAGO,EAHP,GACW7F,QAHAiB,IAGA,EAAoB,cAAc1M,SAAd,EAAyB,CAAzB,CAApB,CAJuB;IAAA;IAWtC6R,SAASA,CAAuB,CAACpG,CAAD,EAAU;MAEtC,IAAI,CAAC,iBAAL,IAAwC,WAAxC,KAA0B,SAA1B,EACI,OAAOA,QAAc,IAAd,EAAoB,cAAczL,SAAd,EAAyB,CAAzB,CAApB,CAH2B;MAAA,IAKlCnH,IAAOmH,SAL2B;QAOlC4F,IAAK/M,EAAK,CAAL,CAP6B;QAQlCD,IAAO,EACPkZ;MAAAA,IAAW,qBAAqB;QAAEjN,OAH3BhM,EAAK,CAALwM;MAGyB,CAArB,CACX0M;MAAAA,IAAS,qBAAqB;QAAElN,OAAOe;MAAT,CAArB,CACb;UAAIkM,CAAJ,IAAgBC,CAAhB,EACI,KAAK,IAAItW,IAAI,CAAb,EAAgBA,CAAhB,GAAoBqW,QAApB,EAAqCrW,CAArC,IAA0C,CAA1C,EAA6C;QAAA,IACrCuW,IAAeF,EAASrW,CAAT,CADsB;UAErCwW,IAAaH,EAASrW,CAAT,GAAa,CAAb,CAFwB;UAGrCyW,IAAaH,EAAOtW,CAAP,CAHwB;UAIrC0W,IAAWJ,EAAOtW,CAAP,GAAW,CAAX,CACS;QAAA,GAAxB,KAAIuW,EAAa,CAAb,CAAJ,IACsB,GADtB,KACIC,EAAW,CAAX,CADJ,IAEsB,GAFtB,KAEIC,EAAW,CAAX,CAFJ,IAGoB,GAHpB,KAGIC,EAAS,CAAT,CAHJ,IAIIvZ,OAAUoZ,CAAV,EAAwBC,CAAxB,EAAoCE,CAApC,EAEA,CAAC,GAAD,EAAMD,EAAW,CAAX,CAAN,EAAqBA,EAAW,CAAX,CAArB,CAFA,EAEqC,CAAC,GAAD,CAFrC,CATqC;MAAA;MAejD,OAAOtZ,CA3B+B;IAAA;IAgC1CwZ,SAASA,CAAuB,CAAC3G,CAAD,EAAU;MAAA,IAElCuF,IADOtE,IACEsE,OAFyB;QAGlCzX,IAFOmT,IAECnT,MAH0B;QAIlCX,IAAO6S,QAHAiB,IAGA,EACP,cAAc1M,SAAd,EAAyB,CAAzB,CADO,CAQX;MAAA,IALkB,WAKlB,KAXW0M,IAMP4E,KAKJ,IAJI,CAAC/X,SAIL,IAHI,CAACA,QAGL,IAAa,IAAb,KAAIX,CAAJ,EACI,OAAOA,CAb2B;MAAA,IAelCc,IAAYH,yBAfsB;QAgBlC0F,IAfOyN,IAeH2F,WAAe9Y,WAAf,GAAiCG,OACrCkP;MAAAA,IAAQrP,iBAjB0B;MAAA,IAkBlC+Y,IAAe1Z,EAAK,CAAL,CAlBmB;QAmBlC2Z,IAAa3Z,EAAK,CAAL,CAEb4Z;MAAAA,IAAe,EACK;MAAA,GAAxB,KAAIF,EAAa,CAAb,CAAJ,IAAiD,GAAjD,KAA+BC,EAAW,CAAX,CAA/B,KACI/P,CAgDA,GAhDO,CACHwO,QAAa;QAAElX,GAAGwY,EAAa,CAAb,CAAL;QAAsBvY,GAAGuY,EAAa,CAAb,CAAzB;QAA0CtY,GAAG;MAA7C,CAAb,CADG,EAEHgX,QAAa;QAAElX,GAAGwY,EAAa,CAAb,CAAL;QAAsBvY,GAAGuY,EAAa,CAAb,CAAzB;QAA0CtY,GAAGiF;MAA7C,CAAb,CAFG,EAGH+R,QAAa;QAAElX,GAAGyY,EAAW,CAAX,CAAL;QAAoBxY,GAAGwY,EAAW,CAAX,CAAvB;QAAsCvY,GAAG;MAAzC,CAAb,CAHG,EAIHgX,QAAa;QAAElX,GAAGyY,EAAW,CAAX,CAAL;QAAoBxY,GAAGwY,EAAW,CAAX,CAAvB;QAAsCvY,GAAGiF;MAAzC,CAAb,CAJG,CAgDP,EA1CK,UAAL,IAcS,YAAJ,IACG2J,cAGJ,IAFI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CAEJ,EAAIoG,eAAJ,IACI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CALH,KAeGoG,eAGJ,IAFI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CAEJ,EAAIoG,cAAJ,IACI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CAnBH,CAUD,EAHIoG,aAGJ,IAFI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CAEJ,EAAIoG,gBAAJ,IACI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CAzBR,KACQoG,eASJ,IARI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CAQJ,EANIoG,cAMJ,IALI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CAKJ,EAHIoG,cAGJ,IAFI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CAEJ,EAAIoG,eAAJ,IACI4J,OAAkBhQ,EAAK,CAAL,CAAlB,EAA2BA,EAAK,CAAL,CAA3B,CAXR,CA0CA,MAAenJ,EAAYmZ,CAAZ,EAA0B,UAA1B,EAAsC,EAAtC,CAjDnB,CAmDA;MAAA,OAAOjZ,0BAA8BiZ,CAA9B,CAzE+B;IAAA;IAgF1CC,SAASA,CAAoB,CAAChH,CAAD,EAAUiH,CAAV,EAAgB;MAAA,IAErCnZ,IADOmT,IACCnT,MAF6B;QAGrCoZ,IAFOjG,IAECiG,MAH6B;QAIrCC,IAHOlG,IAGKkG,UAChB;MAAA,IAJWlG,IAIPmG,WAAJ,IACItZ,aADJ,IAEIA,QAFJ,IAGIqZ,CAHJ,IAIIF,CAJJ,IAKIA,OALJ,EAKgB;QACRI,IAAiBF,qBAA6B,CAA7B,WADT;QAAA,IAERG,IAAcxZ,4BAFN;UAGRG,IAAYH,yBACZyZ;QAAAA,IAAW;UACPlZ,GAAGP,WAAHO,GAAqB,CADd;UAEPC,GAAGR,YAAHQ,GAAsB,CAFf;UAGPC,GAAGN,OAAHM,GAAqB,CAHd;UAIPC,IAAKL,EAAKF,OAAL,EAAsB,CAAtB,CAALO,GACIL,EAAKF,cAAL,EAA6B,CAA7B;QALG,CAOXuZ;QAAAA,IAASP,KAXD;QAAA,IAYRQ,IAAWP,EAAMM,CAAN,GAAe,CAAf,CAZH;UAaRE,IAAWR,EAAMM,CAAN,GAAe,CAAf,CAbH;UAgBRG,IADAC,CACAD,GADe,KAAK,CAIT;QAAA,CAAf,KAAIH,CAAJ,IACIC,CADJ,IAEIA,OAFJ,IAGIA,UAHJ,KAIIG,CAJJ,GAImBpY,EAAc;UACzBnB,GAAGoZ,YADsB;UAEzBnZ,GAAGmZ,YAFsB;UAGzBlZ,GAAG;QAHsB,CAAd,EAIZgZ,CAJY,EAIFA,IAJE,CAJnB,CAYIG;QAAAA,CAAJ,IAAgBA,OAAhB,IAAkCA,UAAlC,KACIC,CADJ,GACmBnY,EAAc;UACzBnB,GAAGqZ,YADsB;UAEzBpZ,GAAGoZ,YAFsB;UAGzBnZ,GAAG;QAHsB,CAAd,EAIZgZ,CAJY,EAIFA,IAJE,CADnB,CAOAM;QAAAA,IAAW;UACPxZ,GAAG4Y,YADI;UAEP3Y,GAAG2Y,YAFI;UAGP1Y,GAAG;QAHI,CAKXsZ;QAAAA,IAAWrY,EAAcqY,CAAd,EAAwBN,CAAxB,EAAkCA,IAAlC,CAMX;QAAA,OAAOhX,SAASqX,IACZC,GADY,GACCD,GADD,GACkBD,IAC9BA,GAD8B,GACbE,GADa,GAE9BR,GAF8B,GAEZC,GAHf,CAjDK;MAAA;MAsDhB,OAAOtH,QA/DIiB,IA+DJ,EAAoB,cAAc1M,SAAd,EAAyB,CAAzB,CAApB,CAhEkC;IAAA;IAqE7CuT,SAASA,CAAwB,CAAC9H,CAAD,EAAU;MACvC,IAAI+H,IAAM/H,QAAc,IAAd,EACN,cAAczL,SAAd,EAAyB,CAAzB,CADM,CAEV;MAAA,OAAO,cACH,0BAA0BwT,CAA1B,EAA+B,EAA/B,CADG,GAEHA,CALmC;IAAA;IA1P3C,IAAIpZ,IAAUjB,SAAd;MACIE,IAAcsC,aADlB;MAEIV,IAAgBU,eAFpB;MAGIL,IAAYK,WAHhB;MAIIyM,IAAWhP,UAJf;MAKIkD,IAAQlD,OALZ;MAMIQ,IAAOR,MANX;MAOIkP,IAAOlP,MAPX;MAaI6W,IAAkB,EAbtB;MA2QI0B,IAAiC,YAAY;QASzCA,SAASA,CAAe,CAACjF,CAAD,EAAO;UAC3B,YAAYA,CADe;QAAA;QAYnCiF,YAA0B8B,UAAUC,CAAD,EAAYvC,CAAZ,EAAuB;UACtDC,UAAeD,CAAf,CAC2C;UAAA,EAA3C,KAAIlB,UAAwByD,CAAxB,CAAJ,KACIzD,OAAqByD,CAArB,CAWA,EAVApX,EAAM,EAAN,EAAYoX,gBAAZ,EAAsChD,CAAtC,CAUA,EATAgD,iBAAyB,QAAzB,CASA,EARAtL,EAASsL,CAAT,EAAoB,MAApB,EAA4BhC,CAA5B,CAQA,EAPAtJ,EAASsL,CAAT,EAAoB,iBAApB,EAAuCrC,CAAvC,CAOA,EANAjJ,EAASsL,CAAT,EAAoB,eAApB,EAAqCnC,CAArC,CAMA,EALIoC,CAKJ,GALgBD,WAKhB,EAJApL,EAAKqL,CAAL,EAAgB,aAAhB,EAA+B/B,CAA/B,CAIA,EAHAtJ,EAAKqL,CAAL,EAAgB,iBAAhB,EAAmC9B,CAAnC,CAGA,EAFAvJ,EAAKqL,CAAL,EAAgB,iBAAhB,EAAmCvB,CAAnC,CAEA,EADA9J,EAAKqL,CAAL,EAAgB,cAAhB,EAAgClB,CAAhC,CACA,IAAKkB,CAAL,EAAgB,kBAAhB,EAAoCJ,CAApC,CAZJ,CAFsD;QAAA,CAiC1D5B;QAAAA,4BAA0CiC,UAAUJ,CAAD,EAAMK,CAAN,EAAe;UAE9D,IAAInH,IADSsE,IACFtE,KAAX;YACInT,IAAQmT,OAEZ;UAAA,IAAkB,WAAlB,KAAIA,MAAJ,IACI,CAACnT,SADL,IAEI,CAACA,QAFL,EAGI,OAAOia,CARmD;UAAA,IAU1DnZ,IAAQD,CAARC,GAAkBd,+BAVwC;YAW1DY,IAAOC,CAAPD,GAAiBZ,8BAXyC;YAY1Dua,IAAela,EAAKia,CAAL,IAAgBnH,0BAAhB,EACfA,2BADe,CAEfqH;UAAAA,IAAOna,EAAKia,CAAL,IAAgBnH,sBAAhB,EACPA,uBADO,CAdmD;UAAA,IAgB1D9D,IAAQrP,iBAhBkD;YAiB1DwP,IAAWxP,UAjB+C;YAkB1D4U,IAAY5U,WAAZ4U,GAA8BpF,CAlB4B;YAmB1DI,IAAU5P,SAnBgD;YAoB1D6U,IAAa7U,YAAb6U,GAAgCjF,CApB0B;YAsB1D6K,IADAC,CACAD,GADU,CArBgD;YAwB1DE,IAAO;cAAEpa,GAAG,CAAL;cACPC,GAAG,CADI;cAEPC,GAAG;YAFI,CAxBmD;YA6B1Dma,IAAc,EAClBX;UAAAA,IAAM9G,eAAkB;YAAE5S,GAAG0Z,GAAL;YAAYzZ,GAAGyZ,GAAf;YAAsBxZ,GAAG;UAAzB,CAAlB,CACN;UAAA,IAAI0S,SAAJ;YACI,IAAIA,UAAJ,EAAmB;cACf,IAAyB,IAAzB,KAAI9D,YAAJ,EACI,OAAO,EAEXoL;cAAAA,IAAUR,GAAV,GAAkBrK,CAClBqK;cAAAA,MAAQ5K,cACR4K;cAAAA,MAAQ5K,cACRwL;cAAAA,IAAOxL,iBACPuL;cAAAA,IAAc,CAACvL,iBARA;YAAA,CAAnB,MAUK;cACD,IAA4B,IAA5B,KAAIA,eAAJ,EACI,OAAO,EAEXoL;cAAAA,IAAUR,GAAV,GAAkBpF,CAClBoF;cAAAA,MAAQ5K,iBACR4K;cAAAA,MAAQ5K,iBACRwL;cAAAA,IAAOxL,oBACPuL;cAAAA,IAAc,CAACvL,oBARd;YAAA;UAXT,OAsBK,IAAI8D,OAAJ;YACD,IAAIA,UAAJ,EAAmB;cACf,IAAyB,IAAzB,KAAI9D,YAAJ,EACI,OAAO,EAEXoL;eAAA,GAAUR,GAAV,GAAkBrK,CAClBqK;cAAAA,MAAQ5K,cACR4K;cAAAA,MAAQ5K,cACRwL;cAAAA,IAAOxL,iBACPuL;cAAAA,IAAc,CAACvL,iBARA;YAAA,CAAnB,MAUK;cACD,IAA4B,IAA5B,KAAIA,eAAJ,EACI,OAAO,EAEXoL;cAAAA,IAAUR,GAAV,GAAkBpF,CAClBoF;cAAAA,MAAQ5K,iBACR4K;cAAAA,MAAQ5K,iBACRwL;cAAAA,IAAOxL,oBACPuL;cAAAA,IAAc,CAACvL,oBARd;YAAA;UAXJ,OAuBD,IAAI8D,UAAJ,EAAmB;YACf,IAA2B,IAA3B,KAAI9D,cAAJ,EACI,OAAO,EAEXqL;YAAAA,IAAUT,GAAV,GAAkBrF,CAClBqF;YAAAA,MAAQ5K,gBACR4K;YAAAA,MAAQ5K,gBACRwL;YAAAA,IAAOxL,mBAEPwL;YAAAA,IAAO;cAAEta,GAAGsa,GAAL;cAAara,GAAGqa,GAAhB;cAAwBpa,GAAG,CAACoa;YAA5B,CATQ;UAAA,CAAnB,MAWK;YACD,IAA0B,IAA1B,KAAIxL,aAAJ,EACI,OAAO,EAEXqL;YAAAA,IAAUT,GAAV,GAAkBzK,CAClByK;YAAAA,MAAQ5K,eACR4K;YAAAA,MAAQ5K,eACRwL;YAAAA,IAAOxL,kBAPN;UAAA;UAUY,OAArB,KAAIkL,CAAJ,KAI0B,MAArB,KAAIA,CAAJ,GAEIpH,OAAL,IAIQ/M,CAQJ,GARU3D,SAAS3B,CAAT,CAQV,EAPIqF,CAOJ,GAPU1D,SAAS3B,CAAT,CAOV,EANIqS,UAMJ,KALI/M,CAKJ,GALU,CAACA,CAKX,GAHIwU,CAGJ,KAFIxU,CAEJ,GAFU,CAACA,CAEX,OAAO;YAAE7F,GAAGsa,GAAHta,GAAY6F,CAAd;YAAmB5F,GAAG2F,CAAtB;YAA2B1F,GAAG,CAACoa,GAAJpa,GAAa2F;UAAxC,CAZX,IACIyU,CADJ,GACW;YAAEta,GAAGkC,SAAS7B,CAAT,CAAL;YAAqBJ,GAAG,CAAxB;YAA2BC,GAAGgC,SAAS7B,CAAT;UAA9B,CAHV,GAiBqB,OAArB,KAAI2Z,CAAJ,GAEIpH,OAAL,IAKQ2H,CAeJ,GAfWrY,SAAS3B,CAAT,CAeX,EAZgBkI,CAYhB,GAdWvG,SAAS7B,CAATma,CAcX,GAZuBD,CAYvB,EAXO1Z,CAWP,GAXO,CALIqB,SAAS3B,CAATka,CAgBX,EAVOtV,CAUP,GAVO,CAACoV,CAUR,GAbWrY,SAAS7B,CAATqa,CAaX,EATAN,CASA,GATO;YACHpa,GAAGsa,GAAHta,GAAYE,CAAZF,GAAqBsa,GAArBta,GAA8BC,CAD3B;YAEHA,GAAGqa,GAAHra,GAAYD,CAAZC,GAAqBqa,GAArBra,GAA8BC,CAF3B;YAGHA,GAAGoa,GAAHpa,GAAYD,CAAZC,GAAqBoa,GAArBpa,GAA8BF;UAH3B,CASP,EAJII,CAIJ,GAJY,CAIZ,GAJgB8B,UAAUkY,GAAV,GAAmBA,GAAnB,GAA4BA,GAA5B,GAAqCA,GAArC,GAA8CA,GAA9C,GAAuDA,GAAvD,CAIhB,EAHIC,CAGJ,KAFIja,CAEJ,GAFY,CAACA,CAEb,OAAO;YACHJ,GAAGI,CAAHJ,GAAWoa,GADR;YACgBna,GAAGG,CAAHH,GAAWma,GAD3B;YACmCla,GAAGE,CAAHF,GAAWka;UAD9C,CApBX,IACIE,CADJ,GACW;YAAEta,GAAGkC,SAAS7B,CAAT,CAAL;YAAqBJ,GAAG,CAAxB;YAA2BC,GAAGgC,SAAS7B,CAAT;UAA9B,CAHV,GA8BIuS,OAAL,GAIIwH,CAJJ,GAIW;YACHpa,GAAGkC,SAAS7B,CAAT,CAAHL,GAAoBkC,SAAS3B,CAAT,CADjB;YAEHN,GAAGiC,SAAS3B,CAAT,CAFA;YAGHL,GAAG,CAACgC,SAAS7B,CAAT,CAAJH,GAAqBgC,SAAS3B,CAAT;UAHlB,CAJX,GACI+Z,CADJ,GACW;YAAEta,GAAGkC,SAAS7B,CAAT,CAAL;YAAqBJ,GAAG,CAAxB;YAA2BC,GAAGgC,SAAS7B,CAAT;UAA9B,CApDf,CA8DAqZ;UAAAA,OAASS,CAAT,GAAmBG,GAAnB,GAA4BJ,CAA5B,GAAsCE,GACtCV;UAAAA,OAASS,CAAT,GAAmBG,GAAnB,GAA4BJ,CAA5B,GAAsCE,GACtCV;UAAAA,OAASS,CAAT,GAAmBG,GAAnB,GAA4BJ,CAA5B,GAAsCE,GAClCO;UAAAA,IAAYpb,EAAY,CAACma,CAAD,CAAZ,EACZ9G,OADY,EACA,CADA,CAEZqH;UAAAA,CAAJ,KAWuB,CA0BnB,GAnCiBzY,EAAUjC,EAAY,CAC/Bma,CAD+B,EAE/B;YAAE1Z,GAAG0Z,GAAH1Z,GAAWsa,GAAb;YACJra,GAAGyZ,GAAHzZ,GAAWqa,GADP;YAEJpa,GAAGwZ,GAAHxZ,GAAWoa;UAFP,CAF+B,EAK/B;YAAEta,GAAG0Z,GAAH1Z,GAAWoa,GAAb;YACJna,GAAGyZ,GAAHzZ,GAAWma,GADP;YAEJla,GAAGwZ,GAAHxZ,GAAWka;UAFP,CAL+B,CAAZ,EASvBxH,OATuB,CAAV,CAmCjB,KAxBI0H,CAwBJ,GAxBW;YAAEta,GAAG,CAACsa,GAAN;YAAcra,GAAG,CAACqa,GAAlB;YAA0Bpa,GAAG,CAACoa;UAA9B,CAwBX,GAtBIM,CAsBJ,GAtBsBrb,EAAY,CAC1B;YAAES,GAAG0Z,GAAL;YACJzZ,GAAGyZ,GADC;YAEJxZ,GAAGwZ;UAFC,CAD0B,EAI1B;YAAE1Z,GAAG0Z,GAAH1Z,GAAWsa,GAAb;YACJra,GAAGyZ,GAAHzZ,GAAWqa,GADP;YAEJpa,GAAGwZ,GAAHxZ,GAAWoa;UAFP,CAJ0B,EAO1B;YAAEta,GAAG0Z,GAAH1Z,GAAWoa,GAAb;YACJna,GAAGyZ,GAAHzZ,GAAWma,GADP;YAEJla,GAAGwZ,GAAHxZ,GAAWka;UAFP,CAP0B,CAAZ,EAWlBxH,OAXkB,CAsBtB,EAVA+H,QAUA,GAVmB,CACfC,EAAgB,CAAhB,GADe,GACQA,EAAgB,CAAhB,GADR,EAEfA,EAAgB,CAAhB,GAFe,GAEQA,EAAgB,CAAhB,GAFR,EAGfA,EAAgB,CAAhB,GAHe,GAGQA,EAAgB,CAAhB,GAHR,EAIfA,EAAgB,CAAhB,GAJe,GAIQA,EAAgB,CAAhB,GAJR,EAKfD,GALe,EAMfA,GANe,CAUnB,EAFAA,SAAiB,CAAjB,CAEA,IAFuBA,GAEvB,GAFqCA,SAAiB,CAAjB,CAErC,GADIA,GACJ,GADkBA,SAAiB,CAAjB,CAClB,WAAiB,CAAjB,KAAuBA,GAAvB,GAAqCA,SAAiB,CAAjB,CAArC,GACIA,GADJ,GACkBA,SAAiB,CAAjB,CAtCtB,CAwCA;UAAA,OAAOA,CA5MuD;QAAA,CAiNlE9C;QAAAA,oBAAkCgD,UAAUtV,CAAD,EAAI7F,CAAJ,EAAoB;UAC3D,IAAIkT,IAAO,SACX;UAAA,OAAIA,SAAJ,IACQ3D,CACG,GADQvP,IAAiB,CAAjB,GAAqBkT,gBAC7B;YACH5S,GAAGiP,CAAHjP,GAAcuF,GADX;YAEHtF,GAAGsF,GAFA;YAGHrF,GAAGqF,GAAHrF,GAAS+O;UAHN,CAFX,IAQO1J,CAVoD;QAAA,CAY/D;QAAA,OAAOsS,CAnRsC;MAAA,CAAZ,EA2RrC;IAAA,OAAOA,CAljBgR;EAAA,CAA3R,CAojBAjZ;EAAAA,EAAgBQ,CAAhB,EAA0B,yBAA1B,EAAqD,CAACA,EAAS,gBAAT,CAAD,EAA6BA,EAAS,uBAAT,CAA7B,EAAgEA,EAAS,mBAAT,CAAhE,CAArD,EAAqJ,UAAUyC,CAAD,EAASiZ,CAAT,EAAiBxb,CAAjB,EAAoB;IAY9K,IAAI2F,IAAa,IAAbA,IAAqB,cAArBA,IAAyC,YAAY;QACjD,IAAIC,IAAgBA,UAAUC,CAAD,EACjCvE,CADiC,EAC9B;UACKsE,IAAgBE,qBAAhB,IACK;YAAEC,WAAW;UAAb,CADL,YACkCC,KADlC,IAC2C,UAAUH,CAAD,EAC5DvE,CAD4D,EACzD;YAAEuE,cAAcvE,CAAhB;UAAA,CAFK,IAGI,UAAUuE,CAAD,EACrBvE,CADqB,EAClB;YAAE,KAAK2E,IAAIA,CAAT,IAAc3E,CAAd,EAAqBA,iBAAiB2E,CAAjB,CAAJ,KAAyBJ,EAAEI,CAAF,CAAzB,GAAgC3E,EAAE2E,CAAF,CAAhC,CAAnB;UAAA,CACC;UAAA,OAAOL,EAAcC,CAAd,EAAiBvE,CAAjB,CANR;QAAA,CAQH;QAAA,OAAO,UAAUuE,CAAD,EAAIvE,CAAJ,EAAO;UAEnB4E,SAASA,CAAE,GAAG;YAAE,mBAAmBL,CAArB;UAAA;UADdD,EAAcC,CAAd,EAAiBvE,CAAjB,CAEAuE;UAAAA,cAAoB,IAAN,SAAaC,cAAcxE,CAAd,CAAb,IAAiC4E,cAAe5E,WAAf,EAA4B,IAAI4E,CAAjE,GAHK;QAAA,CAV8B;MAAA,CAAb,EAA5C;MAgBIjG,IAAcsC,aACdyM;IAAAA,IAAWhP,UA7B+J;IAAA,IA8B1KqG,IAASrG,QA9BiK;MA+B1KkD,IAAQlD,OA/BkK;MAgC1KQ,IAAOR,MAhCmK;MAiC1Kyb,IAAWzb,UAMX0b;IAAAA,IAA0B,UAAUhV,CAAD,EAAS;MAE5CgV,SAASA,CAAQ,GAAG;QAChB,OAAkB,IAAlB,KAAOhV,CAAP,IAA0BA,QAAa,IAAb,EAAmBE,SAAnB,CAA1B,IAA2D,IAD3C;MAAA;MADhBjB,EAAU+V,CAAV,EAAoBhV,CAApB,CAUJgV;MAAAA,wBAA+BC,YAAY;QACvCjV,4BAAiC,IAAjC,EAAuCE,SAAvC,CACI;QAAA,iBAAJ,IACI,wBAHmC;MAAA,CAU3C8U;MAAAA,gCAAuCE,YAAY;QAAA,IAE3CC,IADStJ,IACOhD,QAF2B;UAG3CpP,IAFSoS,IAEDpS,MAHmC;UAI3C2b,IAAQtb,EAHC+R,IAGIuJ,MAAL,EACR3b,gBAAoB,CAApB,CADQ,CAJmC;UAM3C4b,IAAY,EAN+B;UAW3C1Z,CAX2C;UAY3C2Z,IAAa,EAXJzJ;QAAAA,IAeb0J,aAHYJ,aACHJ,EAASI,OAAT,IAAgCA,OAAhC,GAAsD,CADnDK,GAZC3J,IAcL4J,MAFID,IAEY,CACxB,KACKL,OADL,IAC4B,CAD5B,IACiCA,eADjC,IACgE,CADhE,EAEA;QAAA,KAAKxZ,CAAL,GAAS,CAAT,EAAYA,CAAZ,GAjBakQ,IAiBG6J,YAAhB,EAAoC/Z,GAApC,EAAyC;UACrCga,IAlBS9J,IAkBE6J,MAAY/Z,CAAZ,CACX;UAAA,IAAIyZ,CAAJ,IAAaA,WAAb,EAA8B;YAC1B,QAASA,iBAAqBA,SAArB,GACLA,UAAcO,GAAd,CADK,GAELA,GACJA;YAAAA,UAAiBP,YAAgBQ,CAAhB,CACjBD;YAAAA,aAAoBA,aACfC,CADe,IACLR,KADK,IAEZQ,CAFY,IAEFR,KAFE,GAGhB,EARsB;UAAA,CAA9B,MAWIO,UA9BK9J,IA8BY0J,SAErBI;UAAAA,aAAoBA,OACpBA;UAAAA,aAAoBA,OACpBA;UAAAA,aAAoBA,OACpBN;UAAAA,OAAe;YACXrb,GAAG2b,OADQ;YAEX1b,GAAG0b,OAFQ;YAGXzb,GAAGyb;UAHQ,CAAf,CAKAL;UAAAA,OAAgBK,OAAhB,IAAkC,CAAlC,CAvBqC;QAAA;QAjB5B9J,IA0CbyJ,cAAoBA,CACpBO;QAAAA,IAAkBtc,EAAY8b,CAAZ,EAAuB5b,CAAvB,EAA8B,EAA9B,CAClB;QAAA,KAAKkC,CAAL,GAAS,CAAT,EAAYA,CAAZ,GA5CakQ,IA4CG6J,YAAhB,EAAoC/Z,GAApC,EACIga,CAIA,GAjDS9J,IA6CE6J,MAAY/Z,CAAZ,CAIX,EAHAma,CAGA,GAHiBD,EAAgBla,CAAhB,CAGjB,EAFAga,OAEA,GAFiBG,GAEjB,EADAH,OACA,GADiBG,GACjB,YAAiBA,GAlD0B;MAAA,CA0DnDd;MAAAA,mBAA0BxY,EAAMsY,gBAAN,CAC1B;aAAOE,CAhFqC;IAAA,CAAlB,CAiF5BF,CAjF4B,CAwF9BxM;IAAAA,EAASwM,CAAT,EAAiB,gBAAjB,EAAmC,YAAY;MACvC,iBAAJ,IACI,wBAFuC;IAAA,CAA/C,CAMAnV;IAAAA,EAAOmV,WAAP,EAAyB;MACrBiB,mBAAmBf;IADE,CAAzB,CASA;IAAA,OAAOA,CA9IuK;EAAA,CAAlL,CAgJApc;EAAAA,EAAgBQ,CAAhB,EAA0B,+BAA1B,EAA2D,CAACA,EAAS,gBAAT,CAAD,EAA6BA,EAAS,+BAAT,CAA7B,EAAwEA,EAAS,mBAAT,CAAxE,CAA3D,EAAmK,UAAUyC,CAAD,EAASma,CAAT,EAAyB1c,CAAzB,EAA4B;IA+BpM2c,SAASA,CAA0B,CAACtK,CAAD,EAAU;MACzC,IACIuK,IAAUvK,QADDE,IACC,EACV,cAAc3L,SAAd,EAAyB,CAAzB,CADU,CAGd;MAAA,IAAI,CAJS2L,IAIRpS,aAAL,EACI,OAAOyc,CAN8B;MAAA,IAQrCC,IAAeC,cARsB;QASrCvN,IARSgD,IAQChD,QAT2B;QAUrCwN,IAAsBna,WATb2P,IAUTyK,oBAA0BzN,WAA1B,CADsB,CAVe;QAYrC0N,IAAe,EACnB;MAAA,IAZa1K,IAYTyJ,WAAJ,EACI,KAAK,IAAI3Z,IAAI,CAAb,EAAgBA,CAAhB,GAbSkQ,IAaWrS,cAApB,EAA0CmC,GAA1C,EACI4a,OAAkB;QACdvc,GAfC6R,IAeEyJ,YAAkB3Z,CAAlB,CADW;QAEd1B,GAAG4O,aAhBFgD,IAiBGrS,QAAcmC,CAAd,SADD,GAC4B0a,CAHjB;QAIdnc,GAlBC2R,IAkBE0J;MAJW,CAAlB,CAQJ3b;MAAAA,IAtBSiS,IAsBGpS,8BAChB8c;MAAAA,IAAehd,EAAYgd,CAAZ,EAvBF1K,IAuB4BpS,MAA1B,EAAwC,EAAxC,MAAkD,UAAUkB,CAAD,EAAQ;QAAE,OAAQ;UAAE6b,OAAO7b,GAAT;UAAkB8b,OAAO9b,GAAzB;UAAkC+b,OAAO/b;QAAzC,CAAV;MAAA,CAAnE,CAvBFkR;MAAAA,IAwBT3H,MAAJ,IAAoBtK,CAApB,IAAiCA,OAAjC,IAAoDA,MAApD,KAxBaiS,IA0BL8K,YAOJ,KAjCS9K,IA2BL8K,iBA3BK9K,IA2BkB3H,MAAvB,CACA,EA5BK2H,IA4BL8K,kBAAwB;QACpBC,YAAY,CADQ;QAEpBC,YAAY;MAFQ,CAAxB,CAKJ,GAjCShL,IAiCT3H,YAAkB;QACd/G,QAAQjB,SAAS,CAAT,EAA8B,GAAlB,GAACtC,MAAD,IAA0C,EAA1C,GAAyBA,MAAzB,GAChBA,OADgB,GACEsC,WAnCjB2P,IAmC4B0J,SAAX,IAA8B,CAA9B,CADF,GAEhBrZ,WApCC2P,IAoCU0J,SAAX,IAA8B,CAA9B,CAFI;MADM,CAAlB,CATJ,CAeAgB;MAAAA,aAAwB,EACpBO;MAAAA,IAAaX,OAxCJtK,IAwCI,EACb0K,CADa,EAEb,EAFa,EAGb,EAHa,CAIbO;MAAAA,EAAW,CAAX,CAAJ,IAA0C,GAA1C,KAAqBA,EAAW,CAAX,EAAc,CAAd,CAArB,KACIA,EAAW,CAAX,CADJ,GACoB,CAAC,GAAD,EAAMA,EAAW,CAAX,EAAc,CAAd,CAAN,EAAwBA,EAAW,CAAX,EAAc,CAAd,CAAxB,CADpB,CA5CajL;MAAAA,IA+CTkL,SAAJ,KAEQA,CAIJ,GArDSlL,IAiDMkL,iBAAuB,CAAvB,EAjDNlL,IAkDLkL,gBADW,GACc,CADd,SACwBD,CADxB,CAIf,EADAC,MACA,GArDSlL,IAoDOkL,cAChB,EArDSlL,IAqDTkL,YAAkBA,CANtB,CAQA;MAAA,OAAOb,CAxDkC;IAAA;IArB7C,IAAI3c,IAAcsC,aAAlB;MACIua,IAAYJ,4BADhB;MAGIxN,IAAOlP,MAHX;MASI6W,IAAkB,EA+EtB;IAAA,OAJmB6G;MACX7H,SAtERA,UAAiB8H,CAAD,EAAkB;QACmB,EAAjD,KAAI9G,UAAwB8G,CAAxB,CAAJ,KACI9G,OAAqB8G,CAArB,CACA,IAAKA,WAAL,EAAgC,cAAhC,EAAgDhB,CAAhD,CAFJ,CAD8B;MAAA;IAqEfe,CA9FiL;EAAA,CAAxM,CAoGApe;EAAAA,EAAgBQ,CAAhB,EAA0B,wCAA1B,EAAoE,CAACA,EAAS,+BAAT,CAAD,EAA4CA,EAAS,iBAAT,CAA5C,EAAyEA,EAAS,uBAAT,CAAzE,EAA4GA,EAAS,gBAAT,CAA5G,EAAwIA,EAAS,+BAAT,CAAxI,EAAmLA,EAAS,iCAAT,CAAnL,EAAgOA,EAAS,mBAAT,CAAhO,CAApE,EAAoU,UAAU8d,CAAD,EAAe7d,CAAf,EAAkByb,CAAlB,EAA0BjZ,CAA1B,EAAkCma,CAAlC,EAAkDmB,CAAlD,EAA6D7d,CAA7D,EAAgE;IA6BzY8d,SAASA,CAAc,CAAC3d,CAAD,EAAQ4d,CAAR,EAAkB;MAAA,IACjCxL,IAASpS,QADwB;QAEjC6d,IAAS;UAAEC,aAAa;QAAf,CAFwB;QAGjCC,CAHiC;QAIjC7b,IAAI,CACRkQ;MAAAA,UAAe,UAAUf,CAAD,EAAI;QACxB0M,IAAc1d,EAAKgR,eAAL,EAAuBuM,IAAW,CAAX,GAAexL,QAAf,GAA+B,CAA/B,GAAmCf,OAA1D,CACTwM;QAAAA,EAAOE,CAAP,CAAL,GAKIF,EAAOE,CAAP,cAAgC1M,CAAhC,CALJ,IACIwM,EAAOE,CAAP,CACA,GADsB;UAAE3L,QAAQ,CAACf,CAAD,CAAV;UAAe2M,UAAU9b;QAAzB,CACtB,KAFJ,CAFwB;MAAA,CAA5B,CAUA2b;MAAAA,gBAAqB3b,CAArB,GAAyB,CACzB;MAAA,OAAO2b,CAhB8B;IAAA;IAwQzCI,SAASA,CAAY,CAAC/L,CAAD,EAAU;MAC3B,IAAItN,IAAOsN,QAAc,IAAd,EACP,cAAczL,SAAd,EAAyB,CAAzB,CADO,CAEP;MAAA,eAAJ,IAAuB,iBAAvB,KAEI7B,QACA,GADc,sBACd,IADwCA,MACxC,IAAK,cAAL,IAAuBvE,EAAK,sBAAL,EAA6B,CAA7B,CAH3B,CAKA;MAAA,OAAOuE,CARoB;IAAA;IAgB/BsZ,SAASA,CAAQ,CAAChM,CAAD,EAAUiM,CAAV,EAAiBvR,CAAjB,EAA0B;MACvC,IAAI2E,IAAO,eAAPA,IAA0B,iBAC1BA;MAAAA,CAAJ,KACI,gCADJ,GACuC,EADvC,CAGAW;MAAAA,OAAa,IAAb,EAAmBiM,CAAnB,EAA0BvR,CAA1B,CACI2E;MAAAA,CAAJ,KACI,gCADJ,GACuC,EADvC,CANuC;IAAA;IAgB3C6M,SAASA,CAAe,CAAClM,CAAD,EAAU;MAE9B,KADA,IAAI5S,IAAO,EAAX,EACS+e,IAAK,CAAd,EAAiBA,CAAjB,GAAsB5X,gBAAtB,EAAwC4X,GAAxC,EACI/e,EAAK+e,CAAL,GAAU,CAAV,IAAe5X,UAAU4X,CAAV,CAEnB;MAAA,OAAO,2BACH,YADG,IAC+C,GAD/C,KACa,6BADb,GAEHnM,QAAc,IAAd,EAAoB5S,CAApB,CAP0B;IAAA;IA3TlC,IAAIgf,IAAcb,WAAlB;MACIc,IAAM3e,KADV;MAEIE,IAAcsC,aACdyM;IAAAA,IAAWhP,UAb0X;IAAA,IAcrYQ,IAAOR,MACPkP;IAAAA,IAAOlP,MAgCXkP;IAAAA,EAAKuP,CAAL,EAAkB,WAAlB,EAA+B,UAAUpM,CAAD,EAAU;MAC9CA,QAAc,IAAd,EAAoB,cAAczL,SAAd,EAAyB,CAAzB,CAApB,CAEI;MAAA,iBAAJ,IACI,wBAJ0C;IAAA,CAAlD,CAQAsI;IAAAA,EAAKsM,WAAL,EAAuB,kBAAvB,EAA2C,UAAUnJ,CAAD,EAAU;MAC1D,OAASzL,UAAU,CAAV,eAAF,GAEH,EAFG,GACHyL,QAAc,IAAd,EAAoB,cAAczL,SAAd,EAAyB,CAAzB,CAApB,CAFsD;IAAA,CAA9D,CAKA6X;IAAAA,sBAAgCE,YAAY,EAC5CF;IAAAA,sBAAgCG,YAAY;MAAA,IACpCrM,IAAS,IAD2B;QAEpCpS,IAAQoS,OAF4B;QAGpCsJ,IAAgBtJ,SAHoB;QAIpC5F,IAAQkP,OAJ4B;QAQpCjb,KAHQib,aACHA,OADGK,IACoB,CADpBA,GAEJ3J,OACJ3R,KAAa+L,CAAb/L,IAAsBib,eAAtBjb,IAAqD,CAArDA,EARoC;QASpCie,IAActM,gBAAqB,CAArB,GAAyB,EAAzB,GAA+B,CATT;QAUpCuM,CACI3e;MAAAA,UAAJ,IAAsB,CAACoS,gBAAvB,KACIsM,CADJ,IACmB,EADnB,CAG2B;MAAA,EAA/B,KAAIhD,UAAJ,KACIjb,CADJ,GACQ,CADR,CAGAA;MAAAA,KAAMib,eAAN,IAAqC,CACrCtJ;MAAAA,eAAoB,UAAUlR,CAAD,EAAQ;QAEjCA,kBAAsB,IACtB;QAAA,IAAgB,IAAhB,KAAIA,GAAJ,EAAsB;UAAA,IACd0d,IAAc1d,WADA;YACiB2d,IAAa3d,YAD9B;YAIkC4d,CAAnCC;UAAAA,CAAC,CAAC,GAAD,EAAM,OAAN,CAADA,EAAiB,CAAC,GAAD,EAAM,QAAN,CAAjBA,CAEb3N,SAAmB,UAAU1L,CAAD,EAAI;YAC5BoZ,IAAmBF,EAAYlZ,EAAE,CAAF,CAAZ,CAAnB,GAAuCgZ,CACpB;YAAA,CAAvB,GAAII,CAAJ,KAIIF,EAAYlZ,EAAE,CAAF,CAAZ,CAGA,IAFIkZ,EAAYlZ,EAAE,CAAF,CAAZ,CAEJ,GAFwBgZ,CAExB,EADAE,EAAYlZ,EAAE,CAAF,CAAZ,CACA,GADoB,CAACgZ,CACrB,MAAmB,CAPvB,CASKI;YAAAA,CAAL,GAAwBF,EAAYlZ,EAAE,CAAF,CAAZ,CAAxB,GACI0M,EAAO1M,EAAE,CAAF,CAAP,GAAc,MAAd,KADJ,IAG0B,CAH1B,KAGIkZ,EAAYlZ,EAAE,CAAF,CAAZ,CAHJ,KAIIkZ,EAAYlZ,EAAE,CAAF,CAAZ,CAJJ,GAKQ0M,EAAO1M,EAAE,CAAF,CAAP,GAAc,MAAd,KALR,GAMYkZ,EAAYlZ,EAAE,CAAF,CAAZ,CANZ,CAQA;YAAA,IAEuB,CAFvB,KAECkZ,EAAYlZ,EAAE,CAAF,CAAZ,CAFD,KAGKkZ,EAAYlZ,EAAE,CAAF,CAAZ,CAHL,IAIQ0M,EAAO1M,EAAE,CAAF,CAAP,GAAc,MAAd,KAJR,IAKQkZ,EAAYlZ,EAAE,CAAF,CAAZ,CALR,GAK4BkZ,EAAYlZ,EAAE,CAAF,CAAZ,CAL5B,IAMYgZ,CANZ,GAM0B;cAEtB,KAAK5Z,IAAIA,CAAT,IAAgB8Z,CAAhB,EAEIA,EAAY9Z,CAAZ,IAA2B,GAAR,SAAc,KAAd,GAAsB,CAI7C5D;cAAAA,kBAAsB,EARA;YAAA;UAzBM,CAAhC,CAqCoB;UAAA,MAAxB,KAAIA,WAAJ,KACIA,WADJ,GACsB,QADtB,CAGA0d;UAAAA,MAAgBne,CAChBme;UAAAA,UAAoBpS,CACpBoS;UAAAA,mBAA6B,EAE7BD;UAAAA,IAAa;YACTpe,GAAGqe,GAAHre,GAAmBqe,OAAnBre,GAAuC,CAD9B;YAETC,GAAGoe,GAFM;YAGTne,GAAGA,CAAHA,GAAO+L,CAAP/L,GAAe;UAHN,CAMTT;UAAAA,UAAJ,KACI2e,GACA,GADeC,QACf,QAAe1d,SAFnB,CAMAA;UAAAA,WAAepB,EAAY,CAAC6e,CAAD,CAAZ,EAA0B3e,CAA1B,EAAiC,EAAjC,EAAuC,EAAvC,EAA8C,CAA9C,CAEf6e;UAAAA,IAAa/e,EAAY,CAAC;YAClBS,GAAGse,EAAW,CAAX,CADe;YAElBre,GAAGqe,EAAW,CAAX,CAFe;YAGlBpe,GAAGA,CAAHA,GAAO+L,CAAP/L,GAAe;UAHG,CAAD,CAAZ,EAILT,CAJK,EAIE,EAJF,EAIQ,EAJR,EAIe,CAJf,CAKbkB;UAAAA,eAAmB,CAAC2d,GAAD,EAAeA,GAAf,CArED;QAAA;MAHW,CAArC,CA4EAzM;MAAAA,MAAW3R,CA9F6B;IAAA,CAgG5CsO;IAAAA,EAAKuP,CAAL,EAAkB,SAAlB,EAA6B,UAAUpM,CAAD,EAAU;MAC5C,IAAK,iBAAL,EAGK;QAAA,IAEG8M,IADOvY,SACA,CAAK,CAAL,CAFV;UAGGwY,IAAU,UAHb;UAIGC,IAAW,IAJd;UAKGC,IAAa,mBACbZ;QAAAA,CAAJ,KACQS,CAAJ,GACIE,eAAsB,UAAUhe,CAAD,EAAQ;UACnB,IAAhB,KAAIA,GAAJ,KACIA,QAGA,GAHeA,kBAGf,EAFAA,QAEA,GAFeA,aAEf,EADAA,kBACA,GADyB,CACzB,EAAKie,CAAL,KAEQje,aAFR,GACQA,QAAJ,GAEQA,OAFR,GAGY+d,YAAkB/d,QAAlB,CAHZ,GAOQA,OAPR,IAQaA,aACG,CAACA,QADJ,GAEGA,QAVhB,CADJ,CAJJ,CADmC;QAAA,CAAvC,CADJ,IAwBIge,eAAsB,UAAUhe,CAAD,EAAQ;UACnC,IAAgB,IAAhB,KAAIA,GAAJ,KACIA,kBAGIke,GAHqBle,QAGrBke,EAFJle,aAEIke,GAFgBle,QAEhBke,WAJR,GAKQle,UAAcA,kBACV,MADU,GAEV,SAFJ,EAEeA,WAFf,EAEgCge,mBAFhC,CAN2B;QAAA,CAAvC,CAaA,uBArCJ,CADJ,CANC;MAAA,CAHL,MACIhN,QAAc,IAAd,EAAoB,cAAczL,SAAd,EAAyB,CAAzB,CAApB,CAFwC;IAAA,CAAhD,CAwDAsI;IAAAA,EAAKuP,CAAL,EAAkB,WAAlB,EAA+B,UAAUpM,CAAD,EAAUtO,CAAV,EAAgByb,CAAhB,EAAuBC,CAAvB,EAAoCC,CAApC,EAA6CtU,CAA7C,EAAqD;MAC5E,iBAAb,KAAIrH,CAAJ,IACQ,iBADR,KAEY,KAAKA,CAAL,CAGAqH,IAFA,OAAO,KAAKrH,CAAL,CAEPqH,QACK,sBAOD,KANA,sBAMA,GALI,sBAAsB,aAAtB,MAAyCA,CAAzC,CAKJ,GAHJ,KAAKrH,CAAL,CAGI,GAHS,sBAGT,EAFJ,4BAA4B,iBAA5B,CAEI,EADJ,KAAKA,CAAL,SACI,GADiB,EACjB,EAAS,OAAT,UAA6B,aAA7B,KAAoBA,CARxBqH,CALZ,MAcgBxE,UAAU,CAAV,CAdhB,GAc+B,SAd/B,CAoBA;MAAA,OAAOyL,QAAc,IAAd,EAAoBrM,2BAA2BY,SAA3B,EAAsC,CAAtC,CAApB,CArBkF;IAAA,CAA7F,CAyBAsI;IAAAA,EAAKuP,CAAL,EAAkB,YAAlB,EAAgC,UAAUpM,CAAD,EAAUsN,CAAV,EAAe;MACpD,IAAIpN,IAAS,IACTA;MAAAA,cAAJ,IACIA,eAAoB,UAAUlR,CAAD,EAAQ;QACjCA,YAAgBA,iBAAhB,GAAwCse,CAAxC,GACmB,WAAf,YAAOA,CAAP,GACI,CAACnf,EAAK+R,SAAL,EAAqBlR,SAArB,CADL,GAC2Cse,CAC/CpN;QAAAA,eAAoBA,eAAoBlR,CAApB,CAApB,IACIA,SACAA;QAAAA,SAAJ,IACIA,eAAmB;UACfkH,YAAYoX,IAAM,SAAN,GAAkB;QADf,CAAnB,CAP6B;MAAA,CAArC,CAaJtN;MAAAA,QAAc,IAAd,EAAoBrM,2BAA2BY,SAA3B,EAAsC,CAAtC,CAApB,CAhBoD;IAAA,CAAxD,CAkBAoI;IAAAA,EAAS4O,CAAT,EAAuB,WAAvB,EAAoC,YAAY;MAC5C,IAAI,iBAAJ,EAAuB;QAAA,IAEf/B,IAAgB,YAFD;UAGf+D,IAAW/D,UAHI;UAIfkC,IAAWlC,UAJI;UAKfgE,IAAiB,iCALF;UAMfjf,IAAI,CAER;QAAA,IAA0B,WAA1B,KAAM,OAAOgf,CAAb,IAA0CA,CAA1C,EAAqD;UAC7C5B,IAASF,EAAe,UAAf,EACTC,CADS,CAET7B;UAAAA,IAAQL,OAARK,IAA+B,CAG/B;UAAA,KAAK7Z,CAAL,GAAS,CAAT,EAAYA,CAAZ,GAAgB2b,EAAO9B,CAAP,eAAhB,IACQ8B,EAAO9B,CAAP,SAAqB7Z,CAArB,CADR,KACoC,IADpC,EAA6CA,GAA7C;UAKJzB,IAAK,EAAL,IAAWod,aAAX,GAAgCA,EAAO9B,CAAP,UAAhC,KACK2D,IAAiBxd,CAAjB,GAAqB,CAACA,CAD3B,CAIK;UAAA,mBAAL,KACIzB,CADJ,GAC8B,EAD9B,GACSod,aADT,GACoCpd,CADpC,CAfiD;QAAA;QAmBrDib,UAAsBA,OAAtB,IAA6C,EA1BhCtJ;QAAAA,IA2Bb3R,KA3Ba2R,IA2BF3R,EAAX,IAAuB,CACvBib;QAAAA,WAAuBjb,CA7BJ;MAAA;IADqB,CAAhD,CA8EAsO;IAAAA,EAAKuP,CAAL,EAAkB,cAAlB,EAAkCL,CAAlC,CACAlP;IAAAA,EAAKuP,CAAL,EAAkB,UAAlB,EAA8BJ,CAA9B,CACAnP;IAAAA,EAAKuP,sBAAL,EAAuC,iBAAvC,EAA0DF,CAA1D,CACI7B;IAAAA,yBAAJ,KACQoD,CAKJ,GALuBpD,mCAKvB,EAJAxN,EAAK4Q,CAAL,EAAuB,cAAvB,EAAuC1B,CAAvC,CAIA,EAHAlP,EAAK4Q,CAAL,EAAuB,UAAvB,EAAmCzB,CAAnC,CAGA,EAFAnP,EAAK4Q,sBAAL,EAA4C,iBAA5C,EAA+DvB,CAA/D,CAEA,EADAuB,WACA,GAD6BrB,WAC7B,iBAA8BA,YANlC,CAQAvP;IAAAA,EAAKsM,WAAL,EAAuB,gBAAvB,EAAyC,UAAUnJ,CAAD,EAAUhR,CAAV,EAAiB0e,CAAjB,EAA4BxQ,CAA5B,EAAqCyQ,CAArC,EAA8C;MAC5F,IAAI7f,IAAQ,UAGZoP;MAAAA,kBAAwBlO,eAExB;MAAA,IAAIlB,QAAJ,IACI,QAAQ,QAAR,CADJ,EACuB;QAAA,IAEf0b,IADStJ,IACOhD,QAFD;UAGf0Q,IAASzf,EAAK+O,QAAL,EAAqB,CAAC,CAFtBgD,IAEuBhD,iBAAvB,CAHM;UAIfjP,IAAYH,yBAJG;UAKf+f,IAAU7e,YAAV6e,GAA6B,CAA7BA,IAAkC,CAClCC;QAAAA,IAAa;UACTzf,GAAGsf,GAAHtf,GAAewf,CADN;UAETvf,GAAGqf,GAFM;UAGTpf,GARK2R,IAQF3R,EAAHA,GAAcib,OAAdjb,GAAoC;QAH3B,CAKbT;QAAAA,UAAJ,KAIQ8f,CAOJ,KANID,OACA,GADgB,CAChB,SAAgB3e,kBAAhB,GAAyC,CAK7C,GAAuB,EAAvB,IAAIf,OAAJ,IAAgD,GAAhD,IAA6BA,OAA7B,KACI6f,GADJ,IACoB9e,iBADpB,CAXJ,CAgBA8e;QAAAA,IAAalgB,EAAY,CAACkgB,CAAD,CAAZ,EAA0BhgB,CAA1B,EAAiC,EAAjC,EAAuC,EAAvC,EAA8C,CAA9C,CACb6f;QAAAA,MAAYG,GAAZ,GAA2BD,CAE3BF;QAAAA,MAAY3e,kBAAsB,IAAtB,GAA6B8e,GA9BtB;MAAA;MAgCvB9N,QAAc,IAAd,EAAoB,cAAczL,SAAd,EAAyB,CAAzB,CAApB,CAvC4F;IAAA,CAAhG,CA0CAsI;IAAAA,EAAK2O,WAAL,EAA0B,aAA1B,EAAyC,UAAUxL,CAAD,EAAUlS,CAAV,EAAiBigB,CAAjB,EAA4B1f,CAA5B,EAA+BC,CAA/B,EAAkC0f,CAAlC,EAA0ClX,CAA1C,EAA6CmK,CAA7C,EAAmD;MACjG,IAAIgN,IAAWjO,QAAc,IAAd,EACX,cAAczL,SAAd,EAAyB,CAAzB,CADW,CAGf;MAAA,IAAIzG,QAAJ,IAAoBigB,MAApB,EAAoC;QAEhC,IAAIG,IAAgB,CAAEH,MAADI,OAAuB,GAAvB,EAA4B,CAA5B,CAArB;UACIC,IAAetgB,SAAaogB,CAAb,CACfjgB;QAAAA,IAAYH,yBAIZsgB;QAAAA,CAAJ,IACIA,CADJ,YAC4B/D,oBAD5B,KAEQyD,CAkBJ,GAlBiB;UACTzf,GAAG4f,GAAH5f,IAAiBP,aAAiBgJ,CAAjB,GAAqBkX,CAArB,GAA8B,CAA/C3f,CADS;UAETC,GAAG2f,GAFM;UAGT1f,GAAG6f,eAAH7f,GAAgC;QAHvB,CAkBjB,EAbIT,UAaJ,KAVImgB,OAIA,GAJiB,CAIjB,EAAuB,EAAvB,IAAIhgB,OAAJ,IAAgD,GAAhD,IAA6BA,OAA7B,KACI6f,GADJ,IACoBE,CADpB,CAMJ,GAFAF,CAEA,GAFalgB,EAAY,CAACkgB,CAAD,CAAZ,EAA0BhgB,CAA1B,EAAiC,EAAjC,EAAuC,EAAvC,EAA8C,CAA9C,CAEb,EADAmgB,GACA,GADaH,GACb,GAD4BE,CAC5B,GADqC,CACrC,QAAaF,GApBjB,CARgC;MAAA;MA+BpC,OAAOG,CAnC0F;IAAA,CAArG,CA4IA;IAAA,EAEA;IAAA,OAAO1C,CAjhBkY;EAAA,CAA7Y,CAmhBAte;EAAAA,EAAgBQ,CAAhB,EAA0B,4BAA1B,EAAwD,CAACA,EAAS,+BAAT,CAAD,CAAxD,EAAqG,UAAU4c,CAAD,EAAiB;IAY3H,IAAI/W,IAAa,IAAbA,IAAqB,cAArBA,IAAyC,YAAY;MACjD,IAAIC,IAAgBA,UAAUC,CAAD,EACjCvE,CADiC,EAC9B;QACKsE,IAAgBE,qBAAhB,IACK;UAAEC,WAAW;QAAb,CADL,YACkCC,KADlC,IAC2C,UAAUH,CAAD,EAC5DvE,CAD4D,EACzD;UAAEuE,cAAcvE,CAAhB;QAAA,CAFK,IAGI,UAAUuE,CAAD,EACrBvE,CADqB,EAClB;UAAE,KAAK2E,IAAIA,CAAT,IAAc3E,CAAd,EAAqBA,iBAAiB2E,CAAjB,CAAJ,KAAyBJ,EAAEI,CAAF,CAAzB,GAAgC3E,EAAE2E,CAAF,CAAhC,CAAnB;QAAA,CACC;QAAA,OAAOL,EAAcC,CAAd,EAAiBvE,CAAjB,CANR;MAAA,CAQH;MAAA,OAAO,UAAUuE,CAAD,EAAIvE,CAAJ,EAAO;QAEnB4E,SAASA,CAAE,GAAG;UAAE,mBAAmBL,CAArB;QAAA;QADdD,EAAcC,CAAd,EAAiBvE,CAAjB,CAEAuE;QAAAA,cAAoB,IAAN,SAAaC,cAAcxE,CAAd,CAAb,IAAiC4E,cAAe5E,WAAf,EAA4B,IAAI4E,CAAjE,GAHK;MAAA,CAV8B;IAAA,CAAb,EAgBxCwa;IAAAA,IAAWhE,sCAMf;IAAA,IAAIiE,IAAgBD,oBAyCpB;IAAA,OAnCgC,UAAUha,CAAD,EAAS;MAE9Cka,SAASA,CAAU,GAAG;QAMlB,IAAInK,IAAmB,IAAnBA,KAAQ/P,CAAR+P,IAA2B/P,QAAa,IAAb,EAC3BE,SAD2B,CAA3B6P,IACc,IAClBA;QAAAA,WAAe,KAAK,CACpB;QAAA,OAAOA,CATW;MAAA;MADlB9Q,EAAUib,CAAV,EAAsBla,CAAtB,CAsBJka;MAAAA,uBAAgCC,YAAY;QACxC,OAAO,2BACH,EADG,GACEF,QAAoB,IAApB,EAA0B/Z,SAA1B,CAF+B;MAAA,CAI5C;MAAA,OAAOga,CA3BuC;IAAA,CAAlBA,CA4B9BF,CA5B8BE,CAxC2F;EAAA,CAA/H,CA6EAthB;EAAAA,EAAgBQ,CAAhB,EAA0B,6BAA1B,EAAyD,CAACA,EAAS,iBAAT,CAAD,EAA8BA,EAAS,4BAAT,CAA9B,EAAsEA,EAAS,+BAAT,CAAtE,EAAiHA,EAAS,mBAAT,CAAjH,CAAzD,EAA0M,UAAUC,CAAD,EAAI6gB,CAAJ,EAAgBlE,CAAhB,EAAgC1c,CAAhC,EAAmC;IAYlP,IAAI2F,IAAa,IAAbA,IAAqB,cAArBA,IAAyC,YAAY;QACjD,IAAIC,IAAgBA,UAAUC,CAAD,EACjCvE,CADiC,EAC9B;UACKsE,IAAgBE,qBAAhB,IACK;YAAEC,WAAW;UAAb,CADL,YACkCC,KADlC,IAC2C,UAAUH,CAAD,EAC5DvE,CAD4D,EACzD;YAAEuE,cAAcvE,CAAhB;UAAA,CAFK,IAGI,UAAUuE,CAAD,EACrBvE,CADqB,EAClB;YAAE,KAAK2E,IAAIA,CAAT,IAAc3E,CAAd,EAAqBA,iBAAiB2E,CAAjB,CAAJ,KAAyBJ,EAAEI,CAAF,CAAzB,GAAgC3E,EAAE2E,CAAF,CAAhC,CAAnB;UAAA,CACC;iBAAOL,EAAcC,CAAd,EAAiBvE,CAAjB,CANR;QAAA,CAQH;QAAA,OAAO,UAAUuE,CAAD,EAAIvE,CAAJ,EAAO;UAEnB4E,SAASA,CAAE,GAAG;YAAE,mBAAmBL,CAArB;UAAA;UADdD,EAAcC,CAAd,EAAiBvE,CAAjB,CAEAuE;UAAAA,cAAoB,IAAN,SAAaC,cAAcxE,CAAd,CAAb,IAAiC4E,cAAe5E,WAAf,EAA4B,IAAI4E,CAAjE,GAHK;QAAA,CAV8B;MAAA,CAAb,EAA5C;MAgBIlF,IAAUjB,SAhBd;MAiBI2e,IAAM3e,KAENsG;IAAAA,IAASrG,QAAb;IAAA,IACIQ,IAAOR,MAMP8gB;IAAAA,IAA6B,UAAUpa,CAAD,EAAS;MAE/Coa,SAASA,CAAW,GAAG;QACnB,OAAkB,IAAlB,KAAOpa,CAAP,IAA0BA,QAAa,IAAb,EAAmBE,SAAnB,CAA1B,IAA2D,IADxC;MAAA;MADnBjB,EAAUmb,CAAV,EAAuBpa,CAAvB,CAaJoa;MAAAA,uBAAiCC,YAAY;QACzCra,2BAAgC,IAAhC,EAAsCE,SAAtC,CACI;QAAA,iBAAJ,IAEI,YAAY,gBAAZ,EAA8B,EAA9B,CAJqC;MAAA,CAU7Cka;MAAAA,sBAAgCE,UAAU7B,CAAD,EAAO;QAC5C,IAAK,iBAAL,EAGK;UAAA,IACGnT,IAAY,sBAEZiV;UAAAA,QAAS,WAHZ;cAIGrW,IAAQ,UAJX;YAKGyS,IAAc,gBACdqB;UAAAA,CAAJ,KACsB,EAIlB,KAJI1S,CAIJ,KAHIA,CAGJ,GAHgB,EAGhB,GAAImT,CAAJ,IAEIvU,eASA,GATsBpK,EAAKoK,eAAL,EAA0BA,YAA1B,CAStB,EARAA,eAQA,GARsBpK,EAAKoK,eAAL,EAA0BA,YAA1B,CAQtB,EAPAhH,CAOA,GAPU;YACN0Z,YAAY2D,EAAO,CAAP,CADN;YAEN1D,YAAY0D,EAAO,CAAP,CAFN;YAGNC,QAAQ,IAHF;YAINC,QAAQ;UAJF,CAOV,EADAvW,OAAWhH,CAAX,CACA,EAAIyZ,CAAJ,KACIA,aACA,GAD0BzS,aAC1B,SAAiBhH,CAAjB,CAFJ,CAXJ,KAkBIA,CAOA,GAPU;YACN0Z,YAAY1S,eADN;YAEN2S,YAAY3S,eAFN;YAGNsW,QAAQ,CAHF;YAINC,QAAQ;UAJF,CAOV,EADAvW,UAAchH,CAAd,EAAuBoI,CAAvB,CACA,EAAIqR,CAAJ,IACIA,UAAoBzZ,CAApB,EAA6BoI,CAA7B,CA1BR,CALJ,CANC;QAAA,CAHL,MACItF,0BAA+B,IAA/B,EAAqCE,SAArC,CAFwC;MAAA,CAkDhDka;MAAAA,6BAAuCM,YAAY;QAC/C,IAAI,iBAAJ,EAAuB;UACnB,IAEIC,IAFS9O,IACDpS,MACMoP,wBAFLgD;cAGb6J,cAAoB,UAAU/a,CAAD,EAAQ;YAAA,IAC7B0H,IAAY1H,WADiB;cAE7BoL,IAAI1D,GAFyB;cAM7BwF,KAAOxF,OAAPwF,GAAyBxF,KAAzBwF,IAA0C,CAC1C+S;YAAAA,IAAgBjgB,eAPa;YAAA,IAQ7BkgB,IAAqBD,mBARQ;cAS7BE,IAAW,CAAC/U,CAAZ+U,IAAiB,CAAjBA,GAAqB5e,UALdmG,OAKc,IALKsY,OAKL,IAL0BrgB,CAK1B,CAArBwgB,IAAqC5e,SAAS2L,CAAT,CATR;cAU7B2R,IAAUzT,CAAVyT,IAAetd,UALRmG,MAKQ,IALUsY,MAKV,IAL8BrgB,CAK9B,CAAfkf,GAA8B,CAA9BA,IAAmCtd,SAAS2L,CAAT,CAEvC;YAAA,CACI+S,SADJ,EAEIC,SAFJ,EAGIA,iBAHJ,UAIU,UAAU9e,CAAD,EAAc;cAC7BA,OAAiByd,CACjBzd;cAAAA,OAAiB+e,CAFY;YAAA,CAJjC,CAZiC;UAAA,CAArC,CAJmB;QAAA;QA0BvB9a,iCAAsC,IAAtC,EAA4CE,SAA5C,CA3B+C;MAAA,CAgCnDka;MAAAA,2BAAqCW,UAAUpgB,CAAD,EAAQ;QAAA,IAC9C0D,IAAO2B,+BAAoC,IAApC,EACPE,SADO,CADuC;UAG9C2I,IAAU,YACV;QAAA,iBAAJ,IAAyB,CAAC,qBAA1B,KACIxK,QACA,GADcwK,WACd,IADmClO,OACnC,IADkD,UAClD,IAAK,cAAL,IAAuBb,EAAK+O,WAAL,EAAwB,CAAxB,CAF3B,CAIA;QAAA,OAAOxK,CAR2C;MAAA,CAatD+b;MAAAA,wBAAkCY,YAAY;QAC1Chb,4BAAiC,IAAjC,EAAuCE,SAAvC,CAEA;QAAA,IAAK,iBAAL;UAH0C,IAMtC2L,IAAS,IAN6B;YAOtCsJ,IAAgBtJ,SAPsB;YAQtC5F,IAAQkP,OAARlP,IAA+B,CARO;YAStCrM,IAAYiS,+BAT0B;YAUtCtR,IAAQX,OAV8B;YAWtCS,IAAOT,MAX+B;YAYtCM,IAAIib,cACCA,OADD,IACwB,CADxB,IAC6BlP,CAD7B,GAEA4F,IAFA,GAEY5F,CACpB/L;UAAAA,KAAK+L,CAAL,GAAa,CACkB;UAAA,EAA/B,KAAIkP,UAAJ,KACIjb,CADJ,GACQ,CADR,CAGA2R;UAAAA,eAAoB,UAAUlR,CAAD,EAAQ;YAAA,IAC7B0H,IAAY1H,WAEhBA;YAAAA,cAAkB,OAClB0H;YAAAA,MAAcnI,CACdmI;YAAAA,UAA0B,GAA1B,GAAkB4D,CAClB5D;YAAAA,UAAkB9H,CAClB8H;YAAAA,SAAiBhI,CACjBgI;YAAAA,WAAmBwJ,QACnBrF;YAAAA,KAASnE,KAAT,GAAyBA,OAAzB,IAA4C,CAC5C1H;YAAAA,sBAA0B;cACtBic,YAAY1a,WAAWA,SAASsK,CAAT,CAAX,GACR2O,cADQ,GAERjZ,SAAS3B,CAAT,GAAiBD,CAAjB,CAFQ,CADU;cAItBuc,YAAY3a,WAAWA,SAASsK,CAAT,CAAX,GACR2O,cADQ,GAERjZ,SAAS3B,CAAT,GAAiBD,CAAjB,CAFQ;YAJU,CAVO;UAAA,CAArC,CAhBA;QAAA;MAH0C,CA0C9C8f;MAAAA,0BAAoCa,YAAY;QAC5Cjb,8BAAmC,IAAnC,EAAyCE,SAAzC,CAEK;QAAA,iBAAL,IAGA,oBAAoB,UAAUvF,CAAD,EAAQ;UAC7BA,SAAJ,IACI,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,OAAxB,UAAyC,UAAUiK,CAAD,EAAO;YACjDjK,SAAJ,KACIA,UAAciK,CAAd,eADJ,GACwCjK,CADxC,CADqD;UAAA,CAAzD,CAF6B;QAAA,CAArC,CAN4C;MAAA,CAgBhD;MAAA,OAAOyf,CAjLwC;IAAA,CAAlB,CARjBpE,iBAQiB,CAmLjCrW;IAAAA,EAAOya,WAAP,EAA8B;MAC1Bc,YAAYhB;IADc,CAA9B,CAuBA;IAAA,EAEA;IAAA,OAAOE,CAlP2O;EAAA,CAAtP,CAoPAxhB;EAAAA,EAAgBQ,CAAhB,EAA0B,kCAA1B,EAA8D,CAACA,EAAS,4BAAT,CAAD,EAAyCA,EAAS,6BAAT,CAAzC,EAAkFA,EAAS,+BAAT,CAAlF,CAA9D,EAA4L,UAAU8gB,CAAD,EAAaE,CAAb,EAA0BpE,CAA1B,EAA0C;IAsB3OA,4DACgBkE,oBAChBlE;IAAAA,oBAAiCoE,CAxB0M;EAAA,CAA/O,CA2BAxhB;EAAAA,EAAgBQ,CAAhB,EAA0B,oCAA1B,EAAgE,CAACA,EAAS,iCAAT,CAAD,EAA8CA,EAAS,mBAAT,CAA9C,CAAhE,EAA8I,UAAU+hB,CAAD,EAAgB7hB,CAAhB,EAAmB;IAYtK,IAAI2F,IAAa,IAAbA,IAAqB,cAArBA,IAAyC,YAAY;QACjD,IAAIC,IAAgBA,UAAUC,CAAD,EACjCvE,CADiC,EAC9B;UACKsE,IAAgBE,qBAAhB,IACK;YAAEC,WAAW;UAAb,CADL,YACkCC,KADlC,IAC2C,UAAUH,CAAD,EAC5DvE,CAD4D,EACzD;YAAEuE,cAAcvE,CAAhB;UAAA,CAFK,IAGI,UAAUuE,CAAD,EACrBvE,CADqB,EAClB;YAAE,KAAK2E,IAAIA,CAAT,IAAc3E,CAAd,EAAqBA,iBAAiB2E,CAAjB,CAAJ,KAAyBJ,EAAEI,CAAF,CAAzB,GAAgC3E,EAAE2E,CAAF,CAAhC,CAAnB;UAAA,CACC;UAAA,OAAOL,EAAcC,CAAd,EAAiBvE,CAAjB,CANR;QAAA,CAQH;QAAA,OAAO,UAAUuE,CAAD,EAAIvE,CAAJ,EAAO;UAEnB4E,SAASA,CAAE,GAAG;YAAE,mBAAmBL,CAArB;UAAA;UADdD,EAAcC,CAAd,EAAiBvE,CAAjB,CAEAuE;UAAAA,cAAoB,IAAN,SAAaC,cAAcxE,CAAd,CAAb,IAAiC4E,cAAe5E,WAAf,EAA4B,IAAI4E,CAAjE,GAHK;QAAA,CAV8B;MAAA,CAAb,EAA5C;MAgBIjD,IAAUjD,SAwCd;IAAA,OAlCoC,UAAU0G,CAAD,EAAS;MAElDob,SAASA,CAAc,GAAG;QAMtB,IAAIrL,IAAmB,IAAnBA,KAAQ/P,CAAR+P,IAA2B/P,QAAa,IAAb,EAC3BE,SAD2B,CAA3B6P,IACc,IAClBA;QAAAA,YAAgB,KAAK,CACrBA;QAAAA,WAAe,KAAK,CACpB;QAAA,OAAOA,CAVe;MAAA;MADtB9Q,EAAUmc,CAAV,EAA0Bpb,CAA1B,CAkBJob;MAAAA,2BAAwCC,YAAY;QAChDrb,+BAAoC,IAApC,EAA0CE,SAA1C,CACK3D;QAAAA,EAAQ,MAAR,CAAL,KACI,MADJ,GACa,CADb,CAGA;QAAA,OAAO,IALyC;MAAA,CAOpD;MAAA,OAAO6e,CA1B2C;IAAA,CAAlBA,CA2BlCD,sBA3BkCC,CAlCkI;EAAA,CAA1K,CAsEAxiB;EAAAA,EAAgBQ,CAAhB,EAA0B,qCAA1B,EAAiE,CAACA,EAAS,gBAAT,CAAD,EAA6BA,EAAS,oCAAT,CAA7B,EAA6EA,EAAS,iCAAT,CAA7E,EAA0HA,EAAS,+BAAT,CAA1H,EAAqKA,EAAS,mBAAT,CAArK,CAAjE,EAAsQ,UAAUyC,CAAD,EAASuf,CAAT,EAAyBD,CAAzB,EAAwCnF,CAAxC,EAAwD1c,CAAxD,EAA2D;IAYtU,IAAI2F,IAAa,IAAbA,IAAqB,cAArBA,IAAyC,YAAY;QACjD,IAAIC,IAAgBA,UAAUC,CAAD,EACjCvE,CADiC,EAC9B;UACKsE,IAAgBE,qBAAhB,IACK;YAAEC,WAAW;UAAb,CADL,YACkCC,KADlC,IAC2C,UAAUH,CAAD,EAC5DvE,CAD4D,EACzD;YAAEuE,cAAcvE,CAAhB;UAAA,CAFK,IAGI,UAAUuE,CAAD,EACrBvE,CADqB,EAClB;YAAE,KAAK2E,IAAIA,CAAT,IAAc3E,CAAd,EAAqBA,iBAAiB2E,CAAjB,CAAJ,KAAyBJ,EAAEI,CAAF,CAAzB,GAAgC3E,EAAE2E,CAAF,CAAhC,CAAnB;UAAA,CACC;UAAA,OAAOL,EAAcC,CAAd,EAAiBvE,CAAjB,CANR;QAAA,CAQH;QAAA,OAAO,UAAUuE,CAAD,EAAIvE,CAAJ,EAAO;UAEnB4E,SAASA,CAAE,GAAG;YAAE,mBAAmBL,CAArB;UAAA;UADdD,EAAcC,CAAd,EAAiBvE,CAAjB,CAEAuE;UAAAA,cAAoB,IAAN,SAAaC,cAAcxE,CAAd,CAAb,IAAiC4E,cAAe5E,WAAf,EAA4B,IAAI4E,CAAjE,GAHK;QAAA,CAV8B;MAAA,CAAb,EAA5C;MAgBI1D,IAAsBD,qBACtB8D;IAAAA,IAASrG,QAAb;QACIkD,IAAQlD,OAaRgiB;IAAAA,IAAiC,UAAUtb,CAAD,EAAS;MAEnDsb,SAASA,CAAe,GAAG;QAMvB,IAAIvL,IAAmB,IAAnBA,KAAQ/P,CAAR+P,IAA2B/P,QAAa,IAAb,EAC3BE,SAD2B,CAA3B6P,IACc,IAMlBA;QAAAA,SAAa,KAAK,CAClBA;QAAAA,YAAgB,KAAK,CACrBA;QAAAA,WAAe,KAAK,CACpB;QAAA,OAAOA,CAhBgB;MAAA;MADvB9Q,EAAUqc,CAAV,EAA2Btb,CAA3B,CAwBJsb;MAAAA,2BAAyCC,UAAU5gB,CAAD,EAAQ;QACtD,IAAIuC,IAAU8C,+BAAoC,IAApC,EACVE,SADU,CAEV;QAAA,iBAAJ,IAAyBvF,CAAzB,KACIuC,QADJ,GAEQpB,EAAoBnB,CAApB,EAA2B,UAA3B,CAFR,CAIA;QAAA,OAAOuC,CAP+C;MAAA,CAwB1Doe;MAAAA,mBAAiC9e,EAAM2e,gBAAN,EAAoC;QACjEK,SAAS;UACLC,aAAa;QADR;MADwD,CAApC,CAKjC;MAAA,OAAOH,CAtD4C;IAAA,CAAlB,CAuDnCH,CAvDmC,CAwDrCxb;IAAAA,EAAO2b,WAAP,EAAkC;MAC9BI,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CADmB;MAK9BC,aAAa,EALiB;MAM9BC,gBAAgB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CANc;MAO9BC,eAAe,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAPe;MAQ9BX,YAAYE;IARkB,CAAlC,CAUApF;IAAAA,qBAAkC,WAAlC,EAA+CsF,CAA/C,CAoFA;IAAA,EAEA;IAAA,OAAOA,CAnM+T;EAAA,CAA1U,CAqMA1iB;EAAAA,EAAgBQ,CAAhB,EAA0B,8BAA1B,EAA0D,CAACA,EAAS,iBAAT,CAAD,EAA8BA,EAAS,oCAAT,CAA9B,EAA8EA,EAAS,uBAAT,CAA9E,EAAiHA,EAAS,oBAAT,CAAjH,EAAiJA,EAAS,gCAAT,CAAjJ,EAA6LA,EAAS,+BAAT,CAA7L,CAA1D,EAAmS,UAAUV,CAAD,EAAauH,CAAb,EAA4BwI,CAA5B,EAAqCoH,CAArC,EAA4CiM,CAA5C,EAA+D9E,CAA/D,EAA6E;IAIrX/W,UAFQvH,CAEcsG,YAAtB,CACAyJ;IAAAA,UAHQ/P,CAGQqjB,MAAhB,EAHQrjB,CAGiBsjB,GAAzB,CACAnM;IAAAA,UAJQnX,CAIMqjB,MAAd,CACAD;IAAAA,UALQpjB,CAKkBiX,KAA1B,EALQjX,CAK0BujB,KAAlC,CACAjF;IAAAA,UANQte,CAMawjB,iBAArB,CARqX;EAAA,CAAzX,CA72KoB;AAAA,CAbvB","names":["factory","module","define","Highcharts","undefined","_registerModule","obj","path","args","fn","CustomEvent","window","detail","_modules","H","U","perspective","points","chart","insidePlotArea","useInvertedPersp","options3d","inverted","pick","origin","x","y","z","vd","scale","beta","deg2rad","alpha","t","C","n","point","b","f","cosB","sinB","sinA","cosA","coordinate","perspective3D","rotated","distance","projection","Number","shapeArea","vertexes","area","i","j","Math3D","pointCameraDistance","coordinates","c","k","Math","shapeArea3D","Color","SVGElement","color","defined","merge","objectEach","SVGElement3D","base","initArgs","elem3d","renderer","paths","zIndexes","part","attribs","zIndex","singleSetterForParts","prop","val","values","verb","duration","complete","newAttr","optionsToApply","hasZIndexes","partVal","processParts","props","partsProps","destroyParts","parts","pathType","attr","continueAnimation","key","animate","forcedSides","fillSetter","fill","front","top","side","A","SVGRenderer","__extends","extendStatics","d","Object","__proto__","Array","p","__","animObject","charts","extend","cos","sin","PI","dFactor","_super","SVGRenderer3D","arguments","SVGRenderer3D.compose","SVGRendererClass","svgRendererProto","svgRenderer3dProto","SVGRenderer3D.curveTo","cx","cy","rx","ry","start","end","dx","dy","result","arcAngle","SVGRenderer3D.prototype.toLinePath","closed","SVGRenderer3D.prototype.toLineSegments","m","SVGRenderer3D.prototype.face3d","ret","ret.attr","hash","vertexes2d","ret.animate","params","visibility","SVGRenderer3D.prototype.polyhedron","destroy","result.destroy","result.attr","result.animate","SVGRenderer3D.prototype.element3d","type","shapeArgs","SVGRenderer3D.prototype.cuboid","SVGRenderer3D.prototype.cuboidPath","mapSidePath","h","pArr","mapPath","w","pickShape","verticesIndex1","verticesIndex2","face1","face2","dummyFace1","dummyFace2","back","path1","shape","bottom","path2","right","left","path3","isRight","incrementX","incrementY","isTop","isFront","incrementZ","group","SVGRenderer3D.prototype.arc3d","suckOutCustom","hasCA","ca","customAttribs","wrapper","wrapper.onAdd","parent","className","face","wrapper.setPaths","wrapper.fillSetter","value","darker","setter","el","wrapper.attr","paramArr","wrapper.animate","animation","from","randomProp","anim","anim.step","a","fx","interpolate","to","r","innerR","depth","wrapper.destroy","wrapper.hide","wrapper.show","inherit","SVGRenderer3D.prototype.arc3dPath","toZeroPIRange","angle","ir","cs","ss","ce","se","irx","iry","start2","end2","midEnd","out","inn","side1","side2","angleCorr","angleEnd","angleStart","angleMid","a1","incPrecision","a2","a3","zTop","zOut","zInn","zSide1","zSide2","D","genericDefaultOptions","addEvent","isArray","wrap","Chart3D","onAddSeries","e","onAfterDrawChartBox","options","frame","chart3d","xm","plotLeft","xp","plotWidth","ym","plotTop","yp","plotHeight","zp","xmm","xpp","ymm","ypp","zmm","zm","zpp","hasRendered","frameShapes","faces","enabled","onAfterGetContainer","name","slope","cfg","tagName","attributes","id","children","onAfterInit","forEach","s","onAfterSetChartSize","is3d","clipBox","margin","chartWidth","chartHeight","scale3d","onBeforeRedraw","onBeforeRender","onInit","Composition","wrapIsInsidePlot","proceed","wrapRenderSeries","series","wrapSetClassName","Composition.prototype.get3dFrame","frameOptions","faceOrientation","bottomOrientation","topOrientation","leftOrientation","rightOrientation","frontOrientation","backOrientation","defaultShowBottom","defaultShowTop","defaultShowLeft","defaultShowRight","axis","getFaceOptions","sources","defaultVisible","faceAttrs","isVisible","size","frontFacing","visible","axes","defaultShowBack","defaultShowFront","isValidEdge","yEdges","xDir","xBottomEdges","xTopEdges","zBottomEdges","zTopEdges","pickEdge","edges","mult","projections","best","Composition.prototype.getScale","plotRight","plotBottom","originX","originY","MAX_VALUE","corners","corner","minX","maxX","minY","maxY","fitToPlot","viewDistance","axisLabelPosition","compose","ChartClass","FxClass","chartProto","fxProto","chartProto.is3d","fxProto.matrixSetter","interpolated","Axis","chartAddZAxis","ZAxis","onChartAfterGetAxes","_this","zAxisOptions","splat","axisOptions","composedClasses","userOptions","ZAxis.compose","ZAxis.prototype.getSeriesExtremes","zData","ZAxis.prototype.setAxisSize","ZAxis.prototype.setOptions","offset","lineWidth","Axis3DDefaults","labels","position3d","skew3d","title","onTickAfterGetLabelPosition","axis3D","wrapTickGetMarkPath","Tick3DAdditions","TickClass","Tick3D","onAxisAfterSetOptions","coll","onAxisDrawCrosshair","isXAxis","len","onAxisInit","Axis3DAdditions","wrapAxisGetLinePath","wrapAxisGetPlotBandPath","fromPath","toPath","fromStartSeg","fromEndSeg","toStartSeg","toEndSeg","wrapAxisGetPlotLinePath","isZAxis","startSegment","endSegment","pathSegments","wrapAxisGetSlotWidth","tick","ticks","gridGroup","categories","firstGridLine","frame3DLeft","origin_1","tickId","prevTick","nextTick","nextLabelPos","prevLabelPos","labelPos","wrapAxisGetTitlePosition","pos","Axis3DAdditions.compose","AxisClass","axisProto","Axis3DAdditions.prototype.fix3dPosition","isTitle","positionMode","skew","offsetY","offsetX","vecY","reverseFlap","vecX","cosa","sinb","sina","cosb","projected","pointsProjected","Axis3DAdditions.prototype.swapZ","Series","isNumber","Series3D","Series3D.prototype.translate","Series3D.prototype.translate3dPoints","seriesOptions","zAxis","rawPoints","rawPointsX","zPadding","stack","index","data","rawPoint","zValue","projectedPoints","projectedPoint","translate3dPoints","SeriesRegistry","wrapAreaSeriesGetGraphPath","svgPath","getGraphPath","lineProto","translatedThreshold","yAxis","bottomPoints","plotX","plotY","plotZ","markerGroup","translateX","translateY","bottomPath","areaPath","Area3DSeries","AreaSeriesClass","ColumnSeries","StackItem","retrieveStacks","stacking","stacks","totalStacks","stackNumber","position","pointAttribs","setState","state","hasNewShapeType","_i","columnProto","svg","columnProto.translate3dPoints","columnProto.translate3dShapes","borderCrisp","point2dPos","shapeArgs_1","tooltipPos","borderlessBase_1","dimensions","init","yAxis_1","series_1","reversed_1","graphic","_name","_visibility","_zIndex","vis","grouping","reversedStacks","columnRangeProto","dataLabel","alignTo","inside","xOffset","dLPosition","stackItem","xWidth","stackBox","baseSeriesInd","split","columnSeries","PiePoint","superHaloPath","Pie3DPoint","Pie3DPoint.prototype.haloPath","Pie3DSeries","Pie3DSeries.prototype.addPoint","Pie3DSeries.prototype.animate","center","scaleX","scaleY","Pie3DSeries.prototype.drawDataLabels","options3d_1","labelPosition","connectorPosition","yOffset","Pie3DSeries.prototype.pointAttribs","Pie3DSeries.prototype.translate","Pie3DSeries.prototype.drawTracker","pointClass","ScatterSeries","Scatter3DPoint","Scatter3DPoint.prototype.applyOptions","Scatter3DSeries","Scatter3DSeries.prototype.pointAttribs","tooltip","pointFormat","axisTypes","directTouch","parallelArrays","pointArrayMap","Axis3DComposition","Chart","Fx","Tick","seriesTypes"],"sources":["/home/sonu/opayl/html/frontend/node_modules/highcharts/highcharts-3d.src.js"],"sourcesContent":["/**\n * @license Highcharts JS v10.3.1 (2022-10-31)\n *\n * 3D features for Highcharts JS\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/highcharts-3d', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(\n                    new CustomEvent(\n                        'HighchartsModuleLoaded',\n                        { detail: { path: path, module: obj[path] }\n                    })\n                );\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Math3D.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var deg2rad = H.deg2rad;\n        var pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable max-len */\n        /**\n         * Apply 3-D rotation\n         * Euler Angles (XYZ):\n         *     cosA = cos(Alfa|Roll)\n         *     cosB = cos(Beta|Pitch)\n         *     cosG = cos(Gamma|Yaw)\n         *\n         * Composite rotation:\n         * |          cosB * cosG             |           cosB * sinG            |    -sinB    |\n         * | sinA * sinB * cosG - cosA * sinG | sinA * sinB * sinG + cosA * cosG | sinA * cosB |\n         * | cosA * sinB * cosG + sinA * sinG | cosA * sinB * sinG - sinA * cosG | cosA * cosB |\n         *\n         * Now, Gamma/Yaw is not used (angle=0), so we assume cosG = 1 and sinG = 0, so\n         * we get:\n         * |     cosB    |   0    |   - sinB    |\n         * | sinA * sinB |  cosA  | sinA * cosB |\n         * | cosA * sinB | - sinA | cosA * cosB |\n         *\n         * But in browsers, y is reversed, so we get sinA => -sinA. The general result\n         * is:\n         * |      cosB     |   0    |    - sinB     |     | x |     | px |\n         * | - sinA * sinB |  cosA  | - sinA * cosB |  x  | y |  =  | py |\n         * |  cosA * sinB  |  sinA  |  cosA * cosB  |     | z |     | pz |\n         *\n         * @private\n         * @function rotate3D\n         */\n        /* eslint-enable max-len */\n        /**\n         * Rotates the position as defined in angles.\n         * @private\n         * @param {number} x\n         *        X coordinate\n         * @param {number} y\n         *        Y coordinate\n         * @param {number} z\n         *        Z coordinate\n         * @param {Highcharts.Rotation3DObject} angles\n         *        Rotation angles\n         * @return {Highcharts.Position3DObject}\n         *         Rotated position\n         */\n        function rotate3D(x, y, z, angles) {\n            return {\n                x: angles.cosB * x - angles.sinB * z,\n                y: -angles.sinA * angles.sinB * x + angles.cosA * y -\n                    angles.cosB * angles.sinA * z,\n                z: angles.cosA * angles.sinB * x + angles.sinA * y +\n                    angles.cosA * angles.cosB * z\n            };\n        }\n        /**\n         * Transforms a given array of points according to the angles in chart.options.\n         *\n         * @private\n         * @function Highcharts.perspective\n         *\n         * @param {Array<Highcharts.Position3DObject>} points\n         * The array of points\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @param {boolean} [useInvertedPersp]\n         * Whether to use inverted perspective in calculations\n         *\n         * @return {Array<Highcharts.Position3DObject>}\n         * An array of transformed points\n         *\n         * @requires highcharts-3d\n         */\n        function perspective(points, chart, insidePlotArea, useInvertedPersp) {\n            var options3d = chart.options.chart.options3d, \n                /* The useInvertedPersp argument is used for inverted charts with\n                 * already inverted elements,\n                such as dataLabels or tooltip positions.\n                 */\n                inverted = pick(useInvertedPersp,\n                insidePlotArea ? chart.inverted : false),\n                origin = {\n                    x: chart.plotWidth / 2,\n                    y: chart.plotHeight / 2,\n                    z: options3d.depth / 2,\n                    vd: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0)\n                },\n                scale = chart.scale3d || 1,\n                beta = deg2rad * options3d.beta * (inverted ? -1 : 1),\n                alpha = deg2rad * options3d.alpha * (inverted ? -1 : 1),\n                angles = {\n                    cosA: Math.cos(alpha),\n                    cosB: Math.cos(-beta),\n                    sinA: Math.sin(alpha),\n                    sinB: Math.sin(-beta)\n                };\n            if (!insidePlotArea) {\n                origin.x += chart.plotLeft;\n                origin.y += chart.plotTop;\n            }\n            // Transform each point\n            return points.map(function (point) {\n                var rotated = rotate3D((inverted ? point.y : point.x) - origin.x, (inverted ? point.x : point.y) - origin.y, (point.z || 0) - origin.z,\n                    angles), \n                    // Apply perspective\n                    coordinate = perspective3D(rotated,\n                    origin,\n                    origin.vd);\n                // Apply translation\n                coordinate.x = coordinate.x * scale + origin.x;\n                coordinate.y = coordinate.y * scale + origin.y;\n                coordinate.z = rotated.z * scale + origin.z;\n                return {\n                    x: (inverted ? coordinate.y : coordinate.x),\n                    y: (inverted ? coordinate.x : coordinate.y),\n                    z: coordinate.z\n                };\n            });\n        }\n        /**\n         * Perspective3D function is available in global Highcharts scope because is\n         * needed also outside of perspective() function (#8042).\n         * @private\n         * @function Highcharts.perspective3D\n         *\n         * @param {Highcharts.Position3DObject} coordinate\n         * 3D position\n         *\n         * @param {Highcharts.Position3DObject} origin\n         * 3D root position\n         *\n         * @param {number} distance\n         * Perspective distance\n         *\n         * @return {Highcharts.PositionObject}\n         * Perspective 3D Position\n         *\n         * @requires highcharts-3d\n         */\n        function perspective3D(coordinate, origin, distance) {\n            var projection = ((distance > 0) &&\n                    (distance < Number.POSITIVE_INFINITY)) ?\n                    distance / (coordinate.z + origin.z + distance) :\n                    1;\n            return {\n                x: coordinate.x * projection,\n                y: coordinate.y * projection\n            };\n        }\n        /**\n         * Calculate a distance from camera to points - made for calculating zIndex of\n         * scatter points.\n         *\n         * @private\n         * @function Highcharts.pointCameraDistance\n         *\n         * @param {Highcharts.Dictionary<number>} coordinates\n         * Coordinates of the specific point\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @return {number}\n         * Distance from camera to point\n         *\n         * @requires highcharts-3d\n         */\n        function pointCameraDistance(coordinates, chart) {\n            var options3d = chart.options.chart.options3d,\n                cameraPosition = {\n                    x: chart.plotWidth / 2,\n                    y: chart.plotHeight / 2,\n                    z: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0) +\n                        options3d.depth\n                }, \n                // Added support for objects with plotX or x coordinates.\n                distance = Math.sqrt(Math.pow(cameraPosition.x - pick(coordinates.plotX,\n                coordinates.x), 2) +\n                    Math.pow(cameraPosition.y - pick(coordinates.plotY,\n                coordinates.y), 2) +\n                    Math.pow(cameraPosition.z - pick(coordinates.plotZ,\n                coordinates.z), 2));\n            return distance;\n        }\n        /**\n         * Calculate area of a 2D polygon using Shoelace algorithm\n         * https://en.wikipedia.org/wiki/Shoelace_formula\n         *\n         * @private\n         * @function Highcharts.shapeArea\n         *\n         * @param {Array<Highcharts.PositionObject>} vertexes\n         * 2D Polygon\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea(vertexes) {\n            var area = 0,\n                i,\n                j;\n            for (i = 0; i < vertexes.length; i++) {\n                j = (i + 1) % vertexes.length;\n                area += vertexes[i].x * vertexes[j].y - vertexes[j].x * vertexes[i].y;\n            }\n            return area / 2;\n        }\n        /**\n         * Calculate area of a 3D polygon after perspective projection\n         *\n         * @private\n         * @function Highcharts.shapeArea3d\n         *\n         * @param {Array<Highcharts.Position3DObject>} vertexes\n         * 3D Polygon\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea3D(vertexes, chart, insidePlotArea) {\n            return shapeArea(perspective(vertexes, chart, insidePlotArea));\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Math3D = {\n                perspective: perspective,\n                perspective3D: perspective3D,\n                pointCameraDistance: pointCameraDistance,\n                shapeArea: shapeArea,\n                shapeArea3D: shapeArea3D\n            };\n\n        return Math3D;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGElement3D.js', [_modules['Core/Color/Color.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Color, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var defined = U.defined,\n            merge = U.merge,\n            objectEach = U.objectEach,\n            pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var SVGElement3D = {};\n        SVGElement3D.base = {\n            /* eslint-disable valid-jsdoc */\n            /**\n             * The init is used by base - renderer.Element\n             * @private\n             */\n            initArgs: function (args) {\n                var elem3d = this,\n                    renderer = elem3d.renderer,\n                    paths = renderer[elem3d.pathType + 'Path'](args),\n                    zIndexes = paths.zIndexes;\n                // build parts\n                elem3d.parts.forEach(function (part) {\n                    var attribs = {\n                            'class': 'highcharts-3d-' + part,\n                            zIndex: zIndexes[part] || 0\n                        };\n                    if (renderer.styledMode) {\n                        if (part === 'top') {\n                            attribs.filter = 'url(#highcharts-brighter)';\n                        }\n                        else if (part === 'side') {\n                            attribs.filter = 'url(#highcharts-darker)';\n                        }\n                    }\n                    elem3d[part] = renderer.path(paths[part])\n                        .attr(attribs)\n                        .add(elem3d);\n                });\n                elem3d.attr({\n                    'stroke-linejoin': 'round',\n                    zIndex: zIndexes.group\n                });\n                // store original destroy\n                elem3d.originalDestroy = elem3d.destroy;\n                elem3d.destroy = elem3d.destroyParts;\n                // Store information if any side of element was rendered by force.\n                elem3d.forcedSides = paths.forcedSides;\n            },\n            /**\n             * Single property setter that applies options to each part\n             * @private\n             */\n            singleSetterForParts: function (prop, val, values, verb, duration, complete) {\n                var elem3d = this,\n                    newAttr = {},\n                    optionsToApply = [null,\n                    null, (verb || 'attr'),\n                    duration,\n                    complete],\n                    hasZIndexes = values && values.zIndexes;\n                if (!values) {\n                    newAttr[prop] = val;\n                    optionsToApply[0] = newAttr;\n                }\n                else {\n                    // It is needed to deal with the whole group zIndexing\n                    // in case of graph rotation\n                    if (hasZIndexes && hasZIndexes.group) {\n                        this.attr({\n                            zIndex: hasZIndexes.group\n                        });\n                    }\n                    objectEach(values, function (partVal, part) {\n                        newAttr[part] = {};\n                        newAttr[part][prop] = partVal;\n                        // include zIndexes if provided\n                        if (hasZIndexes) {\n                            newAttr[part].zIndex = values.zIndexes[part] || 0;\n                        }\n                    });\n                    optionsToApply[1] = newAttr;\n                }\n                return elem3d.processParts.apply(elem3d, optionsToApply);\n            },\n            /**\n             * Calls function for each part. Used for attr, animate and destroy.\n             * @private\n             */\n            processParts: function (props, partsProps, verb, duration, complete) {\n                var elem3d = this;\n                elem3d.parts.forEach(function (part) {\n                    // if different props for different parts\n                    if (partsProps) {\n                        props = pick(partsProps[part], false);\n                    }\n                    // only if something to set, but allow undefined\n                    if (props !== false) {\n                        elem3d[part][verb](props, duration, complete);\n                    }\n                });\n                return elem3d;\n            },\n            /**\n             * Destroy all parts\n             * @private\n             */\n            destroyParts: function () {\n                this.processParts(null, null, 'destroy');\n                return this.originalDestroy();\n            }\n            /* eslint-enable valid-jsdoc */\n        };\n        SVGElement3D.cuboid = merge(SVGElement3D.base, {\n            parts: ['front', 'top', 'side'],\n            pathType: 'cuboid',\n            attr: function (args, val, complete, continueAnimation) {\n                // Resolve setting attributes by string name\n                if (typeof args === 'string' && typeof val !== 'undefined') {\n                    var key = args;\n                    args = {};\n                    args[key] = val;\n                }\n                if (args.shapeArgs || defined(args.x)) {\n                    return this.singleSetterForParts('d', null, this.renderer[this.pathType + 'Path'](args.shapeArgs || args));\n                }\n                return SVGElement.prototype.attr.call(this, args, void 0, complete, continueAnimation);\n            },\n            animate: function (args, duration, complete) {\n                if (defined(args.x) && defined(args.y)) {\n                    var paths = this.renderer[this.pathType + 'Path'](args),\n                        forcedSides = paths.forcedSides;\n                    this.singleSetterForParts('d', null, paths, 'animate', duration, complete);\n                    this.attr({\n                        zIndex: paths.zIndexes.group\n                    });\n                    // If sides that are forced to render changed, recalculate colors.\n                    if (forcedSides !== this.forcedSides) {\n                        this.forcedSides = forcedSides;\n                        if (!this.renderer.styledMode) {\n                            SVGElement3D.cuboid.fillSetter.call(this, this.fill);\n                        }\n                    }\n                }\n                else {\n                    SVGElement.prototype.animate.call(this, args, duration, complete);\n                }\n                return this;\n            },\n            fillSetter: function (fill) {\n                var elem3d = this;\n                elem3d.forcedSides = elem3d.forcedSides || [];\n                elem3d.singleSetterForParts('fill', null, {\n                    front: fill,\n                    // Do not change color if side was forced to render.\n                    top: color(fill).brighten(elem3d.forcedSides.indexOf('top') >= 0 ? 0 : 0.1).get(),\n                    side: color(fill).brighten(elem3d.forcedSides.indexOf('side') >= 0 ? 0 : -0.1).get()\n                });\n                // fill for animation getter (#6776)\n                elem3d.color = elem3d.fill = fill;\n                return elem3d;\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGElement3D;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGRenderer3D.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Color/Color.js'], _modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Renderer/SVG/SVGElement3D.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (A, Color, H, Math3D, SVGElement, SVGElement3D, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var animObject = A.animObject;\n        var color = Color.parse;\n        var charts = H.charts,\n            deg2rad = H.deg2rad;\n        var perspective = Math3D.perspective,\n            shapeArea = Math3D.shapeArea;\n        var defined = U.defined,\n            extend = U.extend,\n            merge = U.merge,\n            pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var cos = Math.cos,\n            sin = Math.sin,\n            PI = Math.PI,\n            dFactor = (4 * (Math.sqrt(2) - 1) / 3) / (PI / 2);\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var SVGRenderer3D = /** @class */ (function (_super) {\n                __extends(SVGRenderer3D, _super);\n            function SVGRenderer3D() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /** @private */\n            SVGRenderer3D.compose = function (SVGRendererClass) {\n                var svgRendererProto = SVGRendererClass.prototype,\n                    svgRenderer3dProto = SVGRenderer3D.prototype;\n                svgRendererProto.elements3d = SVGElement3D;\n                svgRendererProto.arc3d = svgRenderer3dProto.arc3d;\n                svgRendererProto.arc3dPath = svgRenderer3dProto.arc3dPath;\n                svgRendererProto.cuboid = svgRenderer3dProto.cuboid;\n                svgRendererProto.cuboidPath = svgRenderer3dProto.cuboidPath;\n                svgRendererProto.element3d = svgRenderer3dProto.element3d;\n                svgRendererProto.face3d = svgRenderer3dProto.face3d;\n                svgRendererProto.polyhedron = svgRenderer3dProto.polyhedron;\n                svgRendererProto.toLinePath = svgRenderer3dProto.toLinePath;\n                svgRendererProto.toLineSegments = svgRenderer3dProto.toLineSegments;\n            };\n            /**\n             * Method to construct a curved path. Can 'wrap' around more then 180\n             * degrees.\n             * @private\n             */\n            SVGRenderer3D.curveTo = function (cx, cy, rx, ry, start, end, dx, dy) {\n                var result = [],\n                    arcAngle = end - start;\n                if ((end > start) && (end - start > Math.PI / 2 + 0.0001)) {\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start, start + (Math.PI / 2), dx, dy));\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start + (Math.PI / 2), end, dx, dy));\n                    return result;\n                }\n                if ((end < start) && (start - end > Math.PI / 2 + 0.0001)) {\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start, start - (Math.PI / 2), dx, dy));\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start - (Math.PI / 2), end, dx, dy));\n                    return result;\n                }\n                return [[\n                        'C',\n                        cx + (rx * Math.cos(start)) -\n                            ((rx * dFactor * arcAngle) * Math.sin(start)) + dx,\n                        cy + (ry * Math.sin(start)) +\n                            ((ry * dFactor * arcAngle) * Math.cos(start)) + dy,\n                        cx + (rx * Math.cos(end)) +\n                            ((rx * dFactor * arcAngle) * Math.sin(end)) + dx,\n                        cy + (ry * Math.sin(end)) -\n                            ((ry * dFactor * arcAngle) * Math.cos(end)) + dy,\n                        cx + (rx * Math.cos(end)) + dx,\n                        cy + (ry * Math.sin(end)) + dy\n                    ]];\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            SVGRenderer3D.prototype.toLinePath = function (points, closed) {\n                var result = [];\n                // Put \"L x y\" for each point\n                points.forEach(function (point) {\n                    result.push(['L', point.x, point.y]);\n                });\n                if (points.length) {\n                    // Set the first element to M\n                    result[0][0] = 'M';\n                    // If it is a closed line, add Z\n                    if (closed) {\n                        result.push(['Z']);\n                    }\n                }\n                return result;\n            };\n            /** @private */\n            SVGRenderer3D.prototype.toLineSegments = function (points) {\n                var result = [],\n                    m = true;\n                points.forEach(function (point) {\n                    result.push(m ? ['M', point.x, point.y] : ['L', point.x, point.y]);\n                    m = !m;\n                });\n                return result;\n            };\n            /**\n             * A 3-D Face is defined by it's 3D vertexes, and is only visible if it's\n             * vertexes are counter-clockwise (Back-face culling). It is used as a\n             * polyhedron Element.\n             * @private\n             */\n            SVGRenderer3D.prototype.face3d = function (args) {\n                var renderer = this,\n                    ret = this.createElement('path');\n                ret.vertexes = [];\n                ret.insidePlotArea = false;\n                ret.enabled = true;\n                /* eslint-disable no-invalid-this */\n                ret.attr = function (hash) {\n                    if (typeof hash === 'object' &&\n                        (defined(hash.enabled) ||\n                            defined(hash.vertexes) ||\n                            defined(hash.insidePlotArea))) {\n                        this.enabled = pick(hash.enabled, this.enabled);\n                        this.vertexes = pick(hash.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(hash.insidePlotArea, this.insidePlotArea);\n                        delete hash.enabled;\n                        delete hash.vertexes;\n                        delete hash.insidePlotArea;\n                        var chart = charts[renderer.chartIndex],\n                            vertexes2d = perspective(this.vertexes,\n                            chart,\n                            this.insidePlotArea),\n                            path = renderer.toLinePath(vertexes2d,\n                            true),\n                            area = shapeArea(vertexes2d);\n                        hash.d = path;\n                        hash.visibility = (this.enabled && area > 0) ?\n                            'inherit' : 'hidden';\n                    }\n                    return SVGElement.prototype.attr.apply(this, arguments);\n                };\n                ret.animate = function (params) {\n                    if (typeof params === 'object' &&\n                        (defined(params.enabled) ||\n                            defined(params.vertexes) ||\n                            defined(params.insidePlotArea))) {\n                        this.enabled = pick(params.enabled, this.enabled);\n                        this.vertexes = pick(params.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(params.insidePlotArea, this.insidePlotArea);\n                        delete params.enabled;\n                        delete params.vertexes;\n                        delete params.insidePlotArea;\n                        var chart = charts[renderer.chartIndex],\n                            vertexes2d = perspective(this.vertexes,\n                            chart,\n                            this.insidePlotArea),\n                            path = renderer.toLinePath(vertexes2d,\n                            true),\n                            area = shapeArea(vertexes2d),\n                            visibility = (this.enabled && area > 0) ?\n                                'visible' : 'hidden';\n                        params.d = path;\n                        this.attr('visibility', visibility);\n                    }\n                    return SVGElement.prototype.animate.apply(this, arguments);\n                };\n                /* eslint-enable no-invalid-this */\n                return ret.attr(args);\n            };\n            /**\n             * A Polyhedron is a handy way of defining a group of 3-D faces. It's only\n             * attribute is `faces`, an array of attributes of each one of it's Face3D\n             * instances.\n             * @private\n             */\n            SVGRenderer3D.prototype.polyhedron = function (args) {\n                var renderer = this,\n                    result = this.g(),\n                    destroy = result.destroy;\n                if (!this.styledMode) {\n                    result.attr({\n                        'stroke-linejoin': 'round'\n                    });\n                }\n                result.faces = [];\n                /* eslint-disable no-invalid-this */\n                // destroy all children\n                result.destroy = function () {\n                    for (var i = 0; i < result.faces.length; i++) {\n                        result.faces[i].destroy();\n                    }\n                    return destroy.call(this);\n                };\n                result.attr = function (hash, val, complete, continueAnimation) {\n                    if (typeof hash === 'object' && defined(hash.faces)) {\n                        while (result.faces.length > hash.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < hash.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (var i = 0; i < hash.faces.length; i++) {\n                            if (renderer.styledMode) {\n                                delete hash.faces[i].fill;\n                            }\n                            result.faces[i].attr(hash.faces[i], null, complete, continueAnimation);\n                        }\n                        delete hash.faces;\n                    }\n                    return SVGElement.prototype.attr.apply(this, arguments);\n                };\n                result.animate = function (params, duration, complete) {\n                    if (params && params.faces) {\n                        while (result.faces.length > params.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < params.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (var i = 0; i < params.faces.length; i++) {\n                            result.faces[i].animate(params.faces[i], duration, complete);\n                        }\n                        delete params.faces;\n                    }\n                    return SVGElement.prototype.animate.apply(this, arguments);\n                };\n                /* eslint-enable no-invalid-this */\n                return result.attr(args);\n            };\n            /**\n             * return result, generalization\n             * @private\n             * @requires highcharts-3d\n             */\n            SVGRenderer3D.prototype.element3d = function (type, shapeArgs) {\n                // base\n                var ret = this.g();\n                // extend\n                extend(ret, this.elements3d[type]);\n                // init\n                ret.initArgs(shapeArgs);\n                // return\n                return ret;\n            };\n            /**\n             * generelized, so now use simply\n             * @private\n             */\n            SVGRenderer3D.prototype.cuboid = function (shapeArgs) {\n                return this.element3d('cuboid', shapeArgs);\n            };\n            /**\n             * Generates a cuboid path and zIndexes\n             * @private\n             */\n            SVGRenderer3D.prototype.cuboidPath = function (shapeArgs) {\n                var x = shapeArgs.x || 0,\n                    y = shapeArgs.y || 0,\n                    z = shapeArgs.z || 0, \n                    // For side calculation (right/left)\n                    // there is a need for height (and other shapeArgs arguments)\n                    // to be at least 1px\n                    h = shapeArgs.height || 0,\n                    w = shapeArgs.width || 0,\n                    d = shapeArgs.depth || 0,\n                    chart = charts[this.chartIndex],\n                    front,\n                    back,\n                    top,\n                    bottom,\n                    left,\n                    right,\n                    shape,\n                    path1,\n                    path2,\n                    path3,\n                    isFront,\n                    isTop,\n                    isRight,\n                    options3d = chart.options.chart.options3d,\n                    alpha = options3d.alpha, \n                    // Priority for x axis is the biggest,\n                    // because of x direction has biggest influence on zIndex\n                    incrementX = 1000000, \n                    // y axis has the smallest priority in case of our charts\n                    // (needs to be set because of stacking)\n                    incrementY = 10,\n                    incrementZ = 100,\n                    zIndex = 0, \n                    // The 8 corners of the cube\n                    pArr = [{\n                            x: x,\n                            y: y,\n                            z: z\n                        }, {\n                            x: x + w,\n                            y: y,\n                            z: z\n                        }, {\n                            x: x + w,\n                            y: y + h,\n                            z: z\n                        }, {\n                            x: x,\n                            y: y + h,\n                            z: z\n                        }, {\n                            x: x,\n                            y: y + h,\n                            z: z + d\n                        }, {\n                            x: x + w,\n                            y: y + h,\n                            z: z + d\n                        }, {\n                            x: x + w,\n                            y: y,\n                            z: z + d\n                        }, {\n                            x: x,\n                            y: y,\n                            z: z + d\n                        }],\n                    forcedSides = [],\n                    pickShape;\n                // apply perspective\n                pArr = perspective(pArr, chart, shapeArgs.insidePlotArea);\n                /**\n                 * helper method to decide which side is visible\n                 * @private\n                 */\n                function mapSidePath(i) {\n                    // Added support for 0 value in columns, where height is 0\n                    // but the shape is rendered.\n                    // Height is used from 1st to 6th element of pArr\n                    if (h === 0 && i > 1 && i < 6) { // [2, 3, 4, 5]\n                        return {\n                            x: pArr[i].x,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y + 10,\n                            z: pArr[i].z\n                        };\n                    }\n                    // It is needed to calculate dummy sides (front/back) for breaking\n                    // points in case of x and depth values. If column has side,\n                    // it means that x values of front and back side are different.\n                    if (pArr[0].x === pArr[7].x && i >= 4) { // [4, 5, 6, 7]\n                        return {\n                            x: pArr[i].x + 10,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z\n                        };\n                    }\n                    // Added dummy depth\n                    if (d === 0 && i < 2 || i > 5) { // [0, 1, 6, 7]\n                        return {\n                            x: pArr[i].x,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z + 10\n                        };\n                    }\n                    return pArr[i];\n                }\n                /**\n                 * method creating the final side\n                 * @private\n                 */\n                function mapPath(i) {\n                    return pArr[i];\n                }\n                /**\n                 * First value - path with specific face\n                 * Second  value - added information about side for later calculations.\n                 * Possible second values are 0 for path1, 1 for path2 and -1 for no\n                 * path chosen.\n                 * Third value - string containing information about current side\n                 * of cuboid for forcing side rendering.\n                 * @private\n                 */\n                pickShape = function (verticesIndex1, verticesIndex2, side) {\n                    var ret = [[], -1], \n                        // An array of vertices for cuboid face\n                        face1 = verticesIndex1.map(mapPath),\n                        face2 = verticesIndex2.map(mapPath), \n                        // dummy face is calculated the same way as standard face, but\n                        // if cuboid height is 0 additional height is added so it is\n                        // possible to use this vertices array for visible face\n                        // calculation\n                        dummyFace1 = verticesIndex1.map(mapSidePath),\n                        dummyFace2 = verticesIndex2.map(mapSidePath);\n                    if (shapeArea(face1) < 0) {\n                        ret = [face1, 0];\n                    }\n                    else if (shapeArea(face2) < 0) {\n                        ret = [face2, 1];\n                    }\n                    else if (side) {\n                        forcedSides.push(side);\n                        if (shapeArea(dummyFace1) < 0) {\n                            ret = [face1, 0];\n                        }\n                        else if (shapeArea(dummyFace2) < 0) {\n                            ret = [face2, 1];\n                        }\n                        else {\n                            ret = [face1, 0]; // force side calculation.\n                        }\n                    }\n                    return ret;\n                };\n                // front or back\n                front = [3, 2, 1, 0];\n                back = [7, 6, 5, 4];\n                shape = pickShape(front, back, 'front');\n                path1 = shape[0];\n                isFront = shape[1];\n                // top or bottom\n                top = [1, 6, 7, 0];\n                bottom = [4, 5, 2, 3];\n                shape = pickShape(top, bottom, 'top');\n                path2 = shape[0];\n                isTop = shape[1];\n                // side\n                right = [1, 2, 5, 6];\n                left = [0, 7, 4, 3];\n                shape = pickShape(right, left, 'side');\n                path3 = shape[0];\n                isRight = shape[1];\n                /* New block used for calculating zIndex. It is basing on X, Y and Z\n                position of specific columns. All zIndexes (for X, Y and Z values) are\n                added to the final zIndex, where every value has different priority. The\n                biggest priority is in X and Z directions, the lowest index is for\n                stacked columns (Y direction and the same X and Z positions). Big\n                differences between priorities is made because we need to ensure that\n                even for big changes in Y and Z parameters all columns will be drawn\n                correctly. */\n                if (isRight === 1) {\n                    // It is needed to connect value with current chart width\n                    // for big chart size.\n                    zIndex += incrementX * (chart.plotWidth - x);\n                }\n                else if (!isRight) {\n                    zIndex += incrementX * x;\n                }\n                zIndex += incrementY * (!isTop ||\n                    // Numbers checked empirically\n                    (alpha >= 0 && alpha <= 180 || alpha < 360 && alpha > 357.5) ?\n                    chart.plotHeight - y : 10 + y);\n                if (isFront === 1) {\n                    zIndex += incrementZ * (z);\n                }\n                else if (!isFront) {\n                    zIndex += incrementZ * (1000 - z);\n                }\n                return {\n                    front: this.toLinePath(path1, true),\n                    top: this.toLinePath(path2, true),\n                    side: this.toLinePath(path3, true),\n                    zIndexes: {\n                        group: Math.round(zIndex)\n                    },\n                    forcedSides: forcedSides,\n                    // additional info about zIndexes\n                    isFront: isFront,\n                    isTop: isTop\n                }; // #4774\n            };\n            /** @private */\n            SVGRenderer3D.prototype.arc3d = function (attribs) {\n                var wrapper = this.g(), renderer = wrapper.renderer, customAttribs = ['x', 'y', 'r', 'innerR', 'start', 'end', 'depth'];\n                /**\n                 * Get custom attributes. Don't mutate the original object and return an\n                 * object with only custom attr.\n                 * @private\n                 */\n                function suckOutCustom(params) {\n                    var hasCA = false,\n                        ca = {},\n                        key;\n                    params = merge(params); // Don't mutate the original object\n                    for (key in params) {\n                        if (customAttribs.indexOf(key) !== -1) {\n                            ca[key] = params[key];\n                            delete params[key];\n                            hasCA = true;\n                        }\n                    }\n                    return hasCA ? [ca, params] : false;\n                }\n                attribs = merge(attribs);\n                attribs.alpha = (attribs.alpha || 0) * deg2rad;\n                attribs.beta = (attribs.beta || 0) * deg2rad;\n                // Create the different sub sections of the shape\n                wrapper.top = renderer.path();\n                wrapper.side1 = renderer.path();\n                wrapper.side2 = renderer.path();\n                wrapper.inn = renderer.path();\n                wrapper.out = renderer.path();\n                /* eslint-disable no-invalid-this */\n                // Add all faces\n                wrapper.onAdd = function () {\n                    var parent = wrapper.parentGroup,\n                        className = wrapper.attr('class');\n                    wrapper.top.add(wrapper);\n                    // These faces are added outside the wrapper group because the\n                    // z-index relates to neighbour elements as well\n                    ['out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                        wrapper[face]\n                            .attr({\n                            'class': className + ' highcharts-3d-side'\n                        })\n                            .add(parent);\n                    });\n                };\n                // Cascade to faces\n                ['addClass', 'removeClass'].forEach(function (fn) {\n                    wrapper[fn] = function () {\n                        var args = arguments;\n                        ['top', 'out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                            wrapper[face][fn].apply(wrapper[face], args);\n                        });\n                    };\n                });\n                /**\n                 * Compute the transformed paths and set them to the composite shapes\n                 * @private\n                 */\n                wrapper.setPaths = function (attribs) {\n                    var paths = wrapper.renderer.arc3dPath(attribs),\n                        zIndex = paths.zTop * 100;\n                    wrapper.attribs = attribs;\n                    wrapper.top.attr({ d: paths.top, zIndex: paths.zTop });\n                    wrapper.inn.attr({ d: paths.inn, zIndex: paths.zInn });\n                    wrapper.out.attr({ d: paths.out, zIndex: paths.zOut });\n                    wrapper.side1.attr({ d: paths.side1, zIndex: paths.zSide1 });\n                    wrapper.side2.attr({ d: paths.side2, zIndex: paths.zSide2 });\n                    // show all children\n                    wrapper.zIndex = zIndex;\n                    wrapper.attr({ zIndex: zIndex });\n                    // Set the radial gradient center the first time\n                    if (attribs.center) {\n                        wrapper.top.setRadialReference(attribs.center);\n                        delete attribs.center;\n                    }\n                };\n                wrapper.setPaths(attribs);\n                /**\n                 * Apply the fill to the top and a darker shade to the sides\n                 * @private\n                 */\n                wrapper.fillSetter = function (value) {\n                    var darker = color(value).brighten(-0.1).get();\n                    this.fill = value;\n                    this.side1.attr({ fill: darker });\n                    this.side2.attr({ fill: darker });\n                    this.inn.attr({ fill: darker });\n                    this.out.attr({ fill: darker });\n                    this.top.attr({ fill: value });\n                    return this;\n                };\n                // Apply the same value to all. These properties cascade down to the\n                // children when set to the composite arc3d.\n                ['opacity', 'translateX', 'translateY', 'visibility'].forEach(function (setter) {\n                    wrapper[setter + 'Setter'] = function (value, key) {\n                        wrapper[key] = value;\n                        ['out', 'inn', 'side1', 'side2', 'top'].forEach(function (el) {\n                            wrapper[el].attr(key, value);\n                        });\n                    };\n                });\n                // Override attr to remove shape attributes and use those to set child\n                // paths\n                wrapper.attr = function (params) {\n                    var ca,\n                        paramArr;\n                    if (typeof params === 'object') {\n                        paramArr = suckOutCustom(params);\n                        if (paramArr) {\n                            ca = paramArr[0];\n                            arguments[0] = paramArr[1];\n                            extend(wrapper.attribs, ca);\n                            wrapper.setPaths(wrapper.attribs);\n                        }\n                    }\n                    return SVGElement.prototype.attr.apply(wrapper, arguments);\n                };\n                // Override the animate function by sucking out custom parameters\n                // related to the shapes directly, and update the shapes from the\n                // animation step.\n                wrapper.animate = function (params, animation, complete) {\n                    var paramArr,\n                        from = this.attribs,\n                        to,\n                        anim,\n                        randomProp = ('data-' + Math.random().toString(26).substring(2, 9));\n                    // Attribute-line properties connected to 3D. These shouldn't have\n                    // been in the attribs collection in the first place.\n                    delete params.center;\n                    delete params.z;\n                    delete params.alpha;\n                    delete params.beta;\n                    anim = animObject(pick(animation, this.renderer.globalAnimation));\n                    if (anim.duration) {\n                        paramArr = suckOutCustom(params);\n                        // Params need to have a property in order for the step to run\n                        // (#5765, #7097, #7437)\n                        wrapper[randomProp] = 0;\n                        params[randomProp] = 1;\n                        wrapper[randomProp + 'Setter'] = H.noop;\n                        if (paramArr) {\n                            to = paramArr[0]; // custom attr\n                            anim.step = function (a, fx) {\n                                /**\n                                 * @private\n                                 */\n                                function interpolate(key) {\n                                    return from[key] + (pick(to[key], from[key]) -\n                                        from[key]) * fx.pos;\n                                }\n                                if (fx.prop === randomProp) {\n                                    fx.elem.setPaths(merge(from, {\n                                        x: interpolate('x'),\n                                        y: interpolate('y'),\n                                        r: interpolate('r'),\n                                        innerR: interpolate('innerR'),\n                                        start: interpolate('start'),\n                                        end: interpolate('end'),\n                                        depth: interpolate('depth')\n                                    }));\n                                }\n                            };\n                        }\n                        animation = anim; // Only when duration (#5572)\n                    }\n                    return SVGElement.prototype.animate.call(this, params, animation, complete);\n                };\n                // destroy all children\n                wrapper.destroy = function () {\n                    this.top.destroy();\n                    this.out.destroy();\n                    this.inn.destroy();\n                    this.side1.destroy();\n                    this.side2.destroy();\n                    return SVGElement.prototype.destroy.call(this);\n                };\n                // hide all children\n                wrapper.hide = function () {\n                    this.top.hide();\n                    this.out.hide();\n                    this.inn.hide();\n                    this.side1.hide();\n                    this.side2.hide();\n                };\n                wrapper.show = function (inherit) {\n                    this.top.show(inherit);\n                    this.out.show(inherit);\n                    this.inn.show(inherit);\n                    this.side1.show(inherit);\n                    this.side2.show(inherit);\n                };\n                /* eslint-enable no-invalid-this */\n                return wrapper;\n            };\n            /**\n             * Generate the paths required to draw a 3D arc.\n             * @private\n             */\n            SVGRenderer3D.prototype.arc3dPath = function (shapeArgs) {\n                var cx = shapeArgs.x || 0, // x coordinate of the center\n                    cy = shapeArgs.y || 0, // y coordinate of the center\n                    start = shapeArgs.start || 0, // start angle\n                    end = (shapeArgs.end || 0) - 0.00001, // end angle\n                    r = shapeArgs.r || 0, // radius\n                    ir = shapeArgs.innerR || 0, // inner radius\n                    d = shapeArgs.depth || 0, // depth\n                    alpha = shapeArgs.alpha || 0, // alpha rotation of the chart\n                    beta = shapeArgs.beta || 0; // beta rotation of the chart\n                    // Derived Variables\n                    var cs = Math.cos(start), // cosinus of the start angle\n                    ss = Math.sin(start), // sinus of the start angle\n                    ce = Math.cos(end), // cosinus of the end angle\n                    se = Math.sin(end), // sinus of the end angle\n                    rx = r * Math.cos(beta), // x-radius\n                    ry = r * Math.cos(alpha), // y-radius\n                    irx = ir * Math.cos(beta), // x-radius (inner)\n                    iry = ir * Math.cos(alpha), // y-radius (inner)\n                    dx = d * Math.sin(beta), // distance between top and bottom in x\n                    dy = d * Math.sin(alpha); // distance between top and bottom in y\n                    // TOP\n                    var top = [\n                        ['M',\n                    cx + (rx * cs),\n                    cy + (ry * ss)]\n                    ];\n                top = top.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, start, end, 0, 0));\n                top.push([\n                    'L', cx + (irx * ce), cy + (iry * se)\n                ]);\n                top = top.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, end, start, 0, 0));\n                top.push(['Z']);\n                // OUTSIDE\n                var b = (beta > 0 ? Math.PI / 2 : 0),\n                    a = (alpha > 0 ? 0 : Math.PI / 2);\n                var start2 = start > -b ? start : (end > -b ? -b : start),\n                    end2 = end < PI - a ? end : (start < PI - a ? PI - a : end),\n                    midEnd = 2 * PI - a;\n                // When slice goes over bottom middle, need to add both, left and right\n                // outer side. Additionally, when we cross right hand edge, create sharp\n                // edge. Outer shape/wall:\n                //\n                //            -------\n                //          /    ^    \\\n                //    4)   /   /   \\   \\  1)\n                //        /   /     \\   \\\n                //       /   /       \\   \\\n                // (c)=> ====         ==== <=(d)\n                //       \\   \\       /   /\n                //        \\   \\<=(a)/   /\n                //         \\   \\   /   / <=(b)\n                //    3)    \\    v    /  2)\n                //            -------\n                //\n                // (a) - inner side\n                // (b) - outer side\n                // (c) - left edge (sharp)\n                // (d) - right edge (sharp)\n                // 1..n - rendering order for startAngle = 0, when set to e.g 90, order\n                // changes clockwise (1->2, 2->3, n->1) and counterclockwise for\n                // negative startAngle\n                var out = [\n                        ['M',\n                    cx + (rx * cos(start2)),\n                    cy + (ry * sin(start2))]\n                    ];\n                out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, start2, end2, 0, 0));\n                // When shape is wide, it can cross both, (c) and (d) edges, when using\n                // startAngle\n                if (end > midEnd && start < midEnd) {\n                    // Go to outer side\n                    out.push([\n                        'L', cx + (rx * cos(end2)) + dx, cy + (ry * sin(end2)) + dy\n                    ]);\n                    // Curve to the right edge of the slice (d)\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, midEnd, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, midEnd, end, 0, 0));\n                    // Go to the outer side\n                    out.push([\n                        'L', cx + (rx * cos(end)) + dx, cy + (ry * sin(end)) + dy\n                    ]);\n                    // Go back to middle (d)\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end, midEnd, dx, dy));\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Go back to the left edge\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, midEnd, end2, 0, 0));\n                    // But shape can cross also only (c) edge:\n                }\n                else if (end > PI - a && start < PI - a) {\n                    // Go to outer side\n                    out.push([\n                        'L',\n                        cx + (rx * Math.cos(end2)) + dx,\n                        cy + (ry * Math.sin(end2)) + dy\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, end, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * Math.cos(end)), cy + (ry * Math.sin(end))\n                    ]);\n                    // Go back to the artifical end2\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end, end2, 0, 0));\n                }\n                out.push([\n                    'L',\n                    cx + (rx * Math.cos(end2)) + dx,\n                    cy + (ry * Math.sin(end2)) + dy\n                ]);\n                out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, start2, dx, dy));\n                out.push(['Z']);\n                // INSIDE\n                var inn = [\n                        ['M',\n                    cx + (irx * cs),\n                    cy + (iry * ss)]\n                    ];\n                inn = inn.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, start, end, 0, 0));\n                inn.push([\n                    'L',\n                    cx + (irx * Math.cos(end)) + dx,\n                    cy + (iry * Math.sin(end)) + dy\n                ]);\n                inn = inn.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, end, start, dx, dy));\n                inn.push(['Z']);\n                // SIDES\n                var side1 = [\n                        ['M',\n                    cx + (rx * cs),\n                    cy + (ry * ss)],\n                        ['L',\n                    cx + (rx * cs) + dx,\n                    cy + (ry * ss) + dy],\n                        ['L',\n                    cx + (irx * cs) + dx,\n                    cy + (iry * ss) + dy],\n                        ['L',\n                    cx + (irx * cs),\n                    cy + (iry * ss)],\n                        ['Z']\n                    ];\n                var side2 = [\n                        ['M',\n                    cx + (rx * ce),\n                    cy + (ry * se)],\n                        ['L',\n                    cx + (rx * ce) + dx,\n                    cy + (ry * se) + dy],\n                        ['L',\n                    cx + (irx * ce) + dx,\n                    cy + (iry * se) + dy],\n                        ['L',\n                    cx + (irx * ce),\n                    cy + (iry * se)],\n                        ['Z']\n                    ];\n                // correction for changed position of vanishing point caused by alpha\n                // and beta rotations\n                var angleCorr = Math.atan2(dy, -dx),\n                    angleEnd = Math.abs(end + angleCorr),\n                    angleStart = Math.abs(start + angleCorr),\n                    angleMid = Math.abs((start + end) / 2 + angleCorr);\n                /**\n                 * set to 0-PI range\n                 * @private\n                 */\n                function toZeroPIRange(angle) {\n                    angle = angle % (2 * Math.PI);\n                    if (angle > Math.PI) {\n                        angle = 2 * Math.PI - angle;\n                    }\n                    return angle;\n                }\n                angleEnd = toZeroPIRange(angleEnd);\n                angleStart = toZeroPIRange(angleStart);\n                angleMid = toZeroPIRange(angleMid);\n                // *1e5 is to compensate pInt in zIndexSetter\n                var incPrecision = 1e5,\n                    a1 = angleMid * incPrecision,\n                    a2 = angleStart * incPrecision,\n                    a3 = angleEnd * incPrecision;\n                return {\n                    top: top,\n                    // max angle is PI, so this is always higher\n                    zTop: Math.PI * incPrecision + 1,\n                    out: out,\n                    zOut: Math.max(a1, a2, a3),\n                    inn: inn,\n                    zInn: Math.max(a1, a2, a3),\n                    side1: side1,\n                    // to keep below zOut and zInn in case of same values\n                    zSide1: a3 * 0.99,\n                    side2: side2,\n                    zSide2: a2 * 0.99\n                };\n            };\n            return SVGRenderer3D;\n        }(SVGRenderer));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGRenderer3D;\n    });\n    _registerModule(_modules, 'Core/Chart/Chart3D.js', [_modules['Core/Color/Color.js'], _modules['Core/Defaults.js'], _modules['Core/Math3D.js'], _modules['Core/Utilities.js']], function (Color, D, Math3D, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extension for 3D charts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var genericDefaultOptions = D.defaultOptions;\n        var perspective = Math3D.perspective,\n            shapeArea3D = Math3D.shapeArea3D;\n        var addEvent = U.addEvent,\n            isArray = U.isArray,\n            merge = U.merge,\n            pick = U.pick,\n            wrap = U.wrap;\n        var Chart3D;\n        (function (Chart3D) {\n            /* *\n             *\n             *  Interfaces\n             *\n             * */\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            var Composition = /** @class */ (function () {\n                    /* *\n                     *\n                     *  Constructors\n                     *\n                     * */\n                    function Composition(chart) {\n                        this.frame3d = void 0;\n                    this.chart = chart;\n                }\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                Composition.prototype.get3dFrame = function () {\n                    var chart = this.chart,\n                        options3d = chart.options.chart.options3d,\n                        frameOptions = options3d.frame,\n                        xm = chart.plotLeft,\n                        xp = chart.plotLeft + chart.plotWidth,\n                        ym = chart.plotTop,\n                        yp = chart.plotTop + chart.plotHeight,\n                        zm = 0,\n                        zp = options3d.depth,\n                        faceOrientation = function (vertexes) {\n                            var area = shapeArea3D(vertexes,\n                        chart);\n                        // Give it 0.5 squared-pixel as a margin for rounding errors\n                        if (area > 0.5) {\n                            return 1;\n                        }\n                        if (area < -0.5) {\n                            return -1;\n                        }\n                        return 0;\n                    }, bottomOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xp, y: yp, z: zm },\n                        { x: xm, y: yp, z: zm }\n                    ]), topOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: ym, z: zp },\n                        { x: xm, y: ym, z: zp }\n                    ]), leftOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xm, y: ym, z: zp },\n                        { x: xm, y: yp, z: zp },\n                        { x: xm, y: yp, z: zm }\n                    ]), rightOrientation = faceOrientation([\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: yp, z: zp }\n                    ]), frontOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xm, y: ym, z: zm }\n                    ]), backOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zp },\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xm, y: yp, z: zp }\n                    ]), defaultShowFront = false, defaultShowBack = true;\n                    var defaultShowBottom = false,\n                        defaultShowTop = false,\n                        defaultShowLeft = false,\n                        defaultShowRight = false;\n                    // The 'default' criteria to visible faces of the frame is looking\n                    // up every axis to decide whenever the left/right//top/bottom sides\n                    // of the frame will be shown\n                    []\n                        .concat(chart.xAxis, chart.yAxis, chart.zAxis)\n                        .forEach(function (axis) {\n                        if (axis) {\n                            if (axis.horiz) {\n                                if (axis.opposite) {\n                                    defaultShowTop = true;\n                                }\n                                else {\n                                    defaultShowBottom = true;\n                                }\n                            }\n                            else {\n                                if (axis.opposite) {\n                                    defaultShowRight = true;\n                                }\n                                else {\n                                    defaultShowLeft = true;\n                                }\n                            }\n                        }\n                    });\n                    var getFaceOptions = function (sources, faceOrientation, defaultVisible) {\n                            var faceAttrs = ['size', 'color', 'visible'], options = {};\n                        for (var i = 0; i < faceAttrs.length; i++) {\n                            var attr = faceAttrs[i];\n                            for (var j = 0; j < sources.length; j++) {\n                                if (typeof sources[j] === 'object') {\n                                    var val = sources[j][attr];\n                                    if (typeof val !== 'undefined' && val !== null) {\n                                        options[attr] = val;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        var isVisible = defaultVisible;\n                        if (options.visible === true || options.visible === false) {\n                            isVisible = options.visible;\n                        }\n                        else if (options.visible === 'auto') {\n                            isVisible = faceOrientation > 0;\n                        }\n                        return {\n                            size: pick(options.size, 1),\n                            color: pick(options.color, 'none'),\n                            frontFacing: faceOrientation > 0,\n                            visible: isVisible\n                        };\n                    };\n                    // docs @TODO: Add all frame options (left, right, top, bottom,\n                    // front, back) to apioptions JSDoc once the new system is up.\n                    var ret = {\n                            axes: {},\n                            // FIXME: Previously, left/right, top/bottom and front/back\n                            // pairs shared size and color.\n                            // For compatibility and consistency sake, when one face have\n                            // size/color/visibility set, the opposite face will default to\n                            // the same values. Also, left/right used to be called 'side',\n                            // so that's also added as a fallback.\n                            bottom: getFaceOptions([frameOptions.bottom,\n                        frameOptions.top,\n                        frameOptions],\n                        bottomOrientation,\n                        defaultShowBottom),\n                            top: getFaceOptions([frameOptions.top,\n                        frameOptions.bottom,\n                        frameOptions],\n                        topOrientation,\n                        defaultShowTop),\n                            left: getFaceOptions([\n                                frameOptions.left,\n                                frameOptions.right,\n                                frameOptions.side,\n                                frameOptions\n                            ],\n                        leftOrientation,\n                        defaultShowLeft),\n                            right: getFaceOptions([\n                                frameOptions.right,\n                                frameOptions.left,\n                                frameOptions.side,\n                                frameOptions\n                            ],\n                        rightOrientation,\n                        defaultShowRight),\n                            back: getFaceOptions([frameOptions.back,\n                        frameOptions.front,\n                        frameOptions],\n                        backOrientation,\n                        defaultShowBack),\n                            front: getFaceOptions([frameOptions.front,\n                        frameOptions.back,\n                        frameOptions],\n                        frontOrientation,\n                        defaultShowFront)\n                        };\n                    // Decide the bast place to put axis title/labels based on the\n                    // visible faces. Ideally, The labels can only be on the edge\n                    // between a visible face and an invisble one. Also, the Y label\n                    // should be one the left-most edge (right-most if opposite).\n                    if (options3d.axisLabelPosition === 'auto') {\n                        var isValidEdge = function (face1,\n                            face2) {\n                                return ((face1.visible !== face2.visible) ||\n                                    (face1.visible &&\n                                        face2.visible &&\n                                        (face1.frontFacing !== face2.frontFacing)));\n                        };\n                        var yEdges = [];\n                        if (isValidEdge(ret.left, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.left, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zp,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zm,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var xBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.front)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.back)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var xTopEdges = [];\n                        if (isValidEdge(ret.top, ret.front)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.back)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var zBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.left)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.right)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        var zTopEdges = [];\n                        if (isValidEdge(ret.top, ret.left)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.right)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        var pickEdge = function (edges,\n                            axis,\n                            mult) {\n                                if (edges.length === 0) {\n                                    return null;\n                            }\n                            if (edges.length === 1) {\n                                return edges[0];\n                            }\n                            var projections = perspective(edges,\n                                chart,\n                                false);\n                            var best = 0;\n                            for (var i = 1; i < projections.length; i++) {\n                                if (mult * projections[i][axis] >\n                                    mult * projections[best][axis]) {\n                                    best = i;\n                                }\n                                else if ((mult * projections[i][axis] ===\n                                    mult * projections[best][axis]) &&\n                                    (projections[i].z < projections[best].z)) {\n                                    best = i;\n                                }\n                            }\n                            return edges[best];\n                        };\n                        ret.axes = {\n                            y: {\n                                'left': pickEdge(yEdges, 'x', -1),\n                                'right': pickEdge(yEdges, 'x', +1)\n                            },\n                            x: {\n                                'top': pickEdge(xTopEdges, 'y', -1),\n                                'bottom': pickEdge(xBottomEdges, 'y', +1)\n                            },\n                            z: {\n                                'top': pickEdge(zTopEdges, 'y', -1),\n                                'bottom': pickEdge(zBottomEdges, 'y', +1)\n                            }\n                        };\n                    }\n                    else {\n                        ret.axes = {\n                            y: {\n                                'left': {\n                                    x: xm, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'right': {\n                                    x: xp, z: zm, xDir: { x: 0, y: 0, z: 1 }\n                                }\n                            },\n                            x: {\n                                'top': {\n                                    y: ym, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'bottom': {\n                                    y: yp,\n                                    z: zm,\n                                    xDir: { x: 1, y: 0, z: 0 }\n                                }\n                            },\n                            z: {\n                                'top': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: ym,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                },\n                                'bottom': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: yp,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                }\n                            }\n                        };\n                    }\n                    return ret;\n                };\n                /**\n                 * Calculate scale of the 3D view. That is required to fit chart's 3D\n                 * projection into the actual plotting area. Reported as #4933.\n                 *\n                 * **Note:**\n                 * This function should ideally take the plot values instead of a chart\n                 * object, but since the chart object is needed for perspective it is\n                 * not practical. Possible to make both getScale and perspective more\n                 * logical and also immutable.\n                 *\n                 * @private\n                 * @function getScale\n                 *\n                 * @param {number} depth\n                 * The depth of the chart\n                 *\n                 * @return {number}\n                 * The scale to fit the 3D chart into the plotting area.\n                 *\n                 * @requires highcharts-3d\n                 */\n                Composition.prototype.getScale = function (depth) {\n                    var chart = this.chart,\n                        plotLeft = chart.plotLeft,\n                        plotRight = chart.plotWidth + plotLeft,\n                        plotTop = chart.plotTop,\n                        plotBottom = chart.plotHeight + plotTop,\n                        originX = plotLeft + chart.plotWidth / 2,\n                        originY = plotTop + chart.plotHeight / 2,\n                        bbox3d = {\n                            minX: Number.MAX_VALUE,\n                            maxX: -Number.MAX_VALUE,\n                            minY: Number.MAX_VALUE,\n                            maxY: -Number.MAX_VALUE\n                        };\n                    var corners,\n                        scale = 1;\n                    // Top left corners:\n                    corners = [{\n                            x: plotLeft,\n                            y: plotTop,\n                            z: 0\n                        }, {\n                            x: plotLeft,\n                            y: plotTop,\n                            z: depth\n                        }];\n                    // Top right corners:\n                    [0, 1].forEach(function (i) {\n                        corners.push({\n                            x: plotRight,\n                            y: corners[i].y,\n                            z: corners[i].z\n                        });\n                    });\n                    // All bottom corners:\n                    [0, 1, 2, 3].forEach(function (i) {\n                        corners.push({\n                            x: corners[i].x,\n                            y: plotBottom,\n                            z: corners[i].z\n                        });\n                    });\n                    // Calculate 3D corners:\n                    corners = perspective(corners, chart, false);\n                    // Get bounding box of 3D element:\n                    corners.forEach(function (corner) {\n                        bbox3d.minX = Math.min(bbox3d.minX, corner.x);\n                        bbox3d.maxX = Math.max(bbox3d.maxX, corner.x);\n                        bbox3d.minY = Math.min(bbox3d.minY, corner.y);\n                        bbox3d.maxY = Math.max(bbox3d.maxY, corner.y);\n                    });\n                    // Left edge:\n                    if (plotLeft > bbox3d.minX) {\n                        scale = Math.min(scale, 1 - Math.abs((plotLeft + originX) / (bbox3d.minX + originX)) % 1);\n                    }\n                    // Right edge:\n                    if (plotRight < bbox3d.maxX) {\n                        scale = Math.min(scale, (plotRight - originX) / (bbox3d.maxX - originX));\n                    }\n                    // Top edge:\n                    if (plotTop > bbox3d.minY) {\n                        if (bbox3d.minY < 0) {\n                            scale = Math.min(scale, (plotTop + originY) / (-bbox3d.minY + plotTop + originY));\n                        }\n                        else {\n                            scale = Math.min(scale, 1 - (plotTop + originY) / (bbox3d.minY + originY) % 1);\n                        }\n                    }\n                    // Bottom edge:\n                    if (plotBottom < bbox3d.maxY) {\n                        scale = Math.min(scale, Math.abs((plotBottom - originY) / (bbox3d.maxY - originY)));\n                    }\n                    return scale;\n                };\n                return Composition;\n            }());\n            Chart3D.Composition = Composition;\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            /**\n             * @optionparent\n             * @private\n             */\n            Chart3D.defaultOptions = {\n                chart: {\n                    /**\n                     * Options to render charts in 3 dimensions. This feature requires\n                     * `highcharts-3d.js`, found in the download package or online at\n                     * [code.highcharts.com/highcharts-3d.js](https://code.highcharts.com/highcharts-3d.js).\n                     *\n                     * @since    4.0\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    options3d: {\n                        /**\n                         * Whether to render the chart using the 3D functionality.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        enabled: false,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        alpha: 0,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        beta: 0,\n                        /**\n                         * The total depth of the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        depth: 100,\n                        /**\n                         * Whether the 3d box should automatically adjust to the chart\n                         * plot area.\n                         *\n                         * @since   4.2.4\n                         * @product highcharts\n                         */\n                        fitToPlot: true,\n                        /**\n                         * Defines the distance the viewer is standing in front of the\n                         * chart, this setting is important to calculate the perspective\n                         * effect in column and scatter charts. It is not used for 3D\n                         * pie charts.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        viewDistance: 25,\n                        /**\n                         * Set it to `\"auto\"` to automatically move the labels to the\n                         * best edge.\n                         *\n                         * @type    {\"auto\"|null}\n                         * @since   5.0.12\n                         * @product highcharts\n                         */\n                        axisLabelPosition: null,\n                        /**\n                         * Provides the option to draw a frame around the charts by\n                         * defining a bottom, front and back panel.\n                         *\n                         * @since    4.0\n                         * @product  highcharts\n                         * @requires highcharts-3d\n                         */\n                        frame: {\n                            /**\n                             * Whether the frames are visible.\n                             */\n                            visible: 'default',\n                            /**\n                             * General pixel thickness for the frame faces.\n                             */\n                            size: 1,\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             *\n                             * @since    4.0\n                             * @product  highcharts\n                             * @requires highcharts-3d\n                             */\n                            /**\n                             * The color of the panel.\n                             *\n                             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                             * @default   transparent\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.color\n                             */\n                            /**\n                             * The thickness of the panel.\n                             *\n                             * @type      {number}\n                             * @default   1\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.size\n                             */\n                            /**\n                             * Whether to display the frame. Possible values are `true`,\n                             * `false`, `\"auto\"` to display only the frames behind the\n                             * data, and `\"default\"` to display faces behind the data\n                             * based on the axis layout, ignoring the point of view.\n                             *\n                             * @sample {highcharts} highcharts/3d/scatter-frame/\n                             *         Auto frames\n                             *\n                             * @type      {boolean|\"default\"|\"auto\"}\n                             * @default   default\n                             * @since     5.0.12\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.visible\n                             */\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             */\n                            bottom: {},\n                            /**\n                             * The top of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            top: {},\n                            /**\n                             * The left side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            left: {},\n                            /**\n                             * The right of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            right: {},\n                            /**\n                             * The back side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            back: {},\n                            /**\n                             * The front of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            front: {}\n                        }\n                    }\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable no-invalid-this, valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(ChartClass, FxClass) {\n                var chartProto = ChartClass.prototype;\n                var fxProto = FxClass.prototype;\n                /**\n                 * Shorthand to check the is3d flag.\n                 * @private\n                 * @return {boolean}\n                 * Whether it is a 3D chart.\n                 */\n                chartProto.is3d = function () {\n                    return Boolean(this.options.chart.options3d &&\n                        this.options.chart.options3d.enabled); // #4280\n                };\n                chartProto.propsRequireDirtyBox.push('chart.options3d');\n                chartProto.propsRequireUpdateSeries.push('chart.options3d');\n                /**\n                 * Animation setter for matrix property.\n                 * @private\n                 */\n                fxProto.matrixSetter = function () {\n                    var interpolated;\n                    if (this.pos < 1 &&\n                        (isArray(this.start) || isArray(this.end))) {\n                        var start = (this.start ||\n                                [1, 0, 0, 1, 0, 0]),\n                            end = this.end || [1, 0, 0, 1, 0, 0];\n                        interpolated = [];\n                        for (var i = 0; i < 6; i++) {\n                            interpolated.push(this.pos * end[i] + (1 - this.pos) * start[i]);\n                        }\n                    }\n                    else {\n                        interpolated = this.end;\n                    }\n                    this.elem.attr(this.prop, interpolated, null, true);\n                };\n                merge(true, genericDefaultOptions, Chart3D.defaultOptions);\n                addEvent(ChartClass, 'init', onInit);\n                addEvent(ChartClass, 'addSeries', onAddSeries);\n                addEvent(ChartClass, 'afterDrawChartBox', onAfterDrawChartBox);\n                addEvent(ChartClass, 'afterGetContainer', onAfterGetContainer);\n                addEvent(ChartClass, 'afterInit', onAfterInit);\n                addEvent(ChartClass, 'afterSetChartSize', onAfterSetChartSize);\n                addEvent(ChartClass, 'beforeRedraw', onBeforeRedraw);\n                addEvent(ChartClass, 'beforeRender', onBeforeRender);\n                wrap(chartProto, 'isInsidePlot', wrapIsInsidePlot);\n                wrap(chartProto, 'renderSeries', wrapRenderSeries);\n                wrap(chartProto, 'setClassName', wrapSetClassName);\n            }\n            Chart3D.compose = compose;\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAddSeries(e) {\n                if (this.is3d()) {\n                    if (e.options.type === 'scatter') {\n                        e.options.type = 'scatter3d';\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterDrawChartBox() {\n                if (this.chart3d &&\n                    this.is3d()) {\n                    var chart = this,\n                        renderer = chart.renderer,\n                        options3d = chart.options.chart.options3d,\n                        frame = chart.chart3d.get3dFrame(),\n                        xm = chart.plotLeft,\n                        xp = chart.plotLeft + chart.plotWidth,\n                        ym = chart.plotTop,\n                        yp = chart.plotTop + chart.plotHeight,\n                        zm = 0,\n                        zp = options3d.depth,\n                        xmm = xm - (frame.left.visible ? frame.left.size : 0),\n                        xpp = xp + (frame.right.visible ? frame.right.size : 0),\n                        ymm = ym - (frame.top.visible ? frame.top.size : 0),\n                        ypp = yp + (frame.bottom.visible ? frame.bottom.size : 0),\n                        zmm = zm - (frame.front.visible ? frame.front.size : 0),\n                        zpp = zp + (frame.back.visible ? frame.back.size : 0),\n                        verb = chart.hasRendered ? 'animate' : 'attr';\n                    chart.chart3d.frame3d = frame;\n                    if (!chart.frameShapes) {\n                        chart.frameShapes = {\n                            bottom: renderer.polyhedron().add(),\n                            top: renderer.polyhedron().add(),\n                            left: renderer.polyhedron().add(),\n                            right: renderer.polyhedron().add(),\n                            back: renderer.polyhedron().add(),\n                            front: renderer.polyhedron().add()\n                        };\n                    }\n                    chart.frameShapes.bottom[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-bottom',\n                        zIndex: frame.bottom.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.top[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-top',\n                        zIndex: frame.top.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.left[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-left',\n                        zIndex: frame.left.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.left.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.left.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.right[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-right',\n                        zIndex: frame.right.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.right.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.right.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.back[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-back',\n                        zIndex: frame.back.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.front[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-front',\n                        zIndex: frame.front.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.front.visible\n                            }]\n                    });\n                }\n            }\n            /**\n             * Add the required CSS classes for column sides (#6018)\n             * @private\n             */\n            function onAfterGetContainer() {\n                if (this.styledMode) {\n                    // Add definitions used by brighter and darker faces of the cuboids.\n                    [{\n                            name: 'darker',\n                            slope: 0.6\n                        }, {\n                            name: 'brighter',\n                            slope: 1.4\n                        }].forEach(function (cfg) {\n                        this.renderer.definition({\n                            tagName: 'filter',\n                            attributes: {\n                                id: 'highcharts-' + cfg.name\n                            },\n                            children: [{\n                                    tagName: 'feComponentTransfer',\n                                    children: [{\n                                            tagName: 'feFuncR',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncG',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncB',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }]\n                                }]\n                        });\n                    }, this);\n                }\n            }\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAfterInit() {\n                var options = this.options;\n                if (this.is3d()) {\n                    (options.series || []).forEach(function (s) {\n                        var type = (s.type ||\n                                options.chart.type ||\n                                options.chart.defaultSeriesType);\n                        if (type === 'scatter') {\n                            s.type = 'scatter3d';\n                        }\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterSetChartSize() {\n                var chart = this,\n                    options3d = chart.options.chart.options3d;\n                if (chart.chart3d &&\n                    chart.is3d()) {\n                    // Add a 0-360 normalisation for alfa and beta angles in 3d graph\n                    if (options3d) {\n                        options3d.alpha = options3d.alpha % 360 +\n                            (options3d.alpha >= 0 ? 0 : 360);\n                        options3d.beta = options3d.beta % 360 +\n                            (options3d.beta >= 0 ? 0 : 360);\n                    }\n                    var inverted = chart.inverted, clipBox = chart.clipBox, margin = chart.margin, x = inverted ? 'y' : 'x', y = inverted ? 'x' : 'y', w = inverted ? 'height' : 'width', h = inverted ? 'width' : 'height';\n                    clipBox[x] = -(margin[3] || 0);\n                    clipBox[y] = -(margin[0] || 0);\n                    clipBox[w] = (chart.chartWidth + (margin[3] || 0) + (margin[1] || 0));\n                    clipBox[h] = (chart.chartHeight + (margin[0] || 0) + (margin[2] || 0));\n                    // Set scale, used later in perspective method():\n                    // getScale uses perspective, so scale3d has to be reset.\n                    chart.scale3d = 1;\n                    if (options3d.fitToPlot === true) {\n                        chart.scale3d = chart.chart3d.getScale(options3d.depth);\n                    }\n                    // Recalculate the 3d frame with every call of setChartSize,\n                    // instead of doing it after every redraw(). It avoids ticks\n                    // and axis title outside of chart.\n                    chart.chart3d.frame3d = chart.chart3d.get3dFrame(); // #7942\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRedraw() {\n                if (this.is3d()) {\n                    // Set to force a redraw of all elements\n                    this.isDirtyBox = true;\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRender() {\n                if (this.chart3d && this.is3d()) {\n                    this.chart3d.frame3d = this.chart3d.get3dFrame();\n                }\n            }\n            /**\n             * @private\n             */\n            function onInit() {\n                if (!this.chart3d) {\n                    this.chart3d = new Composition(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapIsInsidePlot(proceed) {\n                return this.is3d() || proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            /**\n             * Draw the series in the reverse order (#3803, #3917)\n             * @private\n             */\n            function wrapRenderSeries(proceed) {\n                var series,\n                    i = this.series.length;\n                if (this.is3d()) {\n                    while (i--) {\n                        series = this.series[i];\n                        series.translate();\n                        series.render();\n                    }\n                }\n                else {\n                    proceed.call(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapSetClassName(proceed) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n                if (this.is3d()) {\n                    this.container.className += ' highcharts-3d-chart';\n                }\n            }\n        })(Chart3D || (Chart3D = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Note: As of v5.0.12, `frame.left` or `frame.right` should be used instead.\n         *\n         * The side for the frame around a 3D chart.\n         *\n         * @deprecated\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption chart.options3d.frame.side\n         */\n        /**\n         * The color of the panel.\n         *\n         * @deprecated\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   transparent\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.color\n         */\n        /**\n         * The thickness of the panel.\n         *\n         * @deprecated\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.size\n         */\n        ''; // keeps doclets above in JS file\n\n        return Chart3D;\n    });\n    _registerModule(_modules, 'Core/Axis/ZAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Utilities.js']], function (Axis, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var addEvent = U.addEvent,\n            merge = U.merge,\n            pick = U.pick,\n            splat = U.splat;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function chartAddZAxis(options) {\n            return new ZAxis(this, options);\n        }\n        /**\n         * Get the Z axis in addition to the default X and Y.\n         * @private\n         */\n        function onChartAfterGetAxes() {\n            var _this = this;\n            var zAxisOptions = this.options.zAxis = splat(this.options.zAxis || {});\n            if (!this.is3d()) {\n                return;\n            }\n            this.zAxis = [];\n            zAxisOptions.forEach(function (axisOptions, i) {\n                axisOptions.index = i;\n                // Z-Axis is shown horizontally, so it's kind of a X-Axis\n                axisOptions.isX = true;\n                _this.addZAxis(axisOptions).setScale();\n            });\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * 3D axis for z coordinates.\n         */\n        var ZAxis = /** @class */ (function (_super) {\n                __extends(ZAxis, _super);\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function ZAxis(chart, userOptions) {\n                var _this = _super.call(this,\n                    chart,\n                    userOptions) || this;\n                _this.isZAxis = true;\n                return _this;\n            }\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            ZAxis.compose = function (ChartClass) {\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    addEvent(ChartClass, 'afterGetAxes', onChartAfterGetAxes);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.addZAxis = chartAddZAxis;\n                    chartProto.collectionsWithInit.zAxis = [chartProto.addZAxis];\n                    chartProto.collectionsWithUpdate.push('zAxis');\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            ZAxis.prototype.getSeriesExtremes = function () {\n                var _this = this;\n                var chart = this.chart;\n                this.hasVisibleSeries = false;\n                // Reset properties in case we're redrawing (#3353)\n                this.dataMin = this.dataMax = this.ignoreMinPadding = (this.ignoreMaxPadding = void 0);\n                if (this.stacking) {\n                    this.stacking.buildStacks();\n                }\n                // loop through this axis' series\n                this.series.forEach(function (series) {\n                    if (series.visible ||\n                        !chart.options.chart.ignoreHiddenSeries) {\n                        var threshold = series.options.threshold;\n                        _this.hasVisibleSeries = true;\n                        // Validate threshold in logarithmic axes\n                        if (_this.positiveValuesOnly && threshold <= 0) {\n                            threshold = void 0;\n                        }\n                        var zData = series.zData;\n                        if (zData.length) {\n                            _this.dataMin = Math.min(pick(_this.dataMin, zData[0]), Math.min.apply(null, zData));\n                            _this.dataMax = Math.max(pick(_this.dataMax, zData[0]), Math.max.apply(null, zData));\n                        }\n                    }\n                });\n            };\n            /**\n             * @private\n             */\n            ZAxis.prototype.setAxisSize = function () {\n                var chart = this.chart;\n                _super.prototype.setAxisSize.call(this);\n                this.width = this.len = (chart.options.chart.options3d &&\n                    chart.options.chart.options3d.depth) || 0;\n                this.right = chart.chartWidth - this.width - this.left;\n            };\n            /**\n             * @private\n             */\n            ZAxis.prototype.setOptions = function (userOptions) {\n                userOptions = merge({\n                    offset: 0,\n                    lineWidth: 0\n                }, userOptions);\n                // #14793, this used to be set on the prototype\n                this.isZAxis = true;\n                _super.prototype.setOptions.call(this, userOptions);\n                this.coll = 'zAxis';\n            };\n            return ZAxis;\n        }(Axis));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ZAxis;\n    });\n    _registerModule(_modules, 'Core/Axis/Axis3DDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @optionparent xAxis\n         */\n        var Axis3DDefaults = {\n                labels: {\n                    /**\n                     * Defines how the labels are be repositioned according to the 3D\n                     * chart orientation.\n                     *\n                     * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                     *   the tick marks, despite the chart orientation. This is the\n                     *   backwards compatible behavior, and causes skewing of X and Z\n                     *   axes.\n                     *\n                     * - `'chart'`: Preserve 3D position relative to the chart. This\n                     *   looks nice, but hard to read if the text isn't forward-facing.\n                     *\n                     * - `'flap'`: Rotated text along the axis to compensate for the\n                     *   chart orientation. This tries to maintain text as legible as\n                     *   possible on all orientations.\n                     *\n                     * - `'ortho'`: Rotated text along the axis direction so that the\n                     *   labels are orthogonal to the axis. This is very similar to\n                     *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                     *   still present).\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @since      5.0.15\n                     * @validvalue ['offset', 'chart', 'flap', 'ortho']\n                     * @product    highcharts\n                     * @requires   highcharts-3d\n                     */\n                    position3d: 'offset',\n                    /**\n                     * If enabled, the axis labels will skewed to follow the\n                     * perspective.\n                     *\n                     * This will fix overlapping labels and titles, but texts become\n                     * less legible due to the distortion.\n                     *\n                     * The final appearance depends heavily on `labels.position3d`.\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    skew3d: false\n                },\n                title: {\n                    /**\n                     * Defines how the title is repositioned according to the 3D chart\n                     * orientation.\n                     *\n                     * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                     *   the tick marks, despite the chart orientation. This is the\n                     *   backwards compatible behavior, and causes skewing of X and Z\n                     *   axes.\n                     *\n                     * - `'chart'`: Preserve 3D position relative to the chart. This\n                     *   looks nice, but hard to read if the text isn't forward-facing.\n                     *\n                     * - `'flap'`: Rotated text along the axis to compensate for the\n                     *   chart orientation. This tries to maintain text as legible as\n                     *   possible on all orientations.\n                     *\n                     * - `'ortho'`: Rotated text along the axis direction so that the\n                     *   labels are orthogonal to the axis. This is very similar to\n                     *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                     *   still present).\n                     *\n                     * - `undefined`: Will use the config from `labels.position3d`\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @type     {\"offset\"|\"chart\"|\"flap\"|\"ortho\"|null}\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    position3d: null,\n                    /**\n                     * If enabled, the axis title will skewed to follow the perspective.\n                     *\n                     * This will fix overlapping labels and titles, but texts become\n                     * less legible due to the distortion.\n                     *\n                     * The final appearance depends heavily on `title.position3d`.\n                     *\n                     * A `null` value will use the config from `labels.skew3d`.\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @type     {boolean|null}\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    skew3d: null\n                }\n            };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Axis3DDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/Tick3DComposition.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(TickClass) {\n            if (composedClasses.indexOf(TickClass) === -1) {\n                composedClasses.push(TickClass);\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                wrap(TickClass.prototype, 'getMarkPath', wrapTickGetMarkPath);\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            var axis3D = this.axis.axis3D;\n            if (axis3D) {\n                extend(e.pos, axis3D.fix3dPosition(e.pos));\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapTickGetMarkPath(proceed) {\n            var axis3D = this.axis.axis3D,\n                path = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            if (axis3D) {\n                var start = path[0];\n                var end = path[1];\n                if (start[0] === 'M' && end[0] === 'L') {\n                    var pArr = [\n                            axis3D.fix3dPosition({ x: start[1],\n                        y: start[2],\n                        z: 0 }),\n                            axis3D.fix3dPosition({ x: end[1],\n                        y: end[2],\n                        z: 0 })\n                        ];\n                    return this.axis.chart.renderer.toLineSegments(pArr);\n                }\n            }\n            return path;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Tick3DAdditions = {\n                compose: compose\n            };\n\n        return Tick3DAdditions;\n    });\n    _registerModule(_modules, 'Core/Axis/Axis3DComposition.js', [_modules['Core/Axis/Axis3DDefaults.js'], _modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Axis/Tick3DComposition.js'], _modules['Core/Utilities.js']], function (Axis3DDefaults, H, Math3D, Tick3D, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var deg2rad = H.deg2rad;\n        var perspective = Math3D.perspective,\n            perspective3D = Math3D.perspective3D,\n            shapeArea = Math3D.shapeArea;\n        var addEvent = U.addEvent,\n            merge = U.merge,\n            pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisAfterSetOptions() {\n            var axis = this,\n                chart = axis.chart,\n                options = axis.options;\n            if (chart.is3d && chart.is3d() && axis.coll !== 'colorAxis') {\n                options.tickWidth = pick(options.tickWidth, 0);\n                options.gridLineWidth = pick(options.gridLineWidth, 1);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisDrawCrosshair(e) {\n            var axis = this;\n            if (axis.chart.is3d() &&\n                axis.coll !== 'colorAxis') {\n                if (e.point) {\n                    e.point.crosshairPos = axis.isXAxis ?\n                        e.point.axisXpos :\n                        axis.len - e.point.axisYpos;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.axis3D) {\n                axis.axis3D = new Axis3DAdditions(axis);\n            }\n        }\n        /**\n         * Do not draw axislines in 3D.\n         * @private\n         */\n        function wrapAxisGetLinePath(proceed) {\n            var axis = this;\n            // Do not do this if the chart is not 3D\n            if (!axis.chart.is3d() || axis.coll === 'colorAxis') {\n                return proceed.apply(axis, [].slice.call(arguments, 1));\n            }\n            return [];\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetPlotBandPath(proceed) {\n            // Do not do this if the chart is not 3D\n            if (!this.chart.is3d() || this.coll === 'colorAxis') {\n                return proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            var args = arguments,\n                from = args[1],\n                to = args[2],\n                path = [],\n                fromPath = this.getPlotLinePath({ value: from }),\n                toPath = this.getPlotLinePath({ value: to });\n            if (fromPath && toPath) {\n                for (var i = 0; i < fromPath.length; i += 2) {\n                    var fromStartSeg = fromPath[i],\n                        fromEndSeg = fromPath[i + 1],\n                        toStartSeg = toPath[i],\n                        toEndSeg = toPath[i + 1];\n                    if (fromStartSeg[0] === 'M' &&\n                        fromEndSeg[0] === 'L' &&\n                        toStartSeg[0] === 'M' &&\n                        toEndSeg[0] === 'L') {\n                        path.push(fromStartSeg, fromEndSeg, toEndSeg, \n                        // lineTo instead of moveTo\n                        ['L', toStartSeg[1], toStartSeg[2]], ['Z']);\n                    }\n                }\n            }\n            return path;\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetPlotLinePath(proceed) {\n            var axis = this,\n                axis3D = axis.axis3D,\n                chart = axis.chart,\n                path = proceed.apply(axis,\n                [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (axis.coll === 'colorAxis' ||\n                !chart.chart3d ||\n                !chart.is3d()) {\n                return path;\n            }\n            if (path === null) {\n                return path;\n            }\n            var options3d = chart.options.chart.options3d,\n                d = axis.isZAxis ? chart.plotWidth : options3d.depth,\n                frame = chart.chart3d.frame3d,\n                startSegment = path[0],\n                endSegment = path[1];\n            var pArr,\n                pathSegments = [];\n            if (startSegment[0] === 'M' && endSegment[0] === 'L') {\n                pArr = [\n                    axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: 0 }),\n                    axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: d }),\n                    axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: 0 }),\n                    axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: d })\n                ];\n                if (!this.horiz) { // Y-Axis\n                    if (frame.front.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.back.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.left.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.right.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                else if (this.isZAxis) { // Z-Axis\n                    if (frame.left.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.right.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.top.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.bottom.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                else { // X-Axis\n                    if (frame.front.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.back.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.top.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.bottom.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                pathSegments = perspective(pathSegments, this.chart, false);\n            }\n            return chart.renderer.toLineSegments(pathSegments);\n        }\n        /**\n         * Wrap getSlotWidth function to calculate individual width value for each\n         * slot (#8042).\n         * @private\n         */\n        function wrapAxisGetSlotWidth(proceed, tick) {\n            var axis = this,\n                chart = axis.chart,\n                ticks = axis.ticks,\n                gridGroup = axis.gridGroup;\n            if (axis.categories &&\n                chart.frameShapes &&\n                chart.is3d() &&\n                gridGroup &&\n                tick &&\n                tick.label) {\n                var firstGridLine = (gridGroup.element.childNodes[0].getBBox()),\n                    frame3DLeft = chart.frameShapes.left.getBBox(),\n                    options3d = chart.options.chart.options3d,\n                    origin_1 = {\n                        x: chart.plotWidth / 2,\n                        y: chart.plotHeight / 2,\n                        z: options3d.depth / 2,\n                        vd: (pick(options3d.depth, 1) *\n                            pick(options3d.viewDistance, 0))\n                    },\n                    tickId = tick.pos,\n                    prevTick = ticks[tickId - 1],\n                    nextTick = ticks[tickId + 1];\n                var labelPos = void 0,\n                    prevLabelPos = void 0,\n                    nextLabelPos = void 0;\n                // Check whether the tick is not the first one and previous tick\n                // exists, then calculate position of previous label.\n                if (tickId !== 0 &&\n                    prevTick &&\n                    prevTick.label &&\n                    prevTick.label.xy) {\n                    prevLabelPos = perspective3D({\n                        x: prevTick.label.xy.x,\n                        y: prevTick.label.xy.y,\n                        z: null\n                    }, origin_1, origin_1.vd);\n                }\n                // If next label position is defined, then recalculate its position\n                // basing on the perspective.\n                if (nextTick && nextTick.label && nextTick.label.xy) {\n                    nextLabelPos = perspective3D({\n                        x: nextTick.label.xy.x,\n                        y: nextTick.label.xy.y,\n                        z: null\n                    }, origin_1, origin_1.vd);\n                }\n                labelPos = {\n                    x: tick.label.xy.x,\n                    y: tick.label.xy.y,\n                    z: null\n                };\n                labelPos = perspective3D(labelPos, origin_1, origin_1.vd);\n                // If tick is first one, check whether next label position is\n                // already calculated, then return difference between the first and\n                // the second label. If there is no next label position calculated,\n                // return the difference between the first grid line and left 3d\n                // frame.\n                return Math.abs(prevLabelPos ?\n                    labelPos.x - prevLabelPos.x : nextLabelPos ?\n                    nextLabelPos.x - labelPos.x :\n                    firstGridLine.x - frame3DLeft.x);\n            }\n            return proceed.apply(axis, [].slice.call(arguments, 1));\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetTitlePosition(proceed) {\n            var pos = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            return this.axis3D ?\n                this.axis3D.fix3dPosition(pos, true) :\n                pos;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Adds 3D support to axes.\n         * @private\n         * @class\n         */\n        var Axis3DAdditions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Axis3DAdditions(axis) {\n                    this.axis = axis;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends axis class with 3D support.\n             * @private\n             */\n            Axis3DAdditions.compose = function (AxisClass, TickClass) {\n                Tick3D.compose(TickClass);\n                if (composedClasses.indexOf(AxisClass) === -1) {\n                    composedClasses.push(AxisClass);\n                    merge(true, AxisClass.defaultOptions, Axis3DDefaults);\n                    AxisClass.keepProps.push('axis3D');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    addEvent(AxisClass, 'drawCrosshair', onAxisDrawCrosshair);\n                    var axisProto = AxisClass.prototype;\n                    wrap(axisProto, 'getLinePath', wrapAxisGetLinePath);\n                    wrap(axisProto, 'getPlotBandPath', wrapAxisGetPlotBandPath);\n                    wrap(axisProto, 'getPlotLinePath', wrapAxisGetPlotLinePath);\n                    wrap(axisProto, 'getSlotWidth', wrapAxisGetSlotWidth);\n                    wrap(axisProto, 'getTitlePosition', wrapAxisGetTitlePosition);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             * @param {Highcharts.Axis} axis\n             * Related axis.\n             * @param {Highcharts.Position3DObject} pos\n             * Position to fix.\n             * @param {boolean} [isTitle]\n             * Whether this is a title position.\n             * @return {Highcharts.Position3DObject}\n             * Fixed position.\n             */\n            Axis3DAdditions.prototype.fix3dPosition = function (pos, isTitle) {\n                var axis3D = this;\n                var axis = axis3D.axis;\n                var chart = axis.chart;\n                // Do not do this if the chart is not 3D\n                if (axis.coll === 'colorAxis' ||\n                    !chart.chart3d ||\n                    !chart.is3d()) {\n                    return pos;\n                }\n                var alpha = deg2rad * chart.options.chart.options3d.alpha,\n                    beta = deg2rad * chart.options.chart.options3d.beta,\n                    positionMode = pick(isTitle && axis.options.title.position3d,\n                    axis.options.labels.position3d),\n                    skew = pick(isTitle && axis.options.title.skew3d,\n                    axis.options.labels.skew3d),\n                    frame = chart.chart3d.frame3d,\n                    plotLeft = chart.plotLeft,\n                    plotRight = chart.plotWidth + plotLeft,\n                    plotTop = chart.plotTop,\n                    plotBottom = chart.plotHeight + plotTop;\n                var offsetX = 0,\n                    offsetY = 0,\n                    vecX,\n                    vecY = { x: 0,\n                    y: 1,\n                    z: 0 }, \n                    // Indicates that we are labelling an X or Z axis on the \"back\" of\n                    // the chart\n                    reverseFlap = false;\n                pos = axis.axis3D.swapZ({ x: pos.x, y: pos.y, z: 0 });\n                if (axis.isZAxis) { // Z Axis\n                    if (axis.opposite) {\n                        if (frame.axes.z.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.x = frame.axes.z.top.x;\n                        pos.y = frame.axes.z.top.y;\n                        vecX = frame.axes.z.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.z.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.x = frame.axes.z.bottom.x;\n                        pos.y = frame.axes.z.bottom.y;\n                        vecX = frame.axes.z.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else if (axis.horiz) { // X Axis\n                    if (axis.opposite) {\n                        if (frame.axes.x.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.y = frame.axes.x.top.y;\n                        pos.z = frame.axes.x.top.z;\n                        vecX = frame.axes.x.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.x.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.y = frame.axes.x.bottom.y;\n                        pos.z = frame.axes.x.bottom.z;\n                        vecX = frame.axes.x.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else { // Y Axis\n                    if (axis.opposite) {\n                        if (frame.axes.y.right === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotRight;\n                        pos.x = frame.axes.y.right.x;\n                        pos.z = frame.axes.y.right.z;\n                        vecX = frame.axes.y.right.xDir;\n                        // Rotate 90º on opposite edge\n                        vecX = { x: vecX.z, y: vecX.y, z: -vecX.x };\n                    }\n                    else {\n                        if (frame.axes.y.left === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotLeft;\n                        pos.x = frame.axes.y.left.x;\n                        pos.z = frame.axes.y.left.z;\n                        vecX = frame.axes.y.left.xDir;\n                    }\n                }\n                if (positionMode === 'chart') {\n                    // Labels preserve their direction relative to the chart\n                    // nothing to do\n                }\n                else if (positionMode === 'flap') {\n                    // Labels are rotated around the axis direction to face the screen\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        var sin = Math.sin(alpha);\n                        var cos = Math.cos(alpha);\n                        if (axis.opposite) {\n                            sin = -sin;\n                        }\n                        if (reverseFlap) {\n                            sin = -sin;\n                        }\n                        vecY = { x: vecX.z * sin, y: cos, z: -vecX.x * sin };\n                    }\n                }\n                else if (positionMode === 'ortho') {\n                    // Labels will be rotated to be ortogonal to the axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        var sina = Math.sin(alpha);\n                        var cosa = Math.cos(alpha);\n                        var sinb = Math.sin(beta);\n                        var cosb = Math.cos(beta);\n                        var vecZ = { x: sinb * cosa,\n                            y: -sina,\n                            z: -cosa * cosb };\n                        vecY = {\n                            x: vecX.y * vecZ.z - vecX.z * vecZ.y,\n                            y: vecX.z * vecZ.x - vecX.x * vecZ.z,\n                            z: vecX.x * vecZ.y - vecX.y * vecZ.x\n                        };\n                        var scale = 1 / Math.sqrt(vecY.x * vecY.x + vecY.y * vecY.y + vecY.z * vecY.z);\n                        if (reverseFlap) {\n                            scale = -scale;\n                        }\n                        vecY = {\n                            x: scale * vecY.x, y: scale * vecY.y, z: scale * vecY.z\n                        };\n                    }\n                }\n                else { // positionMode  == 'offset'\n                    // Labels will be skewd to maintain vertical / horizontal offsets\n                    // from axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        vecY = {\n                            x: Math.sin(beta) * Math.sin(alpha),\n                            y: Math.cos(alpha),\n                            z: -Math.cos(beta) * Math.sin(alpha)\n                        };\n                    }\n                }\n                pos.x += offsetX * vecX.x + offsetY * vecY.x;\n                pos.y += offsetX * vecX.y + offsetY * vecY.y;\n                pos.z += offsetX * vecX.z + offsetY * vecY.z;\n                var projected = perspective([pos],\n                    axis.chart)[0];\n                if (skew) {\n                    // Check if the label text would be mirrored\n                    var isMirrored = shapeArea(perspective([\n                            pos,\n                            { x: pos.x + vecX.x,\n                        y: pos.y + vecX.y,\n                        z: pos.z + vecX.z },\n                            { x: pos.x + vecY.x,\n                        y: pos.y + vecY.y,\n                        z: pos.z + vecY.z }\n                        ],\n                        axis.chart)) < 0;\n                    if (isMirrored) {\n                        vecX = { x: -vecX.x, y: -vecX.y, z: -vecX.z };\n                    }\n                    var pointsProjected = perspective([\n                            { x: pos.x,\n                        y: pos.y,\n                        z: pos.z },\n                            { x: pos.x + vecX.x,\n                        y: pos.y + vecX.y,\n                        z: pos.z + vecX.z },\n                            { x: pos.x + vecY.x,\n                        y: pos.y + vecY.y,\n                        z: pos.z + vecY.z }\n                        ],\n                        axis.chart);\n                    projected.matrix = [\n                        pointsProjected[1].x - pointsProjected[0].x,\n                        pointsProjected[1].y - pointsProjected[0].y,\n                        pointsProjected[2].x - pointsProjected[0].x,\n                        pointsProjected[2].y - pointsProjected[0].y,\n                        projected.x,\n                        projected.y\n                    ];\n                    projected.matrix[4] -= projected.x * projected.matrix[0] +\n                        projected.y * projected.matrix[2];\n                    projected.matrix[5] -= projected.x * projected.matrix[1] +\n                        projected.y * projected.matrix[3];\n                }\n                return projected;\n            };\n            /**\n             * @private\n             */\n            Axis3DAdditions.prototype.swapZ = function (p, insidePlotArea) {\n                var axis = this.axis;\n                if (axis.isZAxis) {\n                    var plotLeft = insidePlotArea ? 0 : axis.chart.plotLeft;\n                    return {\n                        x: plotLeft + p.z,\n                        y: p.y,\n                        z: p.x - plotLeft\n                    };\n                }\n                return p;\n            };\n            return Axis3DAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Axis3DAdditions;\n    });\n    _registerModule(_modules, 'Core/Series/Series3D.js', [_modules['Core/Math3D.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Math3D, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extension to the Series object in 3D charts.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var perspective = Math3D.perspective;\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            merge = U.merge,\n            pick = U.pick,\n            isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Series3D = /** @class */ (function (_super) {\n                __extends(Series3D, _super);\n            function Series3D() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            Series3D.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                if (this.chart.is3d()) {\n                    this.translate3dPoints();\n                }\n            };\n            /**\n             * Translate the plotX, plotY properties and add plotZ.\n             * @private\n             */\n            Series3D.prototype.translate3dPoints = function () {\n                var series = this,\n                    seriesOptions = series.options,\n                    chart = series.chart,\n                    zAxis = pick(series.zAxis,\n                    chart.options.zAxis[0]),\n                    rawPoints = [],\n                    rawPoint,\n                    projectedPoints,\n                    projectedPoint,\n                    zValue,\n                    i,\n                    rawPointsX = [],\n                    stack = seriesOptions.stacking ?\n                        (isNumber(seriesOptions.stack) ? seriesOptions.stack : 0) :\n                        series.index || 0;\n                series.zPadding = stack *\n                    (seriesOptions.depth || 0 + (seriesOptions.groupZPadding || 1));\n                for (i = 0; i < series.data.length; i++) {\n                    rawPoint = series.data[i];\n                    if (zAxis && zAxis.translate) {\n                        zValue = zAxis.logarithmic && zAxis.val2lin ?\n                            zAxis.val2lin(rawPoint.z) :\n                            rawPoint.z; // #4562\n                        rawPoint.plotZ = zAxis.translate(zValue);\n                        rawPoint.isInside = rawPoint.isInside ?\n                            (zValue >= zAxis.min &&\n                                zValue <= zAxis.max) :\n                            false;\n                    }\n                    else {\n                        rawPoint.plotZ = series.zPadding;\n                    }\n                    rawPoint.axisXpos = rawPoint.plotX;\n                    rawPoint.axisYpos = rawPoint.plotY;\n                    rawPoint.axisZpos = rawPoint.plotZ;\n                    rawPoints.push({\n                        x: rawPoint.plotX,\n                        y: rawPoint.plotY,\n                        z: rawPoint.plotZ\n                    });\n                    rawPointsX.push(rawPoint.plotX || 0);\n                }\n                series.rawPointsX = rawPointsX;\n                projectedPoints = perspective(rawPoints, chart, true);\n                for (i = 0; i < series.data.length; i++) {\n                    rawPoint = series.data[i];\n                    projectedPoint = projectedPoints[i];\n                    rawPoint.plotX = projectedPoint.x;\n                    rawPoint.plotY = projectedPoint.y;\n                    rawPoint.plotZ = projectedPoint.z;\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Series3D.defaultOptions = merge(Series.defaultOptions);\n            return Series3D;\n        }(Series));\n        /* *\n         *\n         *  Compatibility\n         *\n         * */\n        /* eslint-disable no-invalid-this */\n        addEvent(Series, 'afterTranslate', function () {\n            if (this.chart.is3d()) {\n                this.translate3dPoints();\n            }\n        });\n        /* eslint-enable no-invalid-this */\n        extend(Series.prototype, {\n            translate3dPoints: Series3D.prototype.translate3dPoints\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Series3D;\n    });\n    _registerModule(_modules, 'Series/Area3D/Area3DSeries.js', [_modules['Core/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Math3D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var perspective = Math3D.perspective;\n        var lineProto = SeriesRegistry.seriesTypes.line.prototype;\n        var pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        function compose(AreaSeriesClass) {\n            if (composedClasses.indexOf(AreaSeriesClass) === -1) {\n                composedClasses.push(AreaSeriesClass);\n                wrap(AreaSeriesClass.prototype, 'getGraphPath', wrapAreaSeriesGetGraphPath);\n            }\n        }\n        function wrapAreaSeriesGetGraphPath(proceed) {\n            var series = this,\n                svgPath = proceed.apply(series,\n                [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (!series.chart.is3d()) {\n                return svgPath;\n            }\n            var getGraphPath = lineProto.getGraphPath,\n                options = series.options,\n                translatedThreshold = Math.round(// #10909\n                series.yAxis.getThreshold(options.threshold));\n            var bottomPoints = [];\n            if (series.rawPointsX) {\n                for (var i = 0; i < series.points.length; i++) {\n                    bottomPoints.push({\n                        x: series.rawPointsX[i],\n                        y: options.stacking ?\n                            series.points[i].yBottom : translatedThreshold,\n                        z: series.zPadding\n                    });\n                }\n            }\n            var options3d = series.chart.options.chart.options3d;\n            bottomPoints = perspective(bottomPoints, series.chart, true).map(function (point) { return ({ plotX: point.x, plotY: point.y, plotZ: point.z }); });\n            if (series.group && options3d && options3d.depth && options3d.beta) {\n                // Markers should take the global zIndex of series group.\n                if (series.markerGroup) {\n                    series.markerGroup.add(series.group);\n                    series.markerGroup.attr({\n                        translateX: 0,\n                        translateY: 0\n                    });\n                }\n                series.group.attr({\n                    zIndex: Math.max(1, (options3d.beta > 270 || options3d.beta < 90) ?\n                        options3d.depth - Math.round(series.zPadding || 0) :\n                        Math.round(series.zPadding || 0))\n                });\n            }\n            bottomPoints.reversed = true;\n            var bottomPath = getGraphPath.call(series,\n                bottomPoints,\n                true,\n                true);\n            if (bottomPath[0] && bottomPath[0][0] === 'M') {\n                bottomPath[0] = ['L', bottomPath[0][1], bottomPath[0][2]];\n            }\n            if (series.areaPath) {\n                // Remove previously used bottomPath and add the new one.\n                var areaPath = series.areaPath.splice(0,\n                    series.areaPath.length / 2).concat(bottomPath);\n                // Use old xMap in the new areaPath\n                areaPath.xMap = series.areaPath.xMap;\n                series.areaPath = areaPath;\n            }\n            return svgPath;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Area3DSeries = {\n                compose: compose\n            };\n\n        return Area3DSeries;\n    });\n    _registerModule(_modules, 'Series/Column3D/Column3DComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (ColumnSeries, H, Series, Math3D, SeriesRegistry, StackItem, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var columnProto = ColumnSeries.prototype;\n        var svg = H.svg;\n        var perspective = Math3D.perspective;\n        var addEvent = U.addEvent,\n            pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable no-invalid-this */\n        /**\n         * @private\n         * @param {Highcharts.Chart} chart\n         * Chart with stacks\n         * @param {string} stacking\n         * Stacking option\n         */\n        function retrieveStacks(chart, stacking) {\n            var series = chart.series,\n                stacks = { totalStacks: 0 };\n            var stackNumber,\n                i = 1;\n            series.forEach(function (s) {\n                stackNumber = pick(s.options.stack, (stacking ? 0 : series.length - 1 - s.index)); // #3841, #4532\n                if (!stacks[stackNumber]) {\n                    stacks[stackNumber] = { series: [s], position: i };\n                    i++;\n                }\n                else {\n                    stacks[stackNumber].series.push(s);\n                }\n            });\n            stacks.totalStacks = i + 1;\n            return stacks;\n        }\n        wrap(columnProto, 'translate', function (proceed) {\n            proceed.apply(this, [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (this.chart.is3d()) {\n                this.translate3dShapes();\n            }\n        });\n        // Don't use justifyDataLabel when point is outsidePlot\n        wrap(Series.prototype, 'justifyDataLabel', function (proceed) {\n            return !(arguments[2].outside3dPlot) ?\n                proceed.apply(this, [].slice.call(arguments, 1)) :\n                false;\n        });\n        columnProto.translate3dPoints = function () { };\n        columnProto.translate3dShapes = function () {\n            var series = this,\n                chart = series.chart,\n                seriesOptions = series.options,\n                depth = seriesOptions.depth,\n                stack = seriesOptions.stacking ?\n                    (seriesOptions.stack || 0) :\n                    series.index, // #4743\n                z = stack * (depth + (seriesOptions.groupZPadding || 1)),\n                borderCrisp = series.borderWidth % 2 ? 0.5 : 0,\n                point2dPos; // Position of point in 2D, used for 3D position calculation\n                if (chart.inverted && !series.yAxis.reversed) {\n                    borderCrisp *= -1;\n            }\n            if (seriesOptions.grouping !== false) {\n                z = 0;\n            }\n            z += (seriesOptions.groupZPadding || 1);\n            series.data.forEach(function (point) {\n                // #7103 Reset outside3dPlot flag\n                point.outside3dPlot = null;\n                if (point.y !== null) {\n                    var shapeArgs_1 = point.shapeArgs, tooltipPos = point.tooltipPos, \n                        // Array for final shapeArgs calculation.\n                        // We are checking two dimensions (x and y).\n                        dimensions = [['x', 'width'], ['y', 'height']], borderlessBase_1; // Crisped rects can have +/- 0.5 pixels offset.\n                        // #3131 We need to check if column is inside plotArea.\n                        dimensions.forEach(function (d) {\n                            borderlessBase_1 = shapeArgs_1[d[0]] - borderCrisp;\n                        if (borderlessBase_1 < 0) {\n                            // If borderLessBase is smaller than 0, it is needed to set\n                            // its value to 0 or 0.5 depending on borderWidth\n                            // borderWidth may be even or odd.\n                            shapeArgs_1[d[1]] +=\n                                shapeArgs_1[d[0]] + borderCrisp;\n                            shapeArgs_1[d[0]] = -borderCrisp;\n                            borderlessBase_1 = 0;\n                        }\n                        if ((borderlessBase_1 + shapeArgs_1[d[1]] >\n                            series[d[0] + 'Axis'].len) &&\n                            // Do not change height/width of column if 0 (#6708)\n                            shapeArgs_1[d[1]] !== 0) {\n                            shapeArgs_1[d[1]] =\n                                series[d[0] + 'Axis'].len -\n                                    shapeArgs_1[d[0]];\n                        }\n                        if (\n                        // Do not remove columns with zero height/width.\n                        (shapeArgs_1[d[1]] !== 0) &&\n                            (shapeArgs_1[d[0]] >=\n                                series[d[0] + 'Axis'].len ||\n                                shapeArgs_1[d[0]] + shapeArgs_1[d[1]] <=\n                                    borderCrisp)) {\n                            // Set args to 0 if column is outside the chart.\n                            for (var key in shapeArgs_1) { // eslint-disable-line guard-for-in\n                                // #13840\n                                shapeArgs_1[key] = key === 'y' ? -9999 : 0;\n                            }\n                            // #7103 outside3dPlot flag is set on Points which are\n                            // currently outside of plot.\n                            point.outside3dPlot = true;\n                        }\n                    });\n                    // Change from 2d to 3d\n                    if (point.shapeType === 'rect') {\n                        point.shapeType = 'cuboid';\n                    }\n                    shapeArgs_1.z = z;\n                    shapeArgs_1.depth = depth;\n                    shapeArgs_1.insidePlotArea = true;\n                    // Point's position in 2D\n                    point2dPos = {\n                        x: shapeArgs_1.x + shapeArgs_1.width / 2,\n                        y: shapeArgs_1.y,\n                        z: z + depth / 2 // The center of column in Z dimension\n                    };\n                    // Recalculate point positions for inverted graphs\n                    if (chart.inverted) {\n                        point2dPos.x = shapeArgs_1.height;\n                        point2dPos.y = point.clientX;\n                    }\n                    // Calculate and store point's position in 3D,\n                    // using perspective method.\n                    point.plot3d = perspective([point2dPos], chart, true, false)[0];\n                    // Translate the tooltip position in 3d space\n                    tooltipPos = perspective([{\n                            x: tooltipPos[0],\n                            y: tooltipPos[1],\n                            z: z + depth / 2 // The center of column in Z dimension\n                        }], chart, true, false)[0];\n                    point.tooltipPos = [tooltipPos.x, tooltipPos.y];\n                }\n            });\n            // store for later use #4067\n            series.z = z;\n        };\n        wrap(columnProto, 'animate', function (proceed) {\n            if (!this.chart.is3d()) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            else {\n                var args = arguments,\n                    init = args[1],\n                    yAxis_1 = this.yAxis,\n                    series_1 = this,\n                    reversed_1 = this.yAxis.reversed;\n                if (svg) { // VML is too slow anyway\n                    if (init) {\n                        series_1.data.forEach(function (point) {\n                            if (point.y !== null) {\n                                point.height = point.shapeArgs.height;\n                                point.shapey = point.shapeArgs.y; // #2968\n                                point.shapeArgs.height = 1;\n                                if (!reversed_1) {\n                                    if (point.stackY) {\n                                        point.shapeArgs.y =\n                                            point.plotY +\n                                                yAxis_1.translate(point.stackY);\n                                    }\n                                    else {\n                                        point.shapeArgs.y =\n                                            point.plotY +\n                                                (point.negative ?\n                                                    -point.height :\n                                                    point.height);\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    else { // run the animation\n                        series_1.data.forEach(function (point) {\n                            if (point.y !== null) {\n                                point.shapeArgs.height = point.height;\n                                point.shapeArgs.y = point.shapey; // #2968\n                                // null value do not have a graphic\n                                if (point.graphic) {\n                                    point.graphic[point.outside3dPlot ?\n                                        'attr' :\n                                        'animate'](point.shapeArgs, series_1.options.animation);\n                                }\n                            }\n                        });\n                        // redraw datalabels to the correct position\n                        this.drawDataLabels();\n                    }\n                }\n            }\n        });\n        // In case of 3d columns there is no sense to add this columns to a specific\n        // series group - if series is added to a group all columns will have the same\n        // zIndex in comparison with different series.\n        wrap(columnProto, 'plotGroup', function (proceed, prop, _name, _visibility, _zIndex, parent) {\n            if (prop !== 'dataLabelsGroup') {\n                if (this.chart.is3d()) {\n                    if (this[prop]) {\n                        delete this[prop];\n                    }\n                    if (parent) {\n                        if (!this.chart.columnGroup) {\n                            this.chart.columnGroup =\n                                this.chart.renderer.g('columnGroup').add(parent);\n                        }\n                        this[prop] = this.chart.columnGroup;\n                        this.chart.columnGroup.attr(this.getPlotBox());\n                        this[prop].survive = true;\n                        if (prop === 'group' || prop === 'markerGroup') {\n                            arguments[3] = 'visible';\n                            // For 3D column group and markerGroup should be visible\n                        }\n                    }\n                }\n            }\n            return proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        });\n        // When series is not added to group it is needed to change setVisible method to\n        // allow correct Legend funcionality. This wrap is basing on pie chart series.\n        wrap(columnProto, 'setVisible', function (proceed, vis) {\n            var series = this;\n            if (series.chart.is3d()) {\n                series.data.forEach(function (point) {\n                    point.visible = point.options.visible = vis =\n                        typeof vis === 'undefined' ?\n                            !pick(series.visible, point.visible) : vis;\n                    series.options.data[series.data.indexOf(point)] =\n                        point.options;\n                    if (point.graphic) {\n                        point.graphic.attr({\n                            visibility: vis ? 'visible' : 'hidden'\n                        });\n                    }\n                });\n            }\n            proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        });\n        addEvent(ColumnSeries, 'afterInit', function () {\n            if (this.chart.is3d()) {\n                var series = this,\n                    seriesOptions = this.options,\n                    grouping = seriesOptions.grouping,\n                    stacking = seriesOptions.stacking,\n                    reversedStacks = this.yAxis.options.reversedStacks,\n                    z = 0;\n                // @todo grouping === true ?\n                if (!(typeof grouping !== 'undefined' && !grouping)) {\n                    var stacks = retrieveStacks(this.chart,\n                        stacking),\n                        stack = seriesOptions.stack || 0,\n                        i = // position within the stack\n                         void 0; // position within the stack\n                        for (i = 0; i < stacks[stack].series.length; i++) {\n                            if (stacks[stack].series[i] === this) {\n                                break;\n                        }\n                    }\n                    z = (10 * (stacks.totalStacks - stacks[stack].position)) +\n                        (reversedStacks ? i : -i); // #4369\n                    // In case when axis is reversed, columns are also reversed inside\n                    // the group (#3737)\n                    if (!this.xAxis.reversed) {\n                        z = (stacks.totalStacks * 10) - z;\n                    }\n                }\n                seriesOptions.depth = seriesOptions.depth || 25;\n                series.z = series.z || 0;\n                seriesOptions.zIndex = z;\n            }\n        });\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * @private\n         */\n        function pointAttribs(proceed) {\n            var attr = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            if (this.chart.is3d && this.chart.is3d()) {\n                // Set the fill color to the fill color to provide a smooth edge\n                attr.stroke = this.options.edgeColor || attr.fill;\n                attr['stroke-width'] = pick(this.options.edgeWidth, 1); // #4055\n            }\n            return attr;\n        }\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * In 3D mode, all column-series are rendered in one main group. Because of that\n         * we need to apply inactive state on all points.\n         * @private\n         */\n        function setState(proceed, state, inherit) {\n            var is3d = this.chart.is3d && this.chart.is3d();\n            if (is3d) {\n                this.options.inactiveOtherPoints = true;\n            }\n            proceed.call(this, state, inherit);\n            if (is3d) {\n                this.options.inactiveOtherPoints = false;\n            }\n        }\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * In 3D mode, simple checking for a new shape to animate is not enough.\n         * Additionally check if graphic is a group of elements\n         * @private\n         */\n        function hasNewShapeType(proceed) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return this.series.chart.is3d() ?\n                this.graphic && this.graphic.element.nodeName !== 'g' :\n                proceed.apply(this, args);\n        }\n        wrap(columnProto, 'pointAttribs', pointAttribs);\n        wrap(columnProto, 'setState', setState);\n        wrap(columnProto.pointClass.prototype, 'hasNewShapeType', hasNewShapeType);\n        if (SeriesRegistry.seriesTypes.columnRange) {\n            var columnRangeProto = SeriesRegistry.seriesTypes.columnrange.prototype;\n            wrap(columnRangeProto, 'pointAttribs', pointAttribs);\n            wrap(columnRangeProto, 'setState', setState);\n            wrap(columnRangeProto.pointClass.prototype, 'hasNewShapeType', hasNewShapeType);\n            columnRangeProto.plotGroup = columnProto.plotGroup;\n            columnRangeProto.setVisible = columnProto.setVisible;\n        }\n        wrap(Series.prototype, 'alignDataLabel', function (proceed, point, dataLabel, options, alignTo) {\n            var chart = this.chart;\n            // In 3D we need to pass point.outsidePlot option to the justifyDataLabel\n            // method for disabling justifying dataLabels in columns outside plot\n            options.outside3dPlot = point.outside3dPlot;\n            // Only do this for 3D columns and it's derived series\n            if (chart.is3d() &&\n                this.is('column')) {\n                var series = this,\n                    seriesOptions = series.options,\n                    inside = pick(options.inside, !!series.options.stacking),\n                    options3d = chart.options.chart.options3d,\n                    xOffset = point.pointWidth / 2 || 0;\n                var dLPosition = {\n                        x: alignTo.x + xOffset,\n                        y: alignTo.y,\n                        z: series.z + seriesOptions.depth / 2\n                    };\n                if (chart.inverted) {\n                    // Inside dataLabels are positioned according to above\n                    // logic and there is no need to position them using\n                    // non-3D algorighm (that use alignTo.width)\n                    if (inside) {\n                        alignTo.width = 0;\n                        dLPosition.x += point.shapeArgs.height / 2;\n                    }\n                    // When chart is upside down\n                    // (alpha angle between 180 and 360 degrees)\n                    // it is needed to add column width to calculated value.\n                    if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                        dLPosition.y += point.shapeArgs.width;\n                    }\n                }\n                // dLPosition is recalculated for 3D graphs\n                dLPosition = perspective([dLPosition], chart, true, false)[0];\n                alignTo.x = dLPosition.x - xOffset;\n                // #7103 If point is outside of plotArea, hide data label.\n                alignTo.y = point.outside3dPlot ? -9e9 : dLPosition.y;\n            }\n            proceed.apply(this, [].slice.call(arguments, 1));\n        });\n        // Added stackLabels position calculation for 3D charts.\n        wrap(StackItem.prototype, 'getStackBox', function (proceed, chart, stackItem, x, y, xWidth, h, axis) {\n            var stackBox = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            // Only do this for 3D graph\n            if (chart.is3d() && stackItem.base) {\n                // First element of stackItem.base is an index of base series.\n                var baseSeriesInd = +(stackItem.base).split(',')[0];\n                var columnSeries = chart.series[baseSeriesInd];\n                var options3d = chart.options.chart.options3d;\n                // Only do this if base series is a column or inherited type,\n                // use its barW, z and depth parameters\n                // for correct stackLabels position calculation\n                if (columnSeries &&\n                    columnSeries instanceof SeriesRegistry.seriesTypes.column) {\n                    var dLPosition = {\n                            x: stackBox.x + (chart.inverted ? h : xWidth / 2),\n                            y: stackBox.y,\n                            z: columnSeries.options.depth / 2\n                        };\n                    if (chart.inverted) {\n                        // Do not use default offset calculation logic\n                        // for 3D inverted stackLabels.\n                        stackBox.width = 0;\n                        // When chart is upside down\n                        // (alpha angle between 180 and 360 degrees)\n                        // it is needed to add column width to calculated value.\n                        if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                            dLPosition.y += xWidth;\n                        }\n                    }\n                    dLPosition = perspective([dLPosition], chart, true, false)[0];\n                    stackBox.x = dLPosition.x - xWidth / 2;\n                    stackBox.y = dLPosition.y;\n                }\n            }\n            return stackBox;\n        });\n        /*\n            @merge v6.2\n            @todo\n            EXTENSION FOR 3D CYLINDRICAL COLUMNS\n            Not supported\n        */\n        /*\n        let defaultOptions = H.getOptions();\n        defaultOptions.plotOptions.cylinder =\n            merge(defaultOptions.plotOptions.column);\n        let CylinderSeries = extendClass(seriesTypes.column, {\n            type: 'cylinder'\n        });\n        seriesTypes.cylinder = CylinderSeries;\n\n        wrap(seriesTypes.cylinder.prototype, 'translate', function (proceed) {\n            proceed.apply(this, [].slice.call(arguments, 1));\n\n            // Do not do this if the chart is not 3D\n            if (!this.chart.is3d()) {\n                return;\n            }\n\n            let series = this,\n                chart = series.chart,\n                options = chart.options,\n                cylOptions = options.plotOptions.cylinder,\n                options3d = options.chart.options3d,\n                depth = cylOptions.depth || 0,\n                alpha = chart.alpha3d;\n\n            let z = cylOptions.stacking ?\n                (this.options.stack || 0) * depth :\n                series._i * depth;\n            z += depth / 2;\n\n            if (cylOptions.grouping !== false) { z = 0; }\n\n            each(series.data, function (point) {\n                let shapeArgs = point.shapeArgs,\n                    deg2rad = H.deg2rad;\n                point.shapeType = 'arc3d';\n                shapeArgs.x += depth / 2;\n                shapeArgs.z = z;\n                shapeArgs.start = 0;\n                shapeArgs.end = 2 * PI;\n                shapeArgs.r = depth * 0.95;\n                shapeArgs.innerR = 0;\n                shapeArgs.depth =\n                    shapeArgs.height * (1 / sin((90 - alpha) * deg2rad)) - z;\n                shapeArgs.alpha = 90 - alpha;\n                shapeArgs.beta = 0;\n            });\n        });\n        */\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Depth of the columns in a 3D column chart.\n         *\n         * @type      {number}\n         * @default   25\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.depth\n         */\n        /**\n         * 3D columns only. The color of the edges. Similar to `borderColor`, except it\n         * defaults to the same color as the column.\n         *\n         * @type      {Highcharts.ColorString}\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeColor\n         */\n        /**\n         * 3D columns only. The width of the colored edges.\n         *\n         * @type      {number}\n         * @default   1\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeWidth\n         */\n        /**\n         * The spacing between columns on the Z Axis in a 3D chart.\n         *\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.groupZPadding\n         */\n        ''; // keeps doclets above in transpiled file\n\n        return ColumnSeries;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var PiePoint = SeriesRegistry.seriesTypes.pie.prototype.pointClass;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var superHaloPath = PiePoint.prototype.haloPath;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Pie3DPoint = /** @class */ (function (_super) {\n                __extends(Pie3DPoint, _super);\n            function Pie3DPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.series = void 0;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            Pie3DPoint.prototype.haloPath = function () {\n                return this.series.chart.is3d() ?\n                    [] : superHaloPath.apply(this, arguments);\n            };\n            return Pie3DPoint;\n        }(PiePoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Pie3DPoint;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DSeries.js', [_modules['Core/Globals.js'], _modules['Series/Pie3D/Pie3DPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, Pie3DPoint, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var deg2rad = H.deg2rad,\n            svg = H.svg;\n        var PieSeries = SeriesRegistry.seriesTypes.pie;\n        var extend = U.extend,\n            pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Pie3DSeries = /** @class */ (function (_super) {\n                __extends(Pie3DSeries, _super);\n            function Pie3DSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.addPoint = function () {\n                _super.prototype.addPoint.apply(this, arguments);\n                if (this.chart.is3d()) {\n                    // destroy (and rebuild) everything!!!\n                    this.update(this.userOptions, true); // #3845 pass the old options\n                }\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.animate = function (init) {\n                if (!this.chart.is3d()) {\n                    _super.prototype.animate.apply(this, arguments);\n                }\n                else {\n                    var animation = this.options.animation,\n                        attribs = void 0,\n                        center = this.center,\n                        group = this.group,\n                        markerGroup = this.markerGroup;\n                    if (svg) { // VML is too slow anyway\n                        if (animation === true) {\n                            animation = {};\n                        }\n                        // Initialize the animation\n                        if (init) {\n                            // Scale down the group and place it in the center\n                            group.oldtranslateX = pick(group.oldtranslateX, group.translateX);\n                            group.oldtranslateY = pick(group.oldtranslateY, group.translateY);\n                            attribs = {\n                                translateX: center[0],\n                                translateY: center[1],\n                                scaleX: 0.001,\n                                scaleY: 0.001\n                            };\n                            group.attr(attribs);\n                            if (markerGroup) {\n                                markerGroup.attrSetters = group.attrSetters;\n                                markerGroup.attr(attribs);\n                            }\n                            // Run the animation\n                        }\n                        else {\n                            attribs = {\n                                translateX: group.oldtranslateX,\n                                translateY: group.oldtranslateY,\n                                scaleX: 1,\n                                scaleY: 1\n                            };\n                            group.animate(attribs, animation);\n                            if (markerGroup) {\n                                markerGroup.animate(attribs, animation);\n                            }\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.drawDataLabels = function () {\n                if (this.chart.is3d()) {\n                    var series = this,\n                        chart = series.chart,\n                        options3d_1 = chart.options.chart.options3d;\n                    series.data.forEach(function (point) {\n                        var shapeArgs = point.shapeArgs,\n                            r = shapeArgs.r, \n                            // #3240 issue with datalabels for 0 and null values\n                            a1 = ((shapeArgs.alpha || options3d_1.alpha) * deg2rad),\n                            b1 = ((shapeArgs.beta || options3d_1.beta) * deg2rad),\n                            a2 = ((shapeArgs.start + shapeArgs.end) / 2),\n                            labelPosition = point.labelPosition,\n                            connectorPosition = (labelPosition.connectorPosition),\n                            yOffset = (-r * (1 - Math.cos(a1)) * Math.sin(a2)),\n                            xOffset = r * (Math.cos(b1) - 1) * Math.cos(a2);\n                        // Apply perspective on label positions\n                        [\n                            labelPosition.natural,\n                            connectorPosition.breakAt,\n                            connectorPosition.touchingSliceAt\n                        ].forEach(function (coordinates) {\n                            coordinates.x += xOffset;\n                            coordinates.y += yOffset;\n                        });\n                    });\n                }\n                _super.prototype.drawDataLabels.apply(this, arguments);\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.pointAttribs = function (point) {\n                var attr = _super.prototype.pointAttribs.apply(this,\n                    arguments),\n                    options = this.options;\n                if (this.chart.is3d() && !this.chart.styledMode) {\n                    attr.stroke = options.edgeColor || point.color || this.color;\n                    attr['stroke-width'] = pick(options.edgeWidth, 1);\n                }\n                return attr;\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                var series = this,\n                    seriesOptions = series.options,\n                    depth = seriesOptions.depth || 0,\n                    options3d = series.chart.options.chart.options3d,\n                    alpha = options3d.alpha,\n                    beta = options3d.beta,\n                    z = seriesOptions.stacking ?\n                        (seriesOptions.stack || 0) * depth :\n                        series._i * depth;\n                z += depth / 2;\n                if (seriesOptions.grouping !== false) {\n                    z = 0;\n                }\n                series.data.forEach(function (point) {\n                    var shapeArgs = point.shapeArgs,\n                        angle;\n                    point.shapeType = 'arc3d';\n                    shapeArgs.z = z;\n                    shapeArgs.depth = depth * 0.75;\n                    shapeArgs.alpha = alpha;\n                    shapeArgs.beta = beta;\n                    shapeArgs.center = series.center;\n                    angle = (shapeArgs.end + shapeArgs.start) / 2;\n                    point.slicedTranslation = {\n                        translateX: Math.round(Math.cos(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad)),\n                        translateY: Math.round(Math.sin(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad))\n                    };\n                });\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.drawTracker = function () {\n                _super.prototype.drawTracker.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                this.points.forEach(function (point) {\n                    if (point.graphic) {\n                        ['out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                            if (point.graphic) {\n                                point.graphic[face].element.point = point;\n                            }\n                        });\n                    }\n                });\n            };\n            return Pie3DSeries;\n        }(PieSeries));\n        extend(Pie3DSeries.prototype, {\n            pointClass: Pie3DPoint\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The thickness of a 3D pie.\n         *\n         * @type      {number}\n         * @default   0\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.pie.depth\n         */\n        ''; // keeps doclets above after transpilation\n\n        return Pie3DSeries;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DComposition.js', [_modules['Series/Pie3D/Pie3DPoint.js'], _modules['Series/Pie3D/Pie3DSeries.js'], _modules['Core/Series/SeriesRegistry.js']], function (Pie3DPoint, Pie3DSeries, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        SeriesRegistry.seriesTypes.pie.prototype.pointClass.prototype\n            .haloPath = Pie3DPoint.prototype.haloPath;\n        SeriesRegistry.seriesTypes.pie = Pie3DSeries;\n\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DPoint.js', [_modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Utilities.js']], function (ScatterSeries, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defined = U.defined;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Scatter3DPoint = /** @class */ (function (_super) {\n                __extends(Scatter3DPoint, _super);\n            function Scatter3DPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.options = void 0;\n                _this.series = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            Scatter3DPoint.prototype.applyOptions = function () {\n                _super.prototype.applyOptions.apply(this, arguments);\n                if (!defined(this.z)) {\n                    this.z = 0;\n                }\n                return this;\n            };\n            return Scatter3DPoint;\n        }(ScatterSeries.prototype.pointClass));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scatter3DPoint;\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DSeries.js', [_modules['Core/Math3D.js'], _modules['Series/Scatter3D/Scatter3DPoint.js'], _modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Math3D, Scatter3DPoint, ScatterSeries, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var pointCameraDistance = Math3D.pointCameraDistance;\n        var extend = U.extend,\n            merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.scatter3d\n         *\n         * @augments Highcharts.Series\n         */\n        var Scatter3DSeries = /** @class */ (function (_super) {\n                __extends(Scatter3DSeries, _super);\n            function Scatter3DSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            Scatter3DSeries.prototype.pointAttribs = function (point) {\n                var attribs = _super.prototype.pointAttribs.apply(this,\n                    arguments);\n                if (this.chart.is3d() && point) {\n                    attribs.zIndex =\n                        pointCameraDistance(point, this.chart);\n                }\n                return attribs;\n            };\n            /**\n             * A 3D scatter plot uses x, y and z coordinates to display values for three\n             * variables for a set of data.\n             *\n             * @sample {highcharts} highcharts/3d/scatter/\n             *         Simple 3D scatter\n             * @sample {highcharts} highcharts/demo/3d-scatter-draggable\n             *         Draggable 3d scatter\n             *\n             * @extends      plotOptions.scatter\n             * @excluding    dragDrop, cluster, boostThreshold, boostBlending\n             * @product      highcharts\n             * @requires     highcharts-3d\n             * @optionparent plotOptions.scatter3d\n             */\n            Scatter3DSeries.defaultOptions = merge(ScatterSeries.defaultOptions, {\n                tooltip: {\n                    pointFormat: 'x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>'\n                }\n            });\n            return Scatter3DSeries;\n        }(ScatterSeries));\n        extend(Scatter3DSeries.prototype, {\n            axisTypes: ['xAxis', 'yAxis', 'zAxis'],\n            // Require direct touch rather than using the k-d-tree, because the\n            // k-d-tree currently doesn't take the xyz coordinate system into\n            // account (#4552)\n            directTouch: true,\n            parallelArrays: ['x', 'y', 'z'],\n            pointArrayMap: ['x', 'y', 'z'],\n            pointClass: Scatter3DPoint\n        });\n        SeriesRegistry.registerSeriesType('scatter3d', Scatter3DSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `scatter3d` series. If the [type](#series.scatter3d.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * scatter3d](#plotOptions.scatter3d).\n         *\n         * @extends   series,plotOptions.scatter3d\n         * @excluding boostThreshold, boostBlending\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption series.scatter3d\n         */\n        /**\n         * An array of data points for the series. For the `scatter3d` series\n         * type, points can be given in the following ways:\n         *\n         * 1.  An array of arrays with 3 values. In this case, the values correspond\n         * to `x,y,z`. If the first value is a string, it is applied as the name\n         * of the point, and the `x` value is inferred.\n         *\n         *  ```js\n         *     data: [\n         *         [0, 0, 1],\n         *         [1, 8, 7],\n         *         [2, 9, 2]\n         *     ]\n         *  ```\n         *\n         * 3.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series'\n         * [turboThreshold](#series.scatter3d.turboThreshold), this option is not\n         * available.\n         *\n         *  ```js\n         *     data: [{\n         *         x: 1,\n         *         y: 2,\n         *         z: 24,\n         *         name: \"Point2\",\n         *         color: \"#00FF00\"\n         *     }, {\n         *         x: 1,\n         *         y: 4,\n         *         z: 12,\n         *         name: \"Point1\",\n         *         color: \"#FF00FF\"\n         *     }]\n         *  ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<number>|*>}\n         * @extends   series.scatter.data\n         * @product   highcharts\n         * @apioption series.scatter3d.data\n         */\n        /**\n         * The z value for each data point.\n         *\n         * @type      {number}\n         * @product   highcharts\n         * @apioption series.scatter3d.data.z\n         */\n        ''; // adds doclets above to transpiled file\n\n        return Scatter3DSeries;\n    });\n    _registerModule(_modules, 'masters/highcharts-3d.src.js', [_modules['Core/Globals.js'], _modules['Core/Renderer/SVG/SVGRenderer3D.js'], _modules['Core/Chart/Chart3D.js'], _modules['Core/Axis/ZAxis.js'], _modules['Core/Axis/Axis3DComposition.js'], _modules['Series/Area3D/Area3DSeries.js']], function (Highcharts, SVGRenderer3D, Chart3D, ZAxis, Axis3DComposition, Area3DSeries) {\n\n        var G = Highcharts;\n        // Compositions\n        SVGRenderer3D.compose(G.SVGRenderer);\n        Chart3D.compose(G.Chart, G.Fx);\n        ZAxis.compose(G.Chart);\n        Axis3DComposition.compose(G.Axis, G.Tick);\n        Area3DSeries.compose(G.seriesTypes.area);\n\n    });\n}));"]},"metadata":{},"sourceType":"script","externalDependencies":[]}
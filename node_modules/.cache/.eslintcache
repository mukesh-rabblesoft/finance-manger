[{"/home/sonu/opayl/html/frontend/src/index.js":"1","/home/sonu/opayl/html/frontend/src/App.js":"2","/home/sonu/opayl/html/frontend/src/reportWebVitals.js":"3","/home/sonu/opayl/html/frontend/src/redux/store.js":"4","/home/sonu/opayl/html/frontend/src/pages/Reset.js":"5","/home/sonu/opayl/html/frontend/src/pages/Login.js":"6","/home/sonu/opayl/html/frontend/src/pages/NotFound.js":"7","/home/sonu/opayl/html/frontend/src/pages/Home.js":"8","/home/sonu/opayl/html/frontend/src/pages/Active.js":"9","/home/sonu/opayl/html/frontend/src/pages/Forgot.js":"10","/home/sonu/opayl/html/frontend/src/pages/Register.js":"11","/home/sonu/opayl/html/frontend/src/components/utils/Auth.js":"12","/home/sonu/opayl/html/frontend/src/components/layouts/Header.js":"13","/home/sonu/opayl/html/frontend/src/components/layouts/Footer.js":"14","/home/sonu/opayl/html/frontend/src/redux/apis.js":"15","/home/sonu/opayl/html/frontend/src/components/Donut3dChart.js":"16","/home/sonu/opayl/html/frontend/src/components/ExpenseCategory.js":"17","/home/sonu/opayl/html/frontend/src/components/SurplushCategory.js":"18","/home/sonu/opayl/html/frontend/src/components/IncomeCategory.js":"19","/home/sonu/opayl/html/frontend/src/components/Category.js":"20","/home/sonu/opayl/html/frontend/src/components/utils/Formats.js":"21","/home/sonu/opayl/html/frontend/src/components/utils/Loader.js":"22","/home/sonu/opayl/html/frontend/src/components/utils/Skeletons.js":"23","/home/sonu/opayl/html/frontend/src/redux/actions/budgetAction.js":"24","/home/sonu/opayl/html/frontend/src/redux/reducers/index.js":"25","/home/sonu/opayl/html/frontend/src/redux/actions/authAction.js":"26","/home/sonu/opayl/html/frontend/src/components/layouts/Menu.js":"27","/home/sonu/opayl/html/frontend/src/components/Colors.js":"28","/home/sonu/opayl/html/frontend/src/redux/urls.js":"29","/home/sonu/opayl/html/frontend/src/redux/types.js":"30","/home/sonu/opayl/html/frontend/src/redux/reducers/authReducers.js":"31","/home/sonu/opayl/html/frontend/src/redux/reducers/budgetReducers.js":"32","/home/sonu/opayl/html/frontend/src/components/AuthVerification/AuthVarificationForm.jsx":"33","/home/sonu/opayl/html/frontend/src/components/AuthenticateEnable/TwoFactorEnable.jsx":"34"},{"size":537,"mtime":1666112554000,"results":"35","hashOfConfig":"36"},{"size":2236,"mtime":1669296309636,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1666112554000,"results":"38","hashOfConfig":"36"},{"size":718,"mtime":1669015927283,"results":"39","hashOfConfig":"36"},{"size":4716,"mtime":1667237377000,"results":"40","hashOfConfig":"36"},{"size":4808,"mtime":1669373909237,"results":"41","hashOfConfig":"36"},{"size":709,"mtime":1666112554000,"results":"42","hashOfConfig":"36"},{"size":9777,"mtime":1669380800768,"results":"43","hashOfConfig":"36"},{"size":2360,"mtime":1667237377000,"results":"44","hashOfConfig":"36"},{"size":3601,"mtime":1667237377000,"results":"45","hashOfConfig":"36"},{"size":10520,"mtime":1667237377000,"results":"46","hashOfConfig":"36"},{"size":291,"mtime":1667237377000,"results":"47","hashOfConfig":"36"},{"size":2492,"mtime":1667237377000,"results":"48","hashOfConfig":"36"},{"size":230,"mtime":1669373903833,"results":"49","hashOfConfig":"36"},{"size":1988,"mtime":1669031332050,"results":"50","hashOfConfig":"36"},{"size":3446,"mtime":1666112554000,"results":"51","hashOfConfig":"36"},{"size":6303,"mtime":1666112554000,"results":"52","hashOfConfig":"36"},{"size":1956,"mtime":1666112554000,"results":"53","hashOfConfig":"36"},{"size":14872,"mtime":1666112554000,"results":"54","hashOfConfig":"36"},{"size":13092,"mtime":1666112554000,"results":"55","hashOfConfig":"36"},{"size":1217,"mtime":1666112554000,"results":"56","hashOfConfig":"36"},{"size":613,"mtime":1669024834411,"results":"57","hashOfConfig":"36"},{"size":644,"mtime":1666112554000,"results":"58","hashOfConfig":"36"},{"size":1147,"mtime":1669378478257,"results":"59","hashOfConfig":"36"},{"size":484,"mtime":1669296261909,"results":"60","hashOfConfig":"36"},{"size":7409,"mtime":1669357917128,"results":"61","hashOfConfig":"36"},{"size":3830,"mtime":1669361183560,"results":"62","hashOfConfig":"36"},{"size":651,"mtime":1666112554000,"results":"63","hashOfConfig":"36"},{"size":778,"mtime":1669373907181,"results":"64","hashOfConfig":"36"},{"size":1364,"mtime":1669377729479,"results":"65","hashOfConfig":"36"},{"size":2396,"mtime":1669377890031,"results":"66","hashOfConfig":"36"},{"size":786,"mtime":1669377357235,"results":"67","hashOfConfig":"36"},{"size":5200,"mtime":1669377744218,"results":"68","hashOfConfig":"36"},{"size":3493,"mtime":1669373902257,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"nfvdfn",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"73"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"73"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"73"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"73"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"73"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"73"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sonu/opayl/html/frontend/src/index.js",[],[],[],"/home/sonu/opayl/html/frontend/src/App.js",["183","184"],[],"/home/sonu/opayl/html/frontend/src/reportWebVitals.js",[],[],"/home/sonu/opayl/html/frontend/src/redux/store.js",[],[],"/home/sonu/opayl/html/frontend/src/pages/Reset.js",[],[],"/home/sonu/opayl/html/frontend/src/pages/Login.js",["185"],[],"/home/sonu/opayl/html/frontend/src/pages/NotFound.js",[],[],"/home/sonu/opayl/html/frontend/src/pages/Home.js",["186","187","188","189"],[],"/home/sonu/opayl/html/frontend/src/pages/Active.js",["190"],[],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { activate } from \"../redux/actions/authAction\";\nimport \"../css/bootstrap.min.css\";\n\nconst Active = (props) => {\n  let params = useParams();\n  let inprocess = 0;\n  const [activateStatus, setActivateStatus] = useState(0);\n  useEffect(() => {\n    if (inprocess === 0) {\n      props.activate(params);\n      inprocess = 1;\n    }\n  }, []);\n  useEffect(() => {\n    setTimeout(()=>{\n      if (props.auth.msg === \"Account activated successfully\") {\n        setActivateStatus(1);\n        setTimeout(()=>{\n          window.location.href='/login';\n        },5000)\n      } else if (props.auth.msg === \"Sorry! given link is expired.\") {\n        setActivateStatus(2);\n      } else if (props.auth.msg === 'Sorry! given activation code is expired.') {\n        setActivateStatus(2);\n      }\n    }, 2000);    \n  }, [props.auth]);\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n          <div className=\"col-md-5 offset-md-4 col-12\">\n            <div className=\"card shadow\">\n              <div className=\"card-header text-center\">\n                Activate your account\n              </div>\n              <div className=\"card-body\">\n                {activateStatus === 0 ? (\n                  <div className=\"alert alert-info\">Please wait while we are activating your account!</div>\n                ) : activateStatus === 1 ? (\n                  <div>\n                    <div className=\"alert alert-success\">\n                      Your account has been activated. You will be redirect to\n                      login page after 5s\n                    </div>\n                  </div>\n                ) : (\n                  activateStatus === 2 && (\n                    <div>\n                      <div className=\"alert alert-danger\">\n                        Sorry! This is an expired link. Please email me (shayinm@gmail.com) for more\n                        detail.\n                      </div>\n                    </div>\n                  )\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { activate })(Active);\n","/home/sonu/opayl/html/frontend/src/pages/Forgot.js",[],[],"/home/sonu/opayl/html/frontend/src/pages/Register.js",["191"],[],"import React, { useState, useEffect } from \"react\";\nimport \"../css/bootstrap.min.css\";\n// import { Register as RegisterIcon } from \"@mui/icons-material\";\nimport { register, clearAuthMsg } from \"../redux/actions/authAction\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction Register(props) {\n  const [registerSuccess, setRegisterSuccess] = useState(false);\n  const [isWaiting, setIsWaiting] = useState(false);\n  const [errorText, setErrorText] = useState(\"\");\n  const [user, setUser] = useState({\n    username: \"\",\n    passwd: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    mobile: \"\",\n    gender: 1,\n    city: \"\",\n    country: \"\",\n  });\n\n  useEffect(() => {\n    if (props.auth.msg === \"Wrong credentials\") {\n      console.log(\"Clear Auth Msg\")\n      props.clearAuthMsg();\n    }\n    if (props.auth.msg !== \"\") {\n      if (errorText !== \"\") {\n        setErrorText(\"\");\n      }\n      setIsWaiting(false);\n\n      if (props.auth.msg === \"Register success\") {\n        setRegisterSuccess(true);\n      }\n      if (props.auth.msg === \"Logged out\") {\n        props.clearAuthMsg();\n        setRegisterSuccess(false);\n        setErrorText(\"\")\n      }\n      setErrorText(props.auth.msg);\n    }\n  }, [props.auth]);\n\n  //console.log(props.auth.msg === \"Wrong credentials\", props.auth.msg)\n  //console.log(props.auth)\n  //console.log(\"error text\", errorText)\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-5\">\n        <div className=\"col-md-6 offset-md-3 col-12\">\n          <div className=\"card shadow\">\n            <div className=\"card-header text-center\">Register</div>\n            <div className=\"card-body\">\n              {registerSuccess ? (\n                <>\n                  <div className=\"alert alert-success\">\n                    Register success! An email has been sent. Please check your\n                    mailbox and activate your account.\n                  </div>\n                  <div className=\"text-center\">\n                    <Link\n                      className=\"btn btn-success btn-success-dark mt-2\"\n                      to=\"/login\"\n                    >\n                      Return to login\n                    </Link>\n                  </div>\n                </>\n\n              ) : (\n                <>\n                  <div className=\"row mb-3\">\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtUsername\" className=\"form-label\">\n                        Username <span className=\"text-danger\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"txtUsername\"\n                        required\n                        value={user.username}\n                        onChange={(e) =>\n                          setUser({ ...user, username: e.target.value })\n                        }\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtPassword\" className=\"form-label\">\n                        Password <span className=\"text-danger\">*</span>\n                      </label>\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        id=\"txtPassword\"\n                        required\n                        value={user.passwd}\n                        onChange={(e) =>\n                          setUser({ ...user, passwd: e.target.value })\n                        }\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row mb-3\">\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtFirstname\" className=\"form-label\">\n                        First name <span className=\"text-danger\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"txtFirstname\"\n                        required\n                        value={user.first_name}\n                        onChange={(e) =>\n                          setUser({ ...user, first_name: e.target.value })\n                        }\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtLastname\" className=\"form-label\">\n                        Last name <span className=\"text-danger\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"txtLastname\"\n                        required\n                        value={user.last_name}\n                        onChange={(e) =>\n                          setUser({ ...user, last_name: e.target.value })\n                        }\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row mb-3\">\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtEmail\" className=\"form-label\">\n                        Email <span className=\"text-danger\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        id=\"txtEmail\"\n                        required\n                        value={user.email}\n                        onChange={(e) =>\n                          setUser({ ...user, email: e.target.value })\n                        }\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtEmail\" className=\"form-label\">\n                        Mobile <span className=\"text-danger\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"txtMobile\"\n                        required\n                        value={user.mobile}\n                        maxLength=\"15\"\n                        onChange={(e) => {\n                          // let val = e.target.value;\n                          // if(val.match(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/)) {\n                          // val = '';\n                          // }\n                          setUser({ ...user, mobile: e.target.value })\n                        }}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtGender\" className=\"form-label\">\n                        Gender <span className=\"text-danger\">*</span>\n                      </label>\n                      <select\n                        className=\"form-select form-control\"\n                        value={user.gender}\n                        required\n                        onChange={(e) =>\n                          setUser({ ...user, gender: Number(e.target.value) })\n                        }\n                        defaultValue={(user && user.gender) ? user.gender : 1}\n                      >\n                        <option value=\"1\">Male</option>\n                        <option value=\"2\">Female</option>\n                        <option value=\"3\">Other</option>\n                      </select>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtCity\" className=\"form-label\">\n                        City <span className=\"text-danger\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"txtCity\"\n                        required\n                        value={user.city}\n                        onChange={(e) =>\n                          setUser({ ...user, city: e.target.value })\n                        }\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row mb-3\">\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtState\" className=\"form-label\">\n                        State <span className=\"text-danger\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"txtState\"\n                        required\n                        value={user.state}\n                        onChange={(e) =>\n                          setUser({ ...user, state: e.target.value })\n                        }\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"txtCountry\" className=\"form-label\">\n                        Country <span className=\"text-danger\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"txtCountry\"\n                        required\n                        value={user.country}\n                        onChange={(e) =>\n                          setUser({ ...user, country: e.target.value })\n                        }\n                      />\n                    </div>\n                  </div>\n                  {isWaiting && <div>Waiting...</div>}\n                  {(errorText && errorText !== \"\") && (\n                    <div className=\"alert alert-warning\">{errorText}</div>\n                  )}\n                  <Link className=\"btn-link float-left mt-2\" to=\"/login\">\n                    You have account already?\n                  </Link>\n                  <button\n                    onClick={() => {\n                      setIsWaiting(true);\n                      props.register(user);\n                    }}\n                    className=\"btn btn-success btn-success-dark float-right\"\n                    disabled={isWaiting}\n                  >\n                    {/* <RegisterIcon /> */}\n                    Register\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { register, clearAuthMsg })(Register);","/home/sonu/opayl/html/frontend/src/components/utils/Auth.js",[],[],"/home/sonu/opayl/html/frontend/src/components/layouts/Header.js",["192"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Menu from \"./Menu\";\nimport \"../../css/bootstrap.min.css\";\nimport \"../../css/app.css\";\nimport { connect } from \"react-redux\";\n\nconst Header = (props) => {\n  const [openMenu, setOpenMenu] = useState(false);\n  const date = new Date();\n  const location = useLocation();\n  //console.log(location, useParams());\n  useEffect(() => {\n    // if (props.auth.isAuthenticated === false) {\n      // let whitListPaths = (location.pathname === '/login' || location.pathname === '/register' || location.pathname === '/forgot' || location.pathname ==='/activate/')?false:true;\n      // if(whitListPaths){\n        //window.location.href = '/login';\n      // }\n    // }\n  }, [props.auth]);\n\n  return (\n    <>\n      <div>\n        <div className=\"shine-slogan text-white py-1 px-3 d-flex\">\n          <span className=\"d-none d-sm-block\">\n            Shine's Budget Dividend & Retirement Calculator\n          </span>\n          <span className=\"ml-auto\" style={{ paddingLeft: 10 }}>\n            {date.toDateString()}\n          </span>\n          <span\n            className=\"ml-2 px-1\"\n            style={{ background: \"yellow\", borderRadius: 5, color: \"black\" }}\n          >\n            {date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n          </span>\n          <span className=\"ml-2\">\n            {date\n              .toLocaleDateString(undefined, {\n                day: \"2-digit\",\n                timeZoneName: \"short\",\n              })\n              .substring(4)}\n          </span>\n        </div>\n\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-theme-dark\">\n          <Link\n            className=\"navbar-brand navbar-brand-shine text-white fs-2 mb-1\"\n            to=\"/\"\n          >\n            <strong>Shine's BDR</strong>\n          </Link>\n          {props.auth && props.auth.user ? (<>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              onClick={() => setOpenMenu(!openMenu)}\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className={`navbar-collapse ${!openMenu ? \"collapse\" : \"\"}`}>\n              <Menu />\n            </div>\n          </>) : \"\"}\n        </nav>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(Header);\n","/home/sonu/opayl/html/frontend/src/components/layouts/Footer.js",[],[],"/home/sonu/opayl/html/frontend/src/redux/apis.js",[],[],"/home/sonu/opayl/html/frontend/src/components/Donut3dChart.js",["193","194","195","196"],[],"import React, { useState, useEffect } from \"react\";\n\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nimport { colors } from \"./Colors\";\n\nhighcharts3d(Highcharts);\nconst Donut3dChart = (props) => {\n\n  const [categories, setCategories] = useState(null);\n    //console.log(categories);\n    useEffect(() => {\n        setCategories(props.budgets[props.bindex].categories);\n    });\n\n    let grandTotal = 0;\n    if (categories && categories.length > 0) {\n        categories.map((category, index) => {\n            if (category.category_type !== 'income') {\n                let mothlyTotal = 0;\n                category.items.map(item => {\n                    mothlyTotal = mothlyTotal + ((item.is_active) ? Number(item.monthly) : 0)\n                })\n                categories[index].weekly = mothlyTotal / 4;\n                categories[index].biweekly = mothlyTotal / 2;\n                categories[index].monthly = mothlyTotal;\n                categories[index].yearly = mothlyTotal * 12;\n                grandTotal = grandTotal + categories[index].monthly;\n            }\n        })\n    }\n\n  Highcharts.setOptions({\n    colors: [\n      \"#FFEA5D\",\n      \"#97EE5B\",\n      \"#5B8CFB\",\n      \"#ED6559\",\n      \"#B067FD\",\n      \"#F5AE5E\",\n      \"#5E5BF2\",\n      \"#CC51A8\",\n    ],\n  });\n  var refinedData = [];\n  categories &&\n  categories.map((category, index) => {\n    if (category.category_type !== 'income') {\n        refinedData.push([\n          `<span style='stroke-width:0;fill:#fff;font-size: 0.8rem; text-align: center'>${\n            category.category_name\n          }-<span style='fill: orange;'>${\n            ((category.monthly / grandTotal) * 100).toFixed(2)\n          }</span>: <span style='fill: #6AD7BB;'>${category.monthly}</span> </span>`,\n          category.monthly,colors[index]\n        ]);\n      }\n    });\n  const options = {\n    chart: {\n      type: \"pie\",\n      style: {\n        fontFamily:\n          '\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",\"Liberation Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"',\n      },\n      backgroundColor: \"#3b38d1\",\n      // plotOptions: {\n      //   size: \"100%\",\n      // },\n      options3d: {\n        enabled: true,\n        alpha: 20,\n      },\n    },\n    title: {\n      text: `${props.budgets[props.bindex].name}' Typical <br>Monthly Budget <br><br><span style=\"font-size:1.6rem;fill:#22c9e4\">$${((grandTotal)?(grandTotal).toFixed(2):0)}</span>`,\n      widthAdjust: -360,\n      align: \"center\",\n      verticalAlign: \"middle\",\n      y: ((grandTotal)?50:30),\n      style: {\n        color: \"#fff\", fontSize:18, fontWeight:\"bold\"\n      },\n    },\n    subtitle: {\n      text: `Summary of ${props.budgets[props.bindex].name} Monthly Budgeted Expences`,\n      widthAdjust: \"-10\",\n      style: { color: \"#fff\", fontSize: \"1.7rem\", fontWeight: \"bolder\"},\n    },\n    plotOptions: {\n      pie: {\n        depth: 100,\n        innerSize: 250,\n        // depth: 114,\n        size: 340,\n        startAngle: -65,\n        dataLabels: { style: { fontSize: \"14px\" } },\n      },\n      series: { dataLabels: { color: \"white\" } },\n    },\n    series: [\n      {\n        name: \"Value\",\n        data: refinedData,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </div>\n  );\n};\n\nexport default Donut3dChart;\n","/home/sonu/opayl/html/frontend/src/components/ExpenseCategory.js",["197","198","199"],[],"import React, { useEffect, useState } from \"react\";\n\nimport Skeletons from \"../components/utils/Skeletons\";\n\nconst ExpenseCategory = (props) => {\n\n    const [categories, setCategories] = useState(null);\n    //console.log(categories);\n    useEffect(() => {\n        setCategories(props.budget.categories);\n    });\n\n    let grandTotal = 0;\n    if (categories && categories.length > 0) {\n        categories.map((category, index) => {\n            if (category.category_type !== 'income') {\n                let mothlyTotal = 0;\n                category.items.map(item => {\n                    mothlyTotal = mothlyTotal + ((item.is_active) ? Number(item.monthly) : 0)\n                })\n                categories[index].weekly = mothlyTotal / 4;\n                categories[index].biweekly = mothlyTotal / 2;\n                categories[index].monthly = mothlyTotal;\n                categories[index].yearly = mothlyTotal * 12;\n                grandTotal = grandTotal + categories[index].monthly;\n            }\n        })\n    }\n    return (<>\n        <div className=\"row mb-3 \">\n            <div className=\"col-12\">\n                <div className=\"table-content\">\n                    {categories ? <>\n                        <table key={`table-expanse-main`} className=\"table table-bordered table-centered table-theme-dark\">\n                            <thead>\n                                <tr key={`table-head-expanse-main`}>\n                                    <th className={`text-left align-top bg-orange`}>\n                                        Summary\n                                    </th>\n                                    <th className={`align-top bg-orange`} style={{ width: 90 }}>\n                                        Weekly\n                                    </th>\n                                    <th className={`align-top bg-orange`} style={{ width: 100 }}>\n                                        Bi-Weekly\n                                    </th>\n                                    <th className={`align-top bg-orange`} style={{ width: 100 }}>\n                                        Monthly\n                                    </th>\n                                    <th className={`align-top bg-orange`} style={{ width: 100 }}>\n                                        Yearly\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {(categories && categories.length > 0) ? <>\n                                    {categories.map((item, index) => (\n                                        ((item.category_type === 'income') ? <></> :\n                                            <tr id={`categoty-expense-item-${index}`} key={`categoty-expense-item-${index}`}>\n                                                <td key={`categoty-expense-item-name-${index}`} className=\"text-left position-relative\">\n                                                    <strong>\n                                                        {item.category_name} - {((item.monthly / grandTotal) * 100).toFixed(2)}%\n                                                    </strong>\n                                                </td>\n                                                <td key={`categoty-expense-item-weekly-${index}`}>\n                                                    <span className=\"cell weekly\">\n                                                        $ {item.is_active ? item.weekly : 0}\n                                                    </span>\n                                                </td>\n                                                <td key={`categoty-expense-item-biweekly-${index}`}>\n                                                    <span className=\"cell biweekly\">\n                                                        $ {item.is_active ? item.biweekly : 0}\n                                                    </span>\n                                                </td>\n                                                <td key={`categoty-expense-item-monthly-${index}`}>\n                                                    <span className=\"cell monthly\">\n                                                        $ {item.is_active ? item.monthly : 0}\n                                                    </span>\n                                                </td>\n                                                <td key={`categoty-expense-item-yearly-${index}`} style={{ backgroundColor: \"#006f51\", color: \"white\" }}>\n                                                    <span className=\"cell yearly\">\n                                                        $ {item.is_active ? item.yearly : 0}\n                                                    </span>\n                                                </td>\n                                            </tr>\n                                        )\n                                    ))}\n                                </> : <></>}\n                                <tr key={`category-expense-grandtotal-${grandTotal}`}>\n                                    <td className=\"text-left\">\n                                        <strong>Total</strong>\n                                    </td>\n                                    <td>\n                                        <strong>$ {grandTotal / 4}</strong>\n                                    </td>\n                                    <td>\n                                        <strong>$ {grandTotal / 2}</strong>\n                                    </td>\n                                    <td>\n                                        <strong>$ {grandTotal}</strong>\n                                    </td>\n                                    <td style={{ backgroundColor: \"yellow\" }}>\n                                        <strong>$ {grandTotal * 12}</strong>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </> : <><Skeletons skeletons={[{ variant: \"rounded\", width: \"100%\", height: 100 },]} /></>}\n                </div>\n            </div>\n        </div>\n    </>)\n}\n\nexport default ExpenseCategory;","/home/sonu/opayl/html/frontend/src/components/SurplushCategory.js",["200","201","202","203"],[],"import React, { useEffect, useState } from \"react\";\n\nconst SurplushCategory = (props) => {\n\n    const [categories, setCategories] = useState(null);\n    //console.log(categories);\n    useEffect(() => {\n        setCategories(props.budget.categories);\n    });\n\n    let incomeTotal = 0;\n    let expenseTotal = 0;\n    let grandTotal = 0;\n    if (categories && categories.length > 0) {\n        categories.map((category, index) => {\n            if (category.category_type === 'income') {\n                let mothlyTotal = 0;\n                category.items.map(item => {\n                    mothlyTotal = mothlyTotal + ((item.is_active)? Number(item.monthly):0)\n                })\n                incomeTotal = incomeTotal + mothlyTotal;\n            } else {\n                let mothlyTotal = 0;\n                category.items.map(item => {\n                    mothlyTotal = mothlyTotal + ((item.is_active)? Number(item.monthly):0)\n                })\n                expenseTotal = expenseTotal + mothlyTotal;\n            }            \n        })\n        grandTotal = incomeTotal-expenseTotal;\n    }\n    return (\n        <>\n            <table className=\"table table-bordered table-centered table-theme-dark\">\n                <tbody>\n                    <tr>\n                        <th className=\"text-left\">Surplus / Deficit</th>\n                        <td width=\"90\" className={(grandTotal>0)?`text-primary`:`text-danger`}>$ {grandTotal/4}</td>\n                        <td width=\"100\" className={(grandTotal>0)?`text-primary`:`text-danger`}>$ {grandTotal/2}</td>\n                        <td width=\"100\" className={(grandTotal>0)?`text-primary`:`text-danger`}>$ {grandTotal}</td>\n                        <td width=\"100\" className={(grandTotal>0)?`text-primary`:`text-danger`} style={{ backgroundColor: \"yellow\" }}>$ {grandTotal*12}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default SurplushCategory;","/home/sonu/opayl/html/frontend/src/components/IncomeCategory.js",["204"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n    Edit,\n    Check,\n    Delete,\n    AddCircleOutlined,\n    CircleOutlined,\n} from \"@mui/icons-material/\";\n\nimport Skeletons from \"../components/utils/Skeletons\";\n\nconst IncomeCategory = (props) => {\n\n    const [category, setCategory] = useState({});\n    useEffect(() => {\n        setCategory({ ...props.budgets[props.bindex].categories[props.cindex] });\n    }, [category.items])\n\n    let totalMonthly = 0;\n    category && category.items &&\n        category.items.forEach((i) => (totalMonthly = totalMonthly + ((i.is_active) ? parseInt(i.monthly) : 0)));\n\n    return (<>\n        <div className=\"row mb-3 \">\n            <div className=\"col-12\">\n                <div className=\"table-content\">\n                    {category ? <>\n                        <table className=\"table table-bordered table-centered table-theme-dark\">\n                            <thead>\n                                <tr key={`table-head` + category.category_name + `-`}>\n                                    <th className={`text-left align-top bg-black`}>\n                                        {category.category_name}\n                                    </th>\n                                    <th className={`align-top bg-black`} style={{ width: 90 }}>\n                                        Weekly\n                                    </th>\n                                    <th className={`align-top bg-black`} style={{ width: 100 }}>\n                                        Bi-Weekly\n                                    </th>\n                                    <th className={`align-top bg-black`} style={{ width: 100 }}>\n                                        Monthly\n                                    </th>\n                                    <th className={`align-top bg-black`} style={{ width: 100 }}>\n                                        Yearly\n                                    </th>\n                                    <th className={`align-middle bg-black`} style={{ width: 75 }}>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {category.items && category.items.length > 0 ? <>\n                                    {category.items.map((item, index) => (\n                                        <tr key={`categoty-item-` + index}>\n                                            <td className=\"text-left position-relative\">\n                                                {(item.edit) ?\n                                                    <input\n                                                        className=\"form-control form-control-sm\"\n                                                        value={item.name}\n                                                        autoFocus={true}\n                                                        maxLength={100}\n                                                        placeholder={`Enter income title here.`}\n                                                        onChange={(e) => {\n                                                            props.budgets[props.bindex].categories[props.cindex].items[index].name = e.target.value;\n                                                            category.items[index].name = e.target.value;\n                                                            setCategory({ ...category });\n                                                            props.setBudgets({ ...props.budgets });\n                                                        }} />\n                                                    :\n                                                    <strong>\n                                                        {item.name}\n                                                    </strong>\n                                                }\n                                            </td>\n                                            <td>\n                                                <span className=\"cell weekly\">\n                                                    $ {item.is_active ? item.weekly : 0}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <span className=\"cell biweekly\">\n                                                    $ {item.is_active ? item.biweekly : 0}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                {item.edit === true ?\n                                                    <input\n                                                        className=\"form-control form-control-sm\"\n                                                        value={item.monthly}\n                                                        placeholder={`Enter monthly income here.`}\n                                                        maxLength={20}\n                                                        onChange={(e) => {\n                                                            let val = e.target.value.replace(/\\D/g, '').replace(/^0+/, '');\n                                                            props.budgets[props.bindex].categories[props.cindex].items[index].weekly = val / 4;\n                                                            props.budgets[props.bindex].categories[props.cindex].items[index].biweekly = val / 2;\n                                                            props.budgets[props.bindex].categories[props.cindex].items[index].monthly = val / 1;\n                                                            props.budgets[props.bindex].categories[props.cindex].items[index].yearly = val * 12;\n                                                            category.items[index].weekly = val / 4;\n                                                            category.items[index].biweekly = val / 2;\n                                                            category.items[index].monthly = val / 1;\n                                                            category.items[index].yearly = val * 12;\n                                                            setCategory({ ...category });\n                                                            props.setBudgets({ ...props.budgets });\n                                                        }} />\n                                                    :\n                                                    <span className=\"cell monthly\">\n                                                        $ {item.is_active ? item.monthly : 0}\n                                                    </span>\n                                                }\n                                            </td>\n                                            <td style={{ backgroundColor: \"#006f51\", color: \"white\" }}>\n                                                <span className=\"cell yearly\">\n                                                    $ {item.is_active ? item.yearly : 0}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <span style={{ display: \"flex\", justifyContent: \"space-around\", }}>\n                                                    {!item.edit ?\n                                                        <button\n                                                            className=\"btn btn-sm btn-success btn-tiny\"\n                                                            onClick={(e) => {\n                                                                category.items[index].edit = true;\n                                                                setCategory({ ...category });\n                                                                props.editItem(props.bindex, props.cindex, index);\n                                                            }}\n                                                        >\n                                                            <Edit />\n                                                        </button>\n                                                        : <>\n                                                            <button\n                                                                className={`btn btn-sm btn-tiny ${(category.items[index].is_active) ? `btn-outline-info` : `btn-outline-danger`}`}\n                                                                onClick={(e) => {\n                                                                    (props.budgets[props.bindex].categories[props.cindex].items[index].is_active) ? props.budgets[props.bindex].categories[props.cindex].items[index].is_active = false : props.budgets[props.bindex].categories[props.cindex].items[index].is_active = true;\n                                                                    props.saveItem(props.bindex, props.cindex, index);\n                                                                    (category.items[index].is_active) ? category.items[index].is_active = false : category.items[index].is_active = true;\n                                                                    setCategory({ ...category });\n                                                                    props.setBudgets({ ...props.budgets });\n                                                                }}\n                                                            >\n                                                                <CircleOutlined />\n                                                            </button>\n                                                            <button\n                                                                className=\"btn btn-sm btn-success btn-tiny\"\n                                                                style={{ marginLeft: 5 }}\n                                                                onClick={(e) => {\n                                                                    props.budgets[props.bindex].categories[props.cindex].items[index].edit = false;\n                                                                    props.budgets[props.bindex].categories[props.cindex].items[index].priority = index + 1;\n                                                                    props.saveItem(props.bindex, props.cindex, index);\n                                                                    props.setBudgets({ ...props.budgets });\n                                                                    category.items[index].edit = false;\n                                                                    setCategory({ ...category });\n                                                                }}\n                                                            >\n                                                                <Check />\n                                                            </button>\n                                                            <button\n                                                                className=\"btn btn-sm btn-danger btn-tiny\"\n                                                                style={{ marginLeft: 5 }}\n                                                                onClick={(e) => {\n                                                                    let id = category.items[index].id;\n                                                                    props.budgets[props.bindex].categories[props.cindex].items.splice(index, 1);\n                                                                    props.setBudgets({ ...props.budgets });\n                                                                    props.removeItem(id);\n                                                                    category.items.splice(index, 1);\n                                                                    setCategory({ ...category });\n                                                                    console.log();\n                                                                }}\n                                                            >\n                                                                <Delete />\n                                                            </button>\n                                                        </>}\n                                                </span>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </> : <></>}\n                                <tr key={`category-` + props.budgets[props.bindex].categories[props.cindex].category_name + `-total`}>\n                                    <td className=\"text-left\">\n                                        <strong>Total</strong>\n                                    </td>\n                                    <>\n                                        <td>\n                                            <strong>$ {totalMonthly / 4}</strong>\n                                        </td>\n                                        <td>\n                                            <strong>$ {totalMonthly / 2}</strong>\n                                        </td>\n                                        <td>\n                                            <strong>$ {totalMonthly}</strong>\n                                        </td>\n                                        <td>\n                                            <strong>$ {totalMonthly * 12}</strong>\n                                        </td>\n                                        <td style={{ backgroundColor: \"yellow\" }}></td>\n                                    </>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div className=\"text-right\">\n                            <button className=\"btn btn-sm btn-success btn-success-dark\"\n                                onClick={() => {\n                                    props.addItem(props.bindex, props.cindex);\n                                }}\n                            >\n                                <AddCircleOutlined />\n                                Row\n                            </button>\n                        </div>\n                    </> : <><Skeletons skeletons={[{ variant: \"rounded\", width: \"100%\", height: 100 },]} /></>}\n                </div>\n            </div>\n        </div>\n    </>)\n}\n\nexport default IncomeCategory;","/home/sonu/opayl/html/frontend/src/components/Category.js",["205"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n  Edit,\n  Check,\n  Delete,\n  AddCircleOutlined,\n  CircleOutlined,\n} from \"@mui/icons-material/\";\n\nimport Skeletons from \"../components/utils/Skeletons\";\n\nconst Category = (props) => {\n\n  const [category, setCategory] = useState({});\n  useEffect(() => {\n    setCategory({ ...props.budgets[props.bindex].categories[props.cindex] });\n  }, [category.items])\n\n  let totalMonthly = 0;\n  category && category.items &&\n    category.items.forEach((i) => (totalMonthly = totalMonthly + ((i.is_active) ? parseInt(i.monthly) : 0)));\n\n  return (<>\n    <div className=\"row mb-3 \">\n      <div className=\"col-12\">\n        <div className=\"table-content\">\n          {category ? <>\n            <table className=\"table table-bordered table-centered table-theme-dark\">\n              <thead>\n                <tr key={`table-head` + category.category_name + `-`}>\n                  <th className={`text-left align-top`}>\n                    {(category.edit) ?\n                      <input\n                        className=\"form-control form-control-sm\"\n                        value={category.category_name}\n                        autoFocus={true}\n                        maxLength={100}\n                        placeholder={`Enter categoty name here.`}\n                        onChange={(e) => {\n                          setCategory(() => {\n                            category.category_name = e.target.value;\n                            return { ...category };\n                          })\n                        }} />\n                      :\n                      <strong>\n                        {category.category_name}\n                      </strong>\n                    }\n                  </th>\n                  <th className={`align-top`} style={{ width: 90 }}>\n                    Weekly\n                  </th>\n                  <th className={`align-top`} style={{ width: 100 }}>\n                    Bi-Weekly\n                  </th>\n                  <th className={`align-top`} style={{ width: 100 }}>\n                    Monthly\n                  </th>\n                  <th className={`align-top`} style={{ width: 100 }}>\n                    Yearly\n                  </th>\n                  <th className={`align-middle`} style={{ width: 75 }}>\n                  <span style={{ display: \"flex\", justifyContent: \"space-around\", }}>\n                      {!category.edit ?\n                        <button\n                          className=\"btn btn-sm btn-success btn-tiny\"\n                          onClick={(e) => {\n                            category.edit = true;\n                            setCategory({ ...category });\n                            props.budgets[props.bindex].categories[props.cindex].edit=false;\n                            props.setBudgets({ ...props.budgets });\n                          }}\n                        >\n                          <Edit />\n                        </button>\n                        : <>\n                          <button\n                            className=\"btn btn-sm btn-success btn-tiny\"\n                            style={{ marginLeft: 5 }}\n                            onClick={(e) => {\n                              category.edit = false;\n                              category.is_active = true;\n                              setCategory({ ...category });\n                              props.saveCategories(category);\n                              props.budgets[props.bindex].categories[props.cindex].edit=false;\n                              props.budgets[props.bindex].categories[props.cindex].is_active=true;\n                              props.setBudgets({ ...props.budgets });\n                            }}\n                          >\n                            <Check />\n                          </button>\n                          <button\n                            className=\"btn btn-sm btn-danger btn-tiny\"\n                            style={{ marginLeft: 5 }}\n                            onClick={(e) => {\n                              props.budgets[props.bindex].categories.splice(props.cindex, 1);\n                              props.removeCategories(category);\n                              props.setBudgets({ ...props.budgets });\n                            }}\n                          >\n                            <Delete />\n                          </button>\n                        </>}\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {category.items && category.items.length > 0 ? <>\n                  {category.items.map((item, index) => (\n                    <tr key={`categoty-item-` + index}>\n                      <td className=\"text-left position-relative\">\n                        {(item.edit) ?\n                          <input\n                            className=\"form-control form-control-sm\"\n                            value={item.name}\n                            autoFocus={true}\n                            maxLength={100}\n                            placeholder={`Enter income title here.`}\n                            onChange={(e) => {\n                              props.budgets[props.bindex].categories[props.cindex].items[index].name = e.target.value;\n                              category.items[index].name = e.target.value;\n                              setCategory({ ...category });\n                              props.setBudgets({ ...props.budgets });\n                            }} />\n                          :\n                          <strong>\n                            {item.name}\n                          </strong>\n                        }\n                      </td>\n                      <td>\n                        <span className=\"cell weekly\">\n                          $ {item.is_active ? item.weekly : 0}\n                        </span>\n                      </td>\n                      <td>\n                        <span className=\"cell biweekly\">\n                          $ {item.is_active ? item.biweekly : 0}\n                        </span>\n                      </td>\n                      <td>\n                        {item.edit === true ?\n                          <input\n                            className=\"form-control form-control-sm\"\n                            value={item.monthly}\n                            placeholder={`Enter monthly income here.`}\n                            maxLength={20}\n                            onChange={(e) => {\n                              let val = e.target.value.replace(/\\D/g, '').replace(/^0+/, '');\n                              props.budgets[props.bindex].categories[props.cindex].items[index].weekly = val / 4;\n                              props.budgets[props.bindex].categories[props.cindex].items[index].biweekly = val / 2;\n                              props.budgets[props.bindex].categories[props.cindex].items[index].monthly = val / 1;\n                              props.budgets[props.bindex].categories[props.cindex].items[index].yearly = val * 12;\n                              category.items[index].weekly = val / 4;\n                              category.items[index].biweekly = val / 2;\n                              category.items[index].monthly = val / 1;\n                              category.items[index].yearly = val * 12;\n                              setCategory({ ...category });\n                              props.setBudgets({ ...props.budgets });\n                            }} />\n                          :\n                          <span className=\"cell monthly\">\n                            $ {item.is_active ? item.monthly : 0}\n                          </span>\n                        }\n                      </td>\n                      <td style={{ backgroundColor: \"#006f51\", color: \"white\" }}>\n                        <span className=\"cell yearly\">\n                          $ {item.is_active ? item.yearly : 0}\n                        </span>\n                      </td>\n                      <td>\n                        <span style={{ display: \"flex\", justifyContent: \"space-around\", }}>\n                          {!item.edit ?\n                            <button\n                              className=\"btn btn-sm btn-success btn-tiny\"\n                              onClick={(e) => {\n                                category.items[index].edit = true;\n                                setCategory({ ...category });\n                                props.editItem(props.bindex, props.cindex, index);\n                              }}\n                            >\n                              <Edit />\n                            </button>\n                            : <>\n                              <button\n                                className={`btn btn-sm btn-tiny ${(category.items[index].is_active) ? `btn-outline-info` : `btn-outline-danger`}`}\n                                onClick={(e) => {\n                                  (props.budgets[props.bindex].categories[props.cindex].items[index].is_active) ? props.budgets[props.bindex].categories[props.cindex].items[index].is_active = false : props.budgets[props.bindex].categories[props.cindex].items[index].is_active = true;\n                                  props.saveItem(props.bindex, props.cindex, index);\n                                  (category.items[index].is_active) ? category.items[index].is_active = false : category.items[index].is_active = true;\n                                  setCategory({ ...category });\n                                  props.setBudgets({ ...props.budgets });\n                                }}\n                              >\n                                <CircleOutlined />\n                              </button>\n                              <button\n                                className=\"btn btn-sm btn-success btn-tiny\"\n                                style={{ marginLeft: 5 }}\n                                onClick={(e) => {\n                                  props.budgets[props.bindex].categories[props.cindex].items[index].edit = false;\n                                  props.budgets[props.bindex].categories[props.cindex].items[index].priority = index + 1;\n                                  props.setBudgets({ ...props.budgets });\n                                  props.saveItem(props.bindex, props.cindex, index);\n                                  category.items[index].edit = false;\n                                  setCategory({ ...category });\n                                }}\n                              >\n                                <Check />\n                              </button>\n                              <button\n                                className=\"btn btn-sm btn-danger btn-tiny\"\n                                style={{ marginLeft: 5 }}\n                                onClick={(e) => {\n                                  let id = category.items[index].id;\n                                  props.budgets[props.bindex].categories[props.cindex].items.splice(index, 1);\n                                  props.setBudgets({ ...props.budgets });\n                                  props.removeItem(id);\n                                  category.items.splice(index, 1);\n                                  setCategory({ ...category });\n                                  console.log();\n                                }}\n                              >\n                                <Delete />\n                              </button>\n                            </>}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n                </> : <></>}\n                <tr key={`category-` + props.budgets[props.bindex].categories[props.cindex].category_name + `-total`}>\n                  <td className=\"text-left\">\n                    <strong>Total</strong>\n                  </td>\n                  <>\n                    <td>\n                      <strong>$ {totalMonthly / 4}</strong>\n                    </td>\n                    <td>\n                      <strong>$ {totalMonthly / 2}</strong>\n                    </td>\n                    <td>\n                      <strong>$ {totalMonthly}</strong>\n                    </td>\n                    <td>\n                      <strong>$ {totalMonthly * 12}</strong>\n                    </td>\n                    <td style={{ backgroundColor: \"yellow\" }}></td>\n                  </>\n                </tr>\n              </tbody>\n            </table>\n            <div className=\"text-right\">\n              <button className=\"btn btn-sm btn-success btn-success-dark\"\n                onClick={() => {\n                  props.addItem(props.bindex, props.cindex);\n                }}\n              >\n                <AddCircleOutlined />\n                Row\n              </button>\n            </div>\n          </> : <><Skeletons skeletons={[{ variant: \"rounded\", width: \"100%\", height: 100 },]} /></>}\n        </div>\n      </div>\n    </div>\n  </>)\n}\n\nexport default Category;","/home/sonu/opayl/html/frontend/src/components/utils/Formats.js",[],[],"/home/sonu/opayl/html/frontend/src/components/utils/Loader.js",["206"],[],"import React, { useEffect } from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst Loader = (props) => {\n  const [open, setOpen] = React.useState(false);\n  useEffect(()=>{\n    setOpen(props.open);\n  },[open])\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <>\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n        onClick={handleClose}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n\nexport default Loader;\n","/home/sonu/opayl/html/frontend/src/components/utils/Skeletons.js",["207"],[],"import React, { useEffect, useState } from 'react';\nimport Skeleton from '@mui/material/Skeleton';\nimport Stack from '@mui/material/Stack';\n\nconst Skeletons = (props) => {\n\n  const [settings, setSettings] = useState(null)\n\n  useEffect(() => {\n    setSettings(props.skeletons);\n  })\n\n  return (\n    <Stack spacing={1} className={`m-3`}>\n      {settings && settings.length >0?\n        (settings.map((setting, index) => (\n          <Skeleton key={`skeleton-${index}`} animation=\"wave\" variant={setting.variant} width={setting.width} height={setting.height} />\n        )))\n        :<></>\n      }\n      \n    </Stack>\n  );\n}\n\nexport default Skeletons","/home/sonu/opayl/html/frontend/src/redux/actions/budgetAction.js",["208","209","210","211","212","213","214","215","216","217","218","219"],[],"/home/sonu/opayl/html/frontend/src/redux/reducers/index.js",[],[],"/home/sonu/opayl/html/frontend/src/redux/actions/authAction.js",[],[],"/home/sonu/opayl/html/frontend/src/components/layouts/Menu.js",["220"],[],"/home/sonu/opayl/html/frontend/src/components/Colors.js",[],[],"/home/sonu/opayl/html/frontend/src/redux/urls.js",[],[],"/home/sonu/opayl/html/frontend/src/redux/types.js",[],[],"/home/sonu/opayl/html/frontend/src/redux/reducers/authReducers.js",["221"],[],"/home/sonu/opayl/html/frontend/src/redux/reducers/budgetReducers.js",["222","223","224","225","226","227","228","229","230","231","232","233","234"],[],"/home/sonu/opayl/html/frontend/src/components/AuthVerification/AuthVarificationForm.jsx",["235","236"],[],"/home/sonu/opayl/html/frontend/src/components/AuthenticateEnable/TwoFactorEnable.jsx",["237","238"],[],{"ruleId":"239","severity":1,"message":"240","line":8,"column":3,"nodeType":"241","messageId":"242","endLine":8,"endColumn":16},{"ruleId":"239","severity":1,"message":"243","line":26,"column":8,"nodeType":"241","messageId":"242","endLine":26,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":34,"column":6,"nodeType":"246","endLine":34,"endColumn":18,"suggestions":"247"},{"ruleId":"239","severity":1,"message":"248","line":49,"column":9,"nodeType":"241","messageId":"242","endLine":49,"endColumn":18},{"ruleId":"239","severity":1,"message":"249","line":53,"column":9,"nodeType":"241","messageId":"242","endLine":53,"endColumn":19},{"ruleId":"239","severity":1,"message":"250","line":57,"column":9,"nodeType":"241","messageId":"242","endLine":57,"endColumn":21},{"ruleId":"244","severity":1,"message":"251","line":144,"column":6,"nodeType":"246","endLine":144,"endColumn":8,"suggestions":"252"},{"ruleId":"244","severity":1,"message":"253","line":14,"column":19,"nodeType":"254","endLine":14,"endColumn":20},{"ruleId":"244","severity":1,"message":"255","line":45,"column":6,"nodeType":"246","endLine":45,"endColumn":18,"suggestions":"256"},{"ruleId":"239","severity":1,"message":"257","line":11,"column":9,"nodeType":"241","messageId":"242","endLine":11,"endColumn":17},{"ruleId":"244","severity":1,"message":"258","line":13,"column":5,"nodeType":"241","endLine":13,"endColumn":14,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":19,"column":42,"nodeType":"262","messageId":"263","endLine":19,"endColumn":44},{"ruleId":"260","severity":1,"message":"261","line":22,"column":41,"nodeType":"262","messageId":"263","endLine":22,"endColumn":43},{"ruleId":"260","severity":1,"message":"261","line":48,"column":36,"nodeType":"262","messageId":"263","endLine":48,"endColumn":38},{"ruleId":"244","severity":1,"message":"264","line":9,"column":5,"nodeType":"241","endLine":9,"endColumn":14,"suggestions":"265"},{"ruleId":"260","severity":1,"message":"261","line":15,"column":42,"nodeType":"262","messageId":"263","endLine":15,"endColumn":44},{"ruleId":"260","severity":1,"message":"261","line":18,"column":41,"nodeType":"262","messageId":"263","endLine":18,"endColumn":43},{"ruleId":"244","severity":1,"message":"264","line":7,"column":5,"nodeType":"241","endLine":7,"endColumn":14,"suggestions":"266"},{"ruleId":"260","severity":1,"message":"261","line":15,"column":42,"nodeType":"262","messageId":"263","endLine":15,"endColumn":44},{"ruleId":"260","severity":1,"message":"261","line":18,"column":41,"nodeType":"262","messageId":"263","endLine":18,"endColumn":43},{"ruleId":"260","severity":1,"message":"261","line":24,"column":41,"nodeType":"262","messageId":"263","endLine":24,"endColumn":43},{"ruleId":"244","severity":1,"message":"267","line":17,"column":8,"nodeType":"246","endLine":17,"endColumn":24,"suggestions":"268"},{"ruleId":"244","severity":1,"message":"267","line":17,"column":6,"nodeType":"246","endLine":17,"endColumn":22,"suggestions":"269"},{"ruleId":"244","severity":1,"message":"270","line":9,"column":5,"nodeType":"246","endLine":9,"endColumn":11,"suggestions":"271"},{"ruleId":"244","severity":1,"message":"272","line":9,"column":3,"nodeType":"241","endLine":9,"endColumn":12,"suggestions":"273"},{"ruleId":"239","severity":1,"message":"274","line":3,"column":5,"nodeType":"241","messageId":"242","endLine":3,"endColumn":13},{"ruleId":"239","severity":1,"message":"275","line":4,"column":5,"nodeType":"241","messageId":"242","endLine":4,"endColumn":15},{"ruleId":"239","severity":1,"message":"276","line":5,"column":5,"nodeType":"241","messageId":"242","endLine":5,"endColumn":25},{"ruleId":"239","severity":1,"message":"277","line":6,"column":5,"nodeType":"241","messageId":"242","endLine":6,"endColumn":19},{"ruleId":"239","severity":1,"message":"278","line":7,"column":5,"nodeType":"241","messageId":"242","endLine":7,"endColumn":18},{"ruleId":"239","severity":1,"message":"279","line":8,"column":5,"nodeType":"241","messageId":"242","endLine":8,"endColumn":19},{"ruleId":"239","severity":1,"message":"280","line":9,"column":5,"nodeType":"241","messageId":"242","endLine":9,"endColumn":14},{"ruleId":"239","severity":1,"message":"281","line":10,"column":5,"nodeType":"241","messageId":"242","endLine":10,"endColumn":18},{"ruleId":"239","severity":1,"message":"282","line":11,"column":5,"nodeType":"241","messageId":"242","endLine":11,"endColumn":16},{"ruleId":"239","severity":1,"message":"283","line":12,"column":5,"nodeType":"241","messageId":"242","endLine":12,"endColumn":18},{"ruleId":"239","severity":1,"message":"284","line":13,"column":5,"nodeType":"241","messageId":"242","endLine":13,"endColumn":20},{"ruleId":"239","severity":1,"message":"285","line":14,"column":5,"nodeType":"241","messageId":"242","endLine":14,"endColumn":24},{"ruleId":"239","severity":1,"message":"286","line":1,"column":27,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"288","line":28,"column":1,"nodeType":"289","endLine":91,"endColumn":2},{"ruleId":"239","severity":1,"message":"274","line":3,"column":3,"nodeType":"241","messageId":"242","endLine":3,"endColumn":11},{"ruleId":"239","severity":1,"message":"275","line":4,"column":3,"nodeType":"241","messageId":"242","endLine":4,"endColumn":13},{"ruleId":"239","severity":1,"message":"276","line":5,"column":3,"nodeType":"241","messageId":"242","endLine":5,"endColumn":23},{"ruleId":"239","severity":1,"message":"277","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":17},{"ruleId":"239","severity":1,"message":"278","line":7,"column":3,"nodeType":"241","messageId":"242","endLine":7,"endColumn":16},{"ruleId":"239","severity":1,"message":"279","line":8,"column":3,"nodeType":"241","messageId":"242","endLine":8,"endColumn":17},{"ruleId":"239","severity":1,"message":"280","line":9,"column":3,"nodeType":"241","messageId":"242","endLine":9,"endColumn":12},{"ruleId":"239","severity":1,"message":"283","line":10,"column":3,"nodeType":"241","messageId":"242","endLine":10,"endColumn":16},{"ruleId":"239","severity":1,"message":"290","line":11,"column":3,"nodeType":"241","messageId":"242","endLine":11,"endColumn":17},{"ruleId":"239","severity":1,"message":"282","line":13,"column":3,"nodeType":"241","messageId":"242","endLine":13,"endColumn":14},{"ruleId":"239","severity":1,"message":"284","line":14,"column":3,"nodeType":"241","messageId":"242","endLine":14,"endColumn":18},{"ruleId":"239","severity":1,"message":"285","line":15,"column":3,"nodeType":"241","messageId":"242","endLine":15,"endColumn":22},{"ruleId":"287","severity":1,"message":"291","line":22,"column":1,"nodeType":"289","endLine":40,"endColumn":2},{"ruleId":"239","severity":1,"message":"286","line":1,"column":27,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"239","severity":1,"message":"292","line":8,"column":26,"nodeType":"241","messageId":"242","endLine":8,"endColumn":31},{"ruleId":"244","severity":1,"message":"293","line":34,"column":8,"nodeType":"246","endLine":34,"endColumn":15,"suggestions":"294"},{"ruleId":"295","severity":1,"message":"296","line":98,"column":45,"nodeType":"297","endLine":98,"endColumn":66},"no-unused-vars","'NotFoundRoute' is defined but never used.","Identifier","unusedVar","'AuthVarificationForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["298"],"'addBudget' is assigned a value but never used.","'saveBudget' is assigned a value but never used.","'removeBudget' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshBudget'. Either include it or remove the dependency array.",["299"],"Assignments to the 'inprocess' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'errorText' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["300"],"'location' is assigned a value but never used.","React Hook useEffect contains a call to 'setCategories'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.budgets, props.bindex] as a second argument to the useEffect Hook.",["301"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect contains a call to 'setCategories'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.budget.categories] as a second argument to the useEffect Hook.",["302"],["303"],"React Hook useEffect has missing dependencies: 'props.bindex', 'props.budgets', and 'props.cindex'. Either include them or remove the dependency array. If 'setCategory' needs the current value of 'props.budgets', you can also switch to useReducer instead of useState and read 'props.budgets' in the reducer.",["304"],["305"],"React Hook useEffect has a missing dependency: 'props.open'. Either include it or remove the dependency array. If 'setOpen' needs the current value of 'props.open', you can also switch to useReducer instead of useState and read 'props.open' in the reducer.",["306"],"React Hook useEffect contains a call to 'setSettings'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.skeletons] as a second argument to the useEffect Hook.",["307"],"'GET_DEBT' is defined but never used.","'GET_STOCKS' is defined but never used.","'GET_INTRINSIC_STOCKS' is defined but never used.","'GET_DATA_BANKS' is defined but never used.","'GET_SCREENERS' is defined but never used.","'GET_WATCH_LIST' is defined but never used.","'GET_BANKS' is defined but never used.","'REMOVE_BUDGET' is defined but never used.","'REMOVE_BANK' is defined but never used.","'GET_PORTFOLIO' is defined but never used.","'GET_STOCKS_LIST' is defined but never used.","'GET_DIVIDEND_STOCKS' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'LOGOUT_SUCCESS' is defined but never used.","Unexpected default export of anonymous function","'toast' is defined but never used.","React Hook useEffect has a missing dependency: 'loginId'. Either include it or remove the dependency array.",["308"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"317","fix":"319"},{"desc":"320","fix":"321"},{"desc":"320","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},"Update the dependencies array to be: [location.pathname, props.auth]",{"range":"329","text":"330"},"Update the dependencies array to be: [refreshBudget]",{"range":"331","text":"332"},"Update the dependencies array to be: [errorText, props, props.auth]",{"range":"333","text":"334"},"Add dependencies array: [props.budgets, props.bindex]",{"range":"335","text":"336"},"Add dependencies array: [props.budget.categories]",{"range":"337","text":"338"},{"range":"339","text":"338"},"Update the dependencies array to be: [category.items, props.bindex, props.budgets, props.cindex]",{"range":"340","text":"341"},{"range":"342","text":"341"},"Update the dependencies array to be: [open, props.open]",{"range":"343","text":"344"},"Add dependencies array: [props.skeletons]",{"range":"345","text":"346"},"Update the dependencies array to be: [loginId, props]",{"range":"347","text":"348"},[1192,1204],"[location.pathname, props.auth]",[3554,3556],"[refreshBudget]",[1242,1254],"[errorText, props, props.auth]",[472,472],", [props.budgets, props.bindex]",[309,309],", [props.budget.categories]",[254,254],[423,439],"[category.items, props.bindex, props.budgets, props.cindex]",[397,413],[277,283],"[open, props.open]",[280,280],", [props.skeletons]",[780,787],"[loginId, props]"]